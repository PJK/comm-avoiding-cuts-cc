
finish 100000

inputs
a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, 
b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, 
GND
end

outputs
m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17, m18, m19, m20, m21, m22, m23, 
end

outvalues
m0 1,  m1 0,  m2 0,  m3 0,  m4 0,  m5 0,  m6 0,  m7 0,  m8 0,  m9 0,  m10 0,  m11 0,  m12 0,  m13 1,  m14 1,  m15 1,  m16 1,  m17 1,  m18 1,  m19 1,  m20 1,  m21 1,  m22 1,  m23 1, 
end

initlist GND 0 0 end
initlist a0 0,0  19,1 end
 initlist a1 0,0  76,1 end
 initlist a2 0,0  48,1 end
 initlist a3 0,0  89,1 end
 initlist a4 0,0  24,1 end
 initlist a5 0,0  30,1 end
 initlist a6 0,0  77,1 end
 initlist a7 0,0  72,1 end
 initlist a8 0,0  93,1 end
 initlist a9 0,0  80,1 end
 initlist a10 0,0  3,1 end
 initlist a11 0,0  92,1 end

initlist b0 0,0  42,1 end
 initlist b1 0,0  53,1 end
 initlist b2 0,0  72,1 end
 initlist b3 0,0  63,1 end
 initlist b4 0,0  39,1 end
 initlist b5 0,0  42,1 end
 initlist b6 0,0  45,1 end
 initlist b7 0,0  88,1 end
 initlist b8 0,0  95,1 end
 initlist b9 0,0  61,1 end
 initlist b10 0,0  64,1 end
 initlist b11 0,0  11,1 end


netlist

// mux2x1 Bth0.0( PP_0_0, GND, a0, b0 )

inv(b0_n.Bth0.0, b0 )#5
and2(w0.Bth0.0, b0_n.Bth0.0, GND )#5
and2(w1.Bth0.0, b0, a0 )#5
or2(PP_0_0, w0.Bth0.0, w1.Bth0.0 )#5

// end mux2x1 Bth0.0


end

netlist

// mux2x1 Bth0.1( PP_0_1, GND, a1, b0 )

inv(b0_n.Bth0.1, b0 )#5
and2(w0.Bth0.1, b0_n.Bth0.1, GND )#5
and2(w1.Bth0.1, b0, a1 )#5
or2(PP_0_1, w0.Bth0.1, w1.Bth0.1 )#5

// end mux2x1 Bth0.1


end

netlist

// mux2x1 Bth0.2( PP_0_2, GND, a2, b0 )

inv(b0_n.Bth0.2, b0 )#5
and2(w0.Bth0.2, b0_n.Bth0.2, GND )#5
and2(w1.Bth0.2, b0, a2 )#5
or2(PP_0_2, w0.Bth0.2, w1.Bth0.2 )#5

// end mux2x1 Bth0.2


end

netlist

// mux2x1 Bth0.3( PP_0_3, GND, a3, b0 )

inv(b0_n.Bth0.3, b0 )#5
and2(w0.Bth0.3, b0_n.Bth0.3, GND )#5
and2(w1.Bth0.3, b0, a3 )#5
or2(PP_0_3, w0.Bth0.3, w1.Bth0.3 )#5

// end mux2x1 Bth0.3


end

netlist

// mux2x1 Bth0.4( PP_0_4, GND, a4, b0 )

inv(b0_n.Bth0.4, b0 )#5
and2(w0.Bth0.4, b0_n.Bth0.4, GND )#5
and2(w1.Bth0.4, b0, a4 )#5
or2(PP_0_4, w0.Bth0.4, w1.Bth0.4 )#5

// end mux2x1 Bth0.4


end

netlist

// mux2x1 Bth0.5( PP_0_5, GND, a5, b0 )

inv(b0_n.Bth0.5, b0 )#5
and2(w0.Bth0.5, b0_n.Bth0.5, GND )#5
and2(w1.Bth0.5, b0, a5 )#5
or2(PP_0_5, w0.Bth0.5, w1.Bth0.5 )#5

// end mux2x1 Bth0.5


end

netlist

// mux2x1 Bth0.6( PP_0_6, GND, a6, b0 )

inv(b0_n.Bth0.6, b0 )#5
and2(w0.Bth0.6, b0_n.Bth0.6, GND )#5
and2(w1.Bth0.6, b0, a6 )#5
or2(PP_0_6, w0.Bth0.6, w1.Bth0.6 )#5

// end mux2x1 Bth0.6


end

netlist

// mux2x1 Bth0.7( PP_0_7, GND, a7, b0 )

inv(b0_n.Bth0.7, b0 )#5
and2(w0.Bth0.7, b0_n.Bth0.7, GND )#5
and2(w1.Bth0.7, b0, a7 )#5
or2(PP_0_7, w0.Bth0.7, w1.Bth0.7 )#5

// end mux2x1 Bth0.7


end

netlist

// mux2x1 Bth0.8( PP_0_8, GND, a8, b0 )

inv(b0_n.Bth0.8, b0 )#5
and2(w0.Bth0.8, b0_n.Bth0.8, GND )#5
and2(w1.Bth0.8, b0, a8 )#5
or2(PP_0_8, w0.Bth0.8, w1.Bth0.8 )#5

// end mux2x1 Bth0.8


end

netlist

// mux2x1 Bth0.9( PP_0_9, GND, a9, b0 )

inv(b0_n.Bth0.9, b0 )#5
and2(w0.Bth0.9, b0_n.Bth0.9, GND )#5
and2(w1.Bth0.9, b0, a9 )#5
or2(PP_0_9, w0.Bth0.9, w1.Bth0.9 )#5

// end mux2x1 Bth0.9


end

netlist

// mux2x1 Bth0.10( PP_0_10, GND, a10, b0 )

inv(b0_n.Bth0.10, b0 )#5
and2(w0.Bth0.10, b0_n.Bth0.10, GND )#5
and2(w1.Bth0.10, b0, a10 )#5
or2(PP_0_10, w0.Bth0.10, w1.Bth0.10 )#5

// end mux2x1 Bth0.10


end

netlist

// mux2x1 Bth0.11( PP_0_11, GND, a11, b0 )

inv(b0_n.Bth0.11, b0 )#5
and2(w0.Bth0.11, b0_n.Bth0.11, GND )#5
and2(w1.Bth0.11, b0, a11 )#5
or2(PP_0_11, w0.Bth0.11, w1.Bth0.11 )#5

// end mux2x1 Bth0.11


end

netlist

// mux2x1 Bth0.12( PP_0_12, GND, GND, b0 )

inv(b0_n.Bth0.12, b0 )#5
and2(w0.Bth0.12, b0_n.Bth0.12, GND )#5
and2(w1.Bth0.12, b0, GND )#5
or2(PP_0_12, w0.Bth0.12, w1.Bth0.12 )#5

// end mux2x1 Bth0.12


end

netlist

// mux2x1 Bth0.13( PP_0_13, GND, GND, b0 )

inv(b0_n.Bth0.13, b0 )#5
and2(w0.Bth0.13, b0_n.Bth0.13, GND )#5
and2(w1.Bth0.13, b0, GND )#5
or2(PP_0_13, w0.Bth0.13, w1.Bth0.13 )#5

// end mux2x1 Bth0.13


end

netlist

// mux2x1 Bth0.14( PP_0_14, GND, GND, b0 )

inv(b0_n.Bth0.14, b0 )#5
and2(w0.Bth0.14, b0_n.Bth0.14, GND )#5
and2(w1.Bth0.14, b0, GND )#5
or2(PP_0_14, w0.Bth0.14, w1.Bth0.14 )#5

// end mux2x1 Bth0.14


end

netlist

// mux2x1 Bth0.15( PP_0_15, GND, GND, b0 )

inv(b0_n.Bth0.15, b0 )#5
and2(w0.Bth0.15, b0_n.Bth0.15, GND )#5
and2(w1.Bth0.15, b0, GND )#5
or2(PP_0_15, w0.Bth0.15, w1.Bth0.15 )#5

// end mux2x1 Bth0.15


end

netlist

// mux2x1 Bth0.16( PP_0_16, GND, GND, b0 )

inv(b0_n.Bth0.16, b0 )#5
and2(w0.Bth0.16, b0_n.Bth0.16, GND )#5
and2(w1.Bth0.16, b0, GND )#5
or2(PP_0_16, w0.Bth0.16, w1.Bth0.16 )#5

// end mux2x1 Bth0.16


end

netlist

// mux2x1 Bth0.17( PP_0_17, GND, GND, b0 )

inv(b0_n.Bth0.17, b0 )#5
and2(w0.Bth0.17, b0_n.Bth0.17, GND )#5
and2(w1.Bth0.17, b0, GND )#5
or2(PP_0_17, w0.Bth0.17, w1.Bth0.17 )#5

// end mux2x1 Bth0.17


end

netlist

// mux2x1 Bth0.18( PP_0_18, GND, GND, b0 )

inv(b0_n.Bth0.18, b0 )#5
and2(w0.Bth0.18, b0_n.Bth0.18, GND )#5
and2(w1.Bth0.18, b0, GND )#5
or2(PP_0_18, w0.Bth0.18, w1.Bth0.18 )#5

// end mux2x1 Bth0.18


end

netlist

// mux2x1 Bth0.19( PP_0_19, GND, GND, b0 )

inv(b0_n.Bth0.19, b0 )#5
and2(w0.Bth0.19, b0_n.Bth0.19, GND )#5
and2(w1.Bth0.19, b0, GND )#5
or2(PP_0_19, w0.Bth0.19, w1.Bth0.19 )#5

// end mux2x1 Bth0.19


end

netlist

// mux2x1 Bth0.20( PP_0_20, GND, GND, b0 )

inv(b0_n.Bth0.20, b0 )#5
and2(w0.Bth0.20, b0_n.Bth0.20, GND )#5
and2(w1.Bth0.20, b0, GND )#5
or2(PP_0_20, w0.Bth0.20, w1.Bth0.20 )#5

// end mux2x1 Bth0.20


end

netlist

// mux2x1 Bth0.21( PP_0_21, GND, GND, b0 )

inv(b0_n.Bth0.21, b0 )#5
and2(w0.Bth0.21, b0_n.Bth0.21, GND )#5
and2(w1.Bth0.21, b0, GND )#5
or2(PP_0_21, w0.Bth0.21, w1.Bth0.21 )#5

// end mux2x1 Bth0.21


end

netlist

// mux2x1 Bth0.22( PP_0_22, GND, GND, b0 )

inv(b0_n.Bth0.22, b0 )#5
and2(w0.Bth0.22, b0_n.Bth0.22, GND )#5
and2(w1.Bth0.22, b0, GND )#5
or2(PP_0_22, w0.Bth0.22, w1.Bth0.22 )#5

// end mux2x1 Bth0.22


end

netlist

// mux2x1 Bth0.23( PP_0_23, GND, GND, b0 )

inv(b0_n.Bth0.23, b0 )#5
and2(w0.Bth0.23, b0_n.Bth0.23, GND )#5
and2(w1.Bth0.23, b0, GND )#5
or2(PP_0_23, w0.Bth0.23, w1.Bth0.23 )#5

// end mux2x1 Bth0.23


end

netlist

// mux2x1 Bth1.0( PP_1_0, GND, GND, b1 )

inv(b1_n.Bth1.0, b1 )#5
and2(w0.Bth1.0, b1_n.Bth1.0, GND )#5
and2(w1.Bth1.0, b1, GND )#5
or2(PP_1_0, w0.Bth1.0, w1.Bth1.0 )#5

// end mux2x1 Bth1.0


end

netlist

// mux2x1 Bth1.1( PP_1_1, GND, a0, b1 )

inv(b1_n.Bth1.1, b1 )#5
and2(w0.Bth1.1, b1_n.Bth1.1, GND )#5
and2(w1.Bth1.1, b1, a0 )#5
or2(PP_1_1, w0.Bth1.1, w1.Bth1.1 )#5

// end mux2x1 Bth1.1


end

netlist

// mux2x1 Bth1.2( PP_1_2, GND, a1, b1 )

inv(b1_n.Bth1.2, b1 )#5
and2(w0.Bth1.2, b1_n.Bth1.2, GND )#5
and2(w1.Bth1.2, b1, a1 )#5
or2(PP_1_2, w0.Bth1.2, w1.Bth1.2 )#5

// end mux2x1 Bth1.2


end

netlist

// mux2x1 Bth1.3( PP_1_3, GND, a2, b1 )

inv(b1_n.Bth1.3, b1 )#5
and2(w0.Bth1.3, b1_n.Bth1.3, GND )#5
and2(w1.Bth1.3, b1, a2 )#5
or2(PP_1_3, w0.Bth1.3, w1.Bth1.3 )#5

// end mux2x1 Bth1.3


end

netlist

// mux2x1 Bth1.4( PP_1_4, GND, a3, b1 )

inv(b1_n.Bth1.4, b1 )#5
and2(w0.Bth1.4, b1_n.Bth1.4, GND )#5
and2(w1.Bth1.4, b1, a3 )#5
or2(PP_1_4, w0.Bth1.4, w1.Bth1.4 )#5

// end mux2x1 Bth1.4


end

netlist

// mux2x1 Bth1.5( PP_1_5, GND, a4, b1 )

inv(b1_n.Bth1.5, b1 )#5
and2(w0.Bth1.5, b1_n.Bth1.5, GND )#5
and2(w1.Bth1.5, b1, a4 )#5
or2(PP_1_5, w0.Bth1.5, w1.Bth1.5 )#5

// end mux2x1 Bth1.5


end

netlist

// mux2x1 Bth1.6( PP_1_6, GND, a5, b1 )

inv(b1_n.Bth1.6, b1 )#5
and2(w0.Bth1.6, b1_n.Bth1.6, GND )#5
and2(w1.Bth1.6, b1, a5 )#5
or2(PP_1_6, w0.Bth1.6, w1.Bth1.6 )#5

// end mux2x1 Bth1.6


end

netlist

// mux2x1 Bth1.7( PP_1_7, GND, a6, b1 )

inv(b1_n.Bth1.7, b1 )#5
and2(w0.Bth1.7, b1_n.Bth1.7, GND )#5
and2(w1.Bth1.7, b1, a6 )#5
or2(PP_1_7, w0.Bth1.7, w1.Bth1.7 )#5

// end mux2x1 Bth1.7


end

netlist

// mux2x1 Bth1.8( PP_1_8, GND, a7, b1 )

inv(b1_n.Bth1.8, b1 )#5
and2(w0.Bth1.8, b1_n.Bth1.8, GND )#5
and2(w1.Bth1.8, b1, a7 )#5
or2(PP_1_8, w0.Bth1.8, w1.Bth1.8 )#5

// end mux2x1 Bth1.8


end

netlist

// mux2x1 Bth1.9( PP_1_9, GND, a8, b1 )

inv(b1_n.Bth1.9, b1 )#5
and2(w0.Bth1.9, b1_n.Bth1.9, GND )#5
and2(w1.Bth1.9, b1, a8 )#5
or2(PP_1_9, w0.Bth1.9, w1.Bth1.9 )#5

// end mux2x1 Bth1.9


end

netlist

// mux2x1 Bth1.10( PP_1_10, GND, a9, b1 )

inv(b1_n.Bth1.10, b1 )#5
and2(w0.Bth1.10, b1_n.Bth1.10, GND )#5
and2(w1.Bth1.10, b1, a9 )#5
or2(PP_1_10, w0.Bth1.10, w1.Bth1.10 )#5

// end mux2x1 Bth1.10


end

netlist

// mux2x1 Bth1.11( PP_1_11, GND, a10, b1 )

inv(b1_n.Bth1.11, b1 )#5
and2(w0.Bth1.11, b1_n.Bth1.11, GND )#5
and2(w1.Bth1.11, b1, a10 )#5
or2(PP_1_11, w0.Bth1.11, w1.Bth1.11 )#5

// end mux2x1 Bth1.11


end

netlist

// mux2x1 Bth1.12( PP_1_12, GND, a11, b1 )

inv(b1_n.Bth1.12, b1 )#5
and2(w0.Bth1.12, b1_n.Bth1.12, GND )#5
and2(w1.Bth1.12, b1, a11 )#5
or2(PP_1_12, w0.Bth1.12, w1.Bth1.12 )#5

// end mux2x1 Bth1.12


end

netlist

// mux2x1 Bth1.13( PP_1_13, GND, GND, b1 )

inv(b1_n.Bth1.13, b1 )#5
and2(w0.Bth1.13, b1_n.Bth1.13, GND )#5
and2(w1.Bth1.13, b1, GND )#5
or2(PP_1_13, w0.Bth1.13, w1.Bth1.13 )#5

// end mux2x1 Bth1.13


end

netlist

// mux2x1 Bth1.14( PP_1_14, GND, GND, b1 )

inv(b1_n.Bth1.14, b1 )#5
and2(w0.Bth1.14, b1_n.Bth1.14, GND )#5
and2(w1.Bth1.14, b1, GND )#5
or2(PP_1_14, w0.Bth1.14, w1.Bth1.14 )#5

// end mux2x1 Bth1.14


end

netlist

// mux2x1 Bth1.15( PP_1_15, GND, GND, b1 )

inv(b1_n.Bth1.15, b1 )#5
and2(w0.Bth1.15, b1_n.Bth1.15, GND )#5
and2(w1.Bth1.15, b1, GND )#5
or2(PP_1_15, w0.Bth1.15, w1.Bth1.15 )#5

// end mux2x1 Bth1.15


end

netlist

// mux2x1 Bth1.16( PP_1_16, GND, GND, b1 )

inv(b1_n.Bth1.16, b1 )#5
and2(w0.Bth1.16, b1_n.Bth1.16, GND )#5
and2(w1.Bth1.16, b1, GND )#5
or2(PP_1_16, w0.Bth1.16, w1.Bth1.16 )#5

// end mux2x1 Bth1.16


end

netlist

// mux2x1 Bth1.17( PP_1_17, GND, GND, b1 )

inv(b1_n.Bth1.17, b1 )#5
and2(w0.Bth1.17, b1_n.Bth1.17, GND )#5
and2(w1.Bth1.17, b1, GND )#5
or2(PP_1_17, w0.Bth1.17, w1.Bth1.17 )#5

// end mux2x1 Bth1.17


end

netlist

// mux2x1 Bth1.18( PP_1_18, GND, GND, b1 )

inv(b1_n.Bth1.18, b1 )#5
and2(w0.Bth1.18, b1_n.Bth1.18, GND )#5
and2(w1.Bth1.18, b1, GND )#5
or2(PP_1_18, w0.Bth1.18, w1.Bth1.18 )#5

// end mux2x1 Bth1.18


end

netlist

// mux2x1 Bth1.19( PP_1_19, GND, GND, b1 )

inv(b1_n.Bth1.19, b1 )#5
and2(w0.Bth1.19, b1_n.Bth1.19, GND )#5
and2(w1.Bth1.19, b1, GND )#5
or2(PP_1_19, w0.Bth1.19, w1.Bth1.19 )#5

// end mux2x1 Bth1.19


end

netlist

// mux2x1 Bth1.20( PP_1_20, GND, GND, b1 )

inv(b1_n.Bth1.20, b1 )#5
and2(w0.Bth1.20, b1_n.Bth1.20, GND )#5
and2(w1.Bth1.20, b1, GND )#5
or2(PP_1_20, w0.Bth1.20, w1.Bth1.20 )#5

// end mux2x1 Bth1.20


end

netlist

// mux2x1 Bth1.21( PP_1_21, GND, GND, b1 )

inv(b1_n.Bth1.21, b1 )#5
and2(w0.Bth1.21, b1_n.Bth1.21, GND )#5
and2(w1.Bth1.21, b1, GND )#5
or2(PP_1_21, w0.Bth1.21, w1.Bth1.21 )#5

// end mux2x1 Bth1.21


end

netlist

// mux2x1 Bth1.22( PP_1_22, GND, GND, b1 )

inv(b1_n.Bth1.22, b1 )#5
and2(w0.Bth1.22, b1_n.Bth1.22, GND )#5
and2(w1.Bth1.22, b1, GND )#5
or2(PP_1_22, w0.Bth1.22, w1.Bth1.22 )#5

// end mux2x1 Bth1.22


end

netlist

// mux2x1 Bth1.23( PP_1_23, GND, GND, b1 )

inv(b1_n.Bth1.23, b1 )#5
and2(w0.Bth1.23, b1_n.Bth1.23, GND )#5
and2(w1.Bth1.23, b1, GND )#5
or2(PP_1_23, w0.Bth1.23, w1.Bth1.23 )#5

// end mux2x1 Bth1.23


end

netlist

// mux2x1 Bth2.0( PP_2_0, GND, GND, b2 )

inv(b2_n.Bth2.0, b2 )#5
and2(w0.Bth2.0, b2_n.Bth2.0, GND )#5
and2(w1.Bth2.0, b2, GND )#5
or2(PP_2_0, w0.Bth2.0, w1.Bth2.0 )#5

// end mux2x1 Bth2.0


end

netlist

// mux2x1 Bth2.1( PP_2_1, GND, GND, b2 )

inv(b2_n.Bth2.1, b2 )#5
and2(w0.Bth2.1, b2_n.Bth2.1, GND )#5
and2(w1.Bth2.1, b2, GND )#5
or2(PP_2_1, w0.Bth2.1, w1.Bth2.1 )#5

// end mux2x1 Bth2.1


end

netlist

// mux2x1 Bth2.2( PP_2_2, GND, a0, b2 )

inv(b2_n.Bth2.2, b2 )#5
and2(w0.Bth2.2, b2_n.Bth2.2, GND )#5
and2(w1.Bth2.2, b2, a0 )#5
or2(PP_2_2, w0.Bth2.2, w1.Bth2.2 )#5

// end mux2x1 Bth2.2


end

netlist

// mux2x1 Bth2.3( PP_2_3, GND, a1, b2 )

inv(b2_n.Bth2.3, b2 )#5
and2(w0.Bth2.3, b2_n.Bth2.3, GND )#5
and2(w1.Bth2.3, b2, a1 )#5
or2(PP_2_3, w0.Bth2.3, w1.Bth2.3 )#5

// end mux2x1 Bth2.3


end

netlist

// mux2x1 Bth2.4( PP_2_4, GND, a2, b2 )

inv(b2_n.Bth2.4, b2 )#5
and2(w0.Bth2.4, b2_n.Bth2.4, GND )#5
and2(w1.Bth2.4, b2, a2 )#5
or2(PP_2_4, w0.Bth2.4, w1.Bth2.4 )#5

// end mux2x1 Bth2.4


end

netlist

// mux2x1 Bth2.5( PP_2_5, GND, a3, b2 )

inv(b2_n.Bth2.5, b2 )#5
and2(w0.Bth2.5, b2_n.Bth2.5, GND )#5
and2(w1.Bth2.5, b2, a3 )#5
or2(PP_2_5, w0.Bth2.5, w1.Bth2.5 )#5

// end mux2x1 Bth2.5


end

netlist

// mux2x1 Bth2.6( PP_2_6, GND, a4, b2 )

inv(b2_n.Bth2.6, b2 )#5
and2(w0.Bth2.6, b2_n.Bth2.6, GND )#5
and2(w1.Bth2.6, b2, a4 )#5
or2(PP_2_6, w0.Bth2.6, w1.Bth2.6 )#5

// end mux2x1 Bth2.6


end

netlist

// mux2x1 Bth2.7( PP_2_7, GND, a5, b2 )

inv(b2_n.Bth2.7, b2 )#5
and2(w0.Bth2.7, b2_n.Bth2.7, GND )#5
and2(w1.Bth2.7, b2, a5 )#5
or2(PP_2_7, w0.Bth2.7, w1.Bth2.7 )#5

// end mux2x1 Bth2.7


end

netlist

// mux2x1 Bth2.8( PP_2_8, GND, a6, b2 )

inv(b2_n.Bth2.8, b2 )#5
and2(w0.Bth2.8, b2_n.Bth2.8, GND )#5
and2(w1.Bth2.8, b2, a6 )#5
or2(PP_2_8, w0.Bth2.8, w1.Bth2.8 )#5

// end mux2x1 Bth2.8


end

netlist

// mux2x1 Bth2.9( PP_2_9, GND, a7, b2 )

inv(b2_n.Bth2.9, b2 )#5
and2(w0.Bth2.9, b2_n.Bth2.9, GND )#5
and2(w1.Bth2.9, b2, a7 )#5
or2(PP_2_9, w0.Bth2.9, w1.Bth2.9 )#5

// end mux2x1 Bth2.9


end

netlist

// mux2x1 Bth2.10( PP_2_10, GND, a8, b2 )

inv(b2_n.Bth2.10, b2 )#5
and2(w0.Bth2.10, b2_n.Bth2.10, GND )#5
and2(w1.Bth2.10, b2, a8 )#5
or2(PP_2_10, w0.Bth2.10, w1.Bth2.10 )#5

// end mux2x1 Bth2.10


end

netlist

// mux2x1 Bth2.11( PP_2_11, GND, a9, b2 )

inv(b2_n.Bth2.11, b2 )#5
and2(w0.Bth2.11, b2_n.Bth2.11, GND )#5
and2(w1.Bth2.11, b2, a9 )#5
or2(PP_2_11, w0.Bth2.11, w1.Bth2.11 )#5

// end mux2x1 Bth2.11


end

netlist

// mux2x1 Bth2.12( PP_2_12, GND, a10, b2 )

inv(b2_n.Bth2.12, b2 )#5
and2(w0.Bth2.12, b2_n.Bth2.12, GND )#5
and2(w1.Bth2.12, b2, a10 )#5
or2(PP_2_12, w0.Bth2.12, w1.Bth2.12 )#5

// end mux2x1 Bth2.12


end

netlist

// mux2x1 Bth2.13( PP_2_13, GND, a11, b2 )

inv(b2_n.Bth2.13, b2 )#5
and2(w0.Bth2.13, b2_n.Bth2.13, GND )#5
and2(w1.Bth2.13, b2, a11 )#5
or2(PP_2_13, w0.Bth2.13, w1.Bth2.13 )#5

// end mux2x1 Bth2.13


end

netlist

// mux2x1 Bth2.14( PP_2_14, GND, GND, b2 )

inv(b2_n.Bth2.14, b2 )#5
and2(w0.Bth2.14, b2_n.Bth2.14, GND )#5
and2(w1.Bth2.14, b2, GND )#5
or2(PP_2_14, w0.Bth2.14, w1.Bth2.14 )#5

// end mux2x1 Bth2.14


end

netlist

// mux2x1 Bth2.15( PP_2_15, GND, GND, b2 )

inv(b2_n.Bth2.15, b2 )#5
and2(w0.Bth2.15, b2_n.Bth2.15, GND )#5
and2(w1.Bth2.15, b2, GND )#5
or2(PP_2_15, w0.Bth2.15, w1.Bth2.15 )#5

// end mux2x1 Bth2.15


end

netlist

// mux2x1 Bth2.16( PP_2_16, GND, GND, b2 )

inv(b2_n.Bth2.16, b2 )#5
and2(w0.Bth2.16, b2_n.Bth2.16, GND )#5
and2(w1.Bth2.16, b2, GND )#5
or2(PP_2_16, w0.Bth2.16, w1.Bth2.16 )#5

// end mux2x1 Bth2.16


end

netlist

// mux2x1 Bth2.17( PP_2_17, GND, GND, b2 )

inv(b2_n.Bth2.17, b2 )#5
and2(w0.Bth2.17, b2_n.Bth2.17, GND )#5
and2(w1.Bth2.17, b2, GND )#5
or2(PP_2_17, w0.Bth2.17, w1.Bth2.17 )#5

// end mux2x1 Bth2.17


end

netlist

// mux2x1 Bth2.18( PP_2_18, GND, GND, b2 )

inv(b2_n.Bth2.18, b2 )#5
and2(w0.Bth2.18, b2_n.Bth2.18, GND )#5
and2(w1.Bth2.18, b2, GND )#5
or2(PP_2_18, w0.Bth2.18, w1.Bth2.18 )#5

// end mux2x1 Bth2.18


end

netlist

// mux2x1 Bth2.19( PP_2_19, GND, GND, b2 )

inv(b2_n.Bth2.19, b2 )#5
and2(w0.Bth2.19, b2_n.Bth2.19, GND )#5
and2(w1.Bth2.19, b2, GND )#5
or2(PP_2_19, w0.Bth2.19, w1.Bth2.19 )#5

// end mux2x1 Bth2.19


end

netlist

// mux2x1 Bth2.20( PP_2_20, GND, GND, b2 )

inv(b2_n.Bth2.20, b2 )#5
and2(w0.Bth2.20, b2_n.Bth2.20, GND )#5
and2(w1.Bth2.20, b2, GND )#5
or2(PP_2_20, w0.Bth2.20, w1.Bth2.20 )#5

// end mux2x1 Bth2.20


end

netlist

// mux2x1 Bth2.21( PP_2_21, GND, GND, b2 )

inv(b2_n.Bth2.21, b2 )#5
and2(w0.Bth2.21, b2_n.Bth2.21, GND )#5
and2(w1.Bth2.21, b2, GND )#5
or2(PP_2_21, w0.Bth2.21, w1.Bth2.21 )#5

// end mux2x1 Bth2.21


end

netlist

// mux2x1 Bth2.22( PP_2_22, GND, GND, b2 )

inv(b2_n.Bth2.22, b2 )#5
and2(w0.Bth2.22, b2_n.Bth2.22, GND )#5
and2(w1.Bth2.22, b2, GND )#5
or2(PP_2_22, w0.Bth2.22, w1.Bth2.22 )#5

// end mux2x1 Bth2.22


end

netlist

// mux2x1 Bth2.23( PP_2_23, GND, GND, b2 )

inv(b2_n.Bth2.23, b2 )#5
and2(w0.Bth2.23, b2_n.Bth2.23, GND )#5
and2(w1.Bth2.23, b2, GND )#5
or2(PP_2_23, w0.Bth2.23, w1.Bth2.23 )#5

// end mux2x1 Bth2.23


end

netlist

// mux2x1 Bth3.0( PP_3_0, GND, GND, b3 )

inv(b3_n.Bth3.0, b3 )#5
and2(w0.Bth3.0, b3_n.Bth3.0, GND )#5
and2(w1.Bth3.0, b3, GND )#5
or2(PP_3_0, w0.Bth3.0, w1.Bth3.0 )#5

// end mux2x1 Bth3.0


end

netlist

// mux2x1 Bth3.1( PP_3_1, GND, GND, b3 )

inv(b3_n.Bth3.1, b3 )#5
and2(w0.Bth3.1, b3_n.Bth3.1, GND )#5
and2(w1.Bth3.1, b3, GND )#5
or2(PP_3_1, w0.Bth3.1, w1.Bth3.1 )#5

// end mux2x1 Bth3.1


end

netlist

// mux2x1 Bth3.2( PP_3_2, GND, GND, b3 )

inv(b3_n.Bth3.2, b3 )#5
and2(w0.Bth3.2, b3_n.Bth3.2, GND )#5
and2(w1.Bth3.2, b3, GND )#5
or2(PP_3_2, w0.Bth3.2, w1.Bth3.2 )#5

// end mux2x1 Bth3.2


end

netlist

// mux2x1 Bth3.3( PP_3_3, GND, a0, b3 )

inv(b3_n.Bth3.3, b3 )#5
and2(w0.Bth3.3, b3_n.Bth3.3, GND )#5
and2(w1.Bth3.3, b3, a0 )#5
or2(PP_3_3, w0.Bth3.3, w1.Bth3.3 )#5

// end mux2x1 Bth3.3


end

netlist

// mux2x1 Bth3.4( PP_3_4, GND, a1, b3 )

inv(b3_n.Bth3.4, b3 )#5
and2(w0.Bth3.4, b3_n.Bth3.4, GND )#5
and2(w1.Bth3.4, b3, a1 )#5
or2(PP_3_4, w0.Bth3.4, w1.Bth3.4 )#5

// end mux2x1 Bth3.4


end

netlist

// mux2x1 Bth3.5( PP_3_5, GND, a2, b3 )

inv(b3_n.Bth3.5, b3 )#5
and2(w0.Bth3.5, b3_n.Bth3.5, GND )#5
and2(w1.Bth3.5, b3, a2 )#5
or2(PP_3_5, w0.Bth3.5, w1.Bth3.5 )#5

// end mux2x1 Bth3.5


end

netlist

// mux2x1 Bth3.6( PP_3_6, GND, a3, b3 )

inv(b3_n.Bth3.6, b3 )#5
and2(w0.Bth3.6, b3_n.Bth3.6, GND )#5
and2(w1.Bth3.6, b3, a3 )#5
or2(PP_3_6, w0.Bth3.6, w1.Bth3.6 )#5

// end mux2x1 Bth3.6


end

netlist

// mux2x1 Bth3.7( PP_3_7, GND, a4, b3 )

inv(b3_n.Bth3.7, b3 )#5
and2(w0.Bth3.7, b3_n.Bth3.7, GND )#5
and2(w1.Bth3.7, b3, a4 )#5
or2(PP_3_7, w0.Bth3.7, w1.Bth3.7 )#5

// end mux2x1 Bth3.7


end

netlist

// mux2x1 Bth3.8( PP_3_8, GND, a5, b3 )

inv(b3_n.Bth3.8, b3 )#5
and2(w0.Bth3.8, b3_n.Bth3.8, GND )#5
and2(w1.Bth3.8, b3, a5 )#5
or2(PP_3_8, w0.Bth3.8, w1.Bth3.8 )#5

// end mux2x1 Bth3.8


end

netlist

// mux2x1 Bth3.9( PP_3_9, GND, a6, b3 )

inv(b3_n.Bth3.9, b3 )#5
and2(w0.Bth3.9, b3_n.Bth3.9, GND )#5
and2(w1.Bth3.9, b3, a6 )#5
or2(PP_3_9, w0.Bth3.9, w1.Bth3.9 )#5

// end mux2x1 Bth3.9


end

netlist

// mux2x1 Bth3.10( PP_3_10, GND, a7, b3 )

inv(b3_n.Bth3.10, b3 )#5
and2(w0.Bth3.10, b3_n.Bth3.10, GND )#5
and2(w1.Bth3.10, b3, a7 )#5
or2(PP_3_10, w0.Bth3.10, w1.Bth3.10 )#5

// end mux2x1 Bth3.10


end

netlist

// mux2x1 Bth3.11( PP_3_11, GND, a8, b3 )

inv(b3_n.Bth3.11, b3 )#5
and2(w0.Bth3.11, b3_n.Bth3.11, GND )#5
and2(w1.Bth3.11, b3, a8 )#5
or2(PP_3_11, w0.Bth3.11, w1.Bth3.11 )#5

// end mux2x1 Bth3.11


end

netlist

// mux2x1 Bth3.12( PP_3_12, GND, a9, b3 )

inv(b3_n.Bth3.12, b3 )#5
and2(w0.Bth3.12, b3_n.Bth3.12, GND )#5
and2(w1.Bth3.12, b3, a9 )#5
or2(PP_3_12, w0.Bth3.12, w1.Bth3.12 )#5

// end mux2x1 Bth3.12


end

netlist

// mux2x1 Bth3.13( PP_3_13, GND, a10, b3 )

inv(b3_n.Bth3.13, b3 )#5
and2(w0.Bth3.13, b3_n.Bth3.13, GND )#5
and2(w1.Bth3.13, b3, a10 )#5
or2(PP_3_13, w0.Bth3.13, w1.Bth3.13 )#5

// end mux2x1 Bth3.13


end

netlist

// mux2x1 Bth3.14( PP_3_14, GND, a11, b3 )

inv(b3_n.Bth3.14, b3 )#5
and2(w0.Bth3.14, b3_n.Bth3.14, GND )#5
and2(w1.Bth3.14, b3, a11 )#5
or2(PP_3_14, w0.Bth3.14, w1.Bth3.14 )#5

// end mux2x1 Bth3.14


end

netlist

// mux2x1 Bth3.15( PP_3_15, GND, GND, b3 )

inv(b3_n.Bth3.15, b3 )#5
and2(w0.Bth3.15, b3_n.Bth3.15, GND )#5
and2(w1.Bth3.15, b3, GND )#5
or2(PP_3_15, w0.Bth3.15, w1.Bth3.15 )#5

// end mux2x1 Bth3.15


end

netlist

// mux2x1 Bth3.16( PP_3_16, GND, GND, b3 )

inv(b3_n.Bth3.16, b3 )#5
and2(w0.Bth3.16, b3_n.Bth3.16, GND )#5
and2(w1.Bth3.16, b3, GND )#5
or2(PP_3_16, w0.Bth3.16, w1.Bth3.16 )#5

// end mux2x1 Bth3.16


end

netlist

// mux2x1 Bth3.17( PP_3_17, GND, GND, b3 )

inv(b3_n.Bth3.17, b3 )#5
and2(w0.Bth3.17, b3_n.Bth3.17, GND )#5
and2(w1.Bth3.17, b3, GND )#5
or2(PP_3_17, w0.Bth3.17, w1.Bth3.17 )#5

// end mux2x1 Bth3.17


end

netlist

// mux2x1 Bth3.18( PP_3_18, GND, GND, b3 )

inv(b3_n.Bth3.18, b3 )#5
and2(w0.Bth3.18, b3_n.Bth3.18, GND )#5
and2(w1.Bth3.18, b3, GND )#5
or2(PP_3_18, w0.Bth3.18, w1.Bth3.18 )#5

// end mux2x1 Bth3.18


end

netlist

// mux2x1 Bth3.19( PP_3_19, GND, GND, b3 )

inv(b3_n.Bth3.19, b3 )#5
and2(w0.Bth3.19, b3_n.Bth3.19, GND )#5
and2(w1.Bth3.19, b3, GND )#5
or2(PP_3_19, w0.Bth3.19, w1.Bth3.19 )#5

// end mux2x1 Bth3.19


end

netlist

// mux2x1 Bth3.20( PP_3_20, GND, GND, b3 )

inv(b3_n.Bth3.20, b3 )#5
and2(w0.Bth3.20, b3_n.Bth3.20, GND )#5
and2(w1.Bth3.20, b3, GND )#5
or2(PP_3_20, w0.Bth3.20, w1.Bth3.20 )#5

// end mux2x1 Bth3.20


end

netlist

// mux2x1 Bth3.21( PP_3_21, GND, GND, b3 )

inv(b3_n.Bth3.21, b3 )#5
and2(w0.Bth3.21, b3_n.Bth3.21, GND )#5
and2(w1.Bth3.21, b3, GND )#5
or2(PP_3_21, w0.Bth3.21, w1.Bth3.21 )#5

// end mux2x1 Bth3.21


end

netlist

// mux2x1 Bth3.22( PP_3_22, GND, GND, b3 )

inv(b3_n.Bth3.22, b3 )#5
and2(w0.Bth3.22, b3_n.Bth3.22, GND )#5
and2(w1.Bth3.22, b3, GND )#5
or2(PP_3_22, w0.Bth3.22, w1.Bth3.22 )#5

// end mux2x1 Bth3.22


end

netlist

// mux2x1 Bth3.23( PP_3_23, GND, GND, b3 )

inv(b3_n.Bth3.23, b3 )#5
and2(w0.Bth3.23, b3_n.Bth3.23, GND )#5
and2(w1.Bth3.23, b3, GND )#5
or2(PP_3_23, w0.Bth3.23, w1.Bth3.23 )#5

// end mux2x1 Bth3.23


end

netlist

// mux2x1 Bth4.0( PP_4_0, GND, GND, b4 )

inv(b4_n.Bth4.0, b4 )#5
and2(w0.Bth4.0, b4_n.Bth4.0, GND )#5
and2(w1.Bth4.0, b4, GND )#5
or2(PP_4_0, w0.Bth4.0, w1.Bth4.0 )#5

// end mux2x1 Bth4.0


end

netlist

// mux2x1 Bth4.1( PP_4_1, GND, GND, b4 )

inv(b4_n.Bth4.1, b4 )#5
and2(w0.Bth4.1, b4_n.Bth4.1, GND )#5
and2(w1.Bth4.1, b4, GND )#5
or2(PP_4_1, w0.Bth4.1, w1.Bth4.1 )#5

// end mux2x1 Bth4.1


end

netlist

// mux2x1 Bth4.2( PP_4_2, GND, GND, b4 )

inv(b4_n.Bth4.2, b4 )#5
and2(w0.Bth4.2, b4_n.Bth4.2, GND )#5
and2(w1.Bth4.2, b4, GND )#5
or2(PP_4_2, w0.Bth4.2, w1.Bth4.2 )#5

// end mux2x1 Bth4.2


end

netlist

// mux2x1 Bth4.3( PP_4_3, GND, GND, b4 )

inv(b4_n.Bth4.3, b4 )#5
and2(w0.Bth4.3, b4_n.Bth4.3, GND )#5
and2(w1.Bth4.3, b4, GND )#5
or2(PP_4_3, w0.Bth4.3, w1.Bth4.3 )#5

// end mux2x1 Bth4.3


end

netlist

// mux2x1 Bth4.4( PP_4_4, GND, a0, b4 )

inv(b4_n.Bth4.4, b4 )#5
and2(w0.Bth4.4, b4_n.Bth4.4, GND )#5
and2(w1.Bth4.4, b4, a0 )#5
or2(PP_4_4, w0.Bth4.4, w1.Bth4.4 )#5

// end mux2x1 Bth4.4


end

netlist

// mux2x1 Bth4.5( PP_4_5, GND, a1, b4 )

inv(b4_n.Bth4.5, b4 )#5
and2(w0.Bth4.5, b4_n.Bth4.5, GND )#5
and2(w1.Bth4.5, b4, a1 )#5
or2(PP_4_5, w0.Bth4.5, w1.Bth4.5 )#5

// end mux2x1 Bth4.5


end

netlist

// mux2x1 Bth4.6( PP_4_6, GND, a2, b4 )

inv(b4_n.Bth4.6, b4 )#5
and2(w0.Bth4.6, b4_n.Bth4.6, GND )#5
and2(w1.Bth4.6, b4, a2 )#5
or2(PP_4_6, w0.Bth4.6, w1.Bth4.6 )#5

// end mux2x1 Bth4.6


end

netlist

// mux2x1 Bth4.7( PP_4_7, GND, a3, b4 )

inv(b4_n.Bth4.7, b4 )#5
and2(w0.Bth4.7, b4_n.Bth4.7, GND )#5
and2(w1.Bth4.7, b4, a3 )#5
or2(PP_4_7, w0.Bth4.7, w1.Bth4.7 )#5

// end mux2x1 Bth4.7


end

netlist

// mux2x1 Bth4.8( PP_4_8, GND, a4, b4 )

inv(b4_n.Bth4.8, b4 )#5
and2(w0.Bth4.8, b4_n.Bth4.8, GND )#5
and2(w1.Bth4.8, b4, a4 )#5
or2(PP_4_8, w0.Bth4.8, w1.Bth4.8 )#5

// end mux2x1 Bth4.8


end

netlist

// mux2x1 Bth4.9( PP_4_9, GND, a5, b4 )

inv(b4_n.Bth4.9, b4 )#5
and2(w0.Bth4.9, b4_n.Bth4.9, GND )#5
and2(w1.Bth4.9, b4, a5 )#5
or2(PP_4_9, w0.Bth4.9, w1.Bth4.9 )#5

// end mux2x1 Bth4.9


end

netlist

// mux2x1 Bth4.10( PP_4_10, GND, a6, b4 )

inv(b4_n.Bth4.10, b4 )#5
and2(w0.Bth4.10, b4_n.Bth4.10, GND )#5
and2(w1.Bth4.10, b4, a6 )#5
or2(PP_4_10, w0.Bth4.10, w1.Bth4.10 )#5

// end mux2x1 Bth4.10


end

netlist

// mux2x1 Bth4.11( PP_4_11, GND, a7, b4 )

inv(b4_n.Bth4.11, b4 )#5
and2(w0.Bth4.11, b4_n.Bth4.11, GND )#5
and2(w1.Bth4.11, b4, a7 )#5
or2(PP_4_11, w0.Bth4.11, w1.Bth4.11 )#5

// end mux2x1 Bth4.11


end

netlist

// mux2x1 Bth4.12( PP_4_12, GND, a8, b4 )

inv(b4_n.Bth4.12, b4 )#5
and2(w0.Bth4.12, b4_n.Bth4.12, GND )#5
and2(w1.Bth4.12, b4, a8 )#5
or2(PP_4_12, w0.Bth4.12, w1.Bth4.12 )#5

// end mux2x1 Bth4.12


end

netlist

// mux2x1 Bth4.13( PP_4_13, GND, a9, b4 )

inv(b4_n.Bth4.13, b4 )#5
and2(w0.Bth4.13, b4_n.Bth4.13, GND )#5
and2(w1.Bth4.13, b4, a9 )#5
or2(PP_4_13, w0.Bth4.13, w1.Bth4.13 )#5

// end mux2x1 Bth4.13


end

netlist

// mux2x1 Bth4.14( PP_4_14, GND, a10, b4 )

inv(b4_n.Bth4.14, b4 )#5
and2(w0.Bth4.14, b4_n.Bth4.14, GND )#5
and2(w1.Bth4.14, b4, a10 )#5
or2(PP_4_14, w0.Bth4.14, w1.Bth4.14 )#5

// end mux2x1 Bth4.14


end

netlist

// mux2x1 Bth4.15( PP_4_15, GND, a11, b4 )

inv(b4_n.Bth4.15, b4 )#5
and2(w0.Bth4.15, b4_n.Bth4.15, GND )#5
and2(w1.Bth4.15, b4, a11 )#5
or2(PP_4_15, w0.Bth4.15, w1.Bth4.15 )#5

// end mux2x1 Bth4.15


end

netlist

// mux2x1 Bth4.16( PP_4_16, GND, GND, b4 )

inv(b4_n.Bth4.16, b4 )#5
and2(w0.Bth4.16, b4_n.Bth4.16, GND )#5
and2(w1.Bth4.16, b4, GND )#5
or2(PP_4_16, w0.Bth4.16, w1.Bth4.16 )#5

// end mux2x1 Bth4.16


end

netlist

// mux2x1 Bth4.17( PP_4_17, GND, GND, b4 )

inv(b4_n.Bth4.17, b4 )#5
and2(w0.Bth4.17, b4_n.Bth4.17, GND )#5
and2(w1.Bth4.17, b4, GND )#5
or2(PP_4_17, w0.Bth4.17, w1.Bth4.17 )#5

// end mux2x1 Bth4.17


end

netlist

// mux2x1 Bth4.18( PP_4_18, GND, GND, b4 )

inv(b4_n.Bth4.18, b4 )#5
and2(w0.Bth4.18, b4_n.Bth4.18, GND )#5
and2(w1.Bth4.18, b4, GND )#5
or2(PP_4_18, w0.Bth4.18, w1.Bth4.18 )#5

// end mux2x1 Bth4.18


end

netlist

// mux2x1 Bth4.19( PP_4_19, GND, GND, b4 )

inv(b4_n.Bth4.19, b4 )#5
and2(w0.Bth4.19, b4_n.Bth4.19, GND )#5
and2(w1.Bth4.19, b4, GND )#5
or2(PP_4_19, w0.Bth4.19, w1.Bth4.19 )#5

// end mux2x1 Bth4.19


end

netlist

// mux2x1 Bth4.20( PP_4_20, GND, GND, b4 )

inv(b4_n.Bth4.20, b4 )#5
and2(w0.Bth4.20, b4_n.Bth4.20, GND )#5
and2(w1.Bth4.20, b4, GND )#5
or2(PP_4_20, w0.Bth4.20, w1.Bth4.20 )#5

// end mux2x1 Bth4.20


end

netlist

// mux2x1 Bth4.21( PP_4_21, GND, GND, b4 )

inv(b4_n.Bth4.21, b4 )#5
and2(w0.Bth4.21, b4_n.Bth4.21, GND )#5
and2(w1.Bth4.21, b4, GND )#5
or2(PP_4_21, w0.Bth4.21, w1.Bth4.21 )#5

// end mux2x1 Bth4.21


end

netlist

// mux2x1 Bth4.22( PP_4_22, GND, GND, b4 )

inv(b4_n.Bth4.22, b4 )#5
and2(w0.Bth4.22, b4_n.Bth4.22, GND )#5
and2(w1.Bth4.22, b4, GND )#5
or2(PP_4_22, w0.Bth4.22, w1.Bth4.22 )#5

// end mux2x1 Bth4.22


end

netlist

// mux2x1 Bth4.23( PP_4_23, GND, GND, b4 )

inv(b4_n.Bth4.23, b4 )#5
and2(w0.Bth4.23, b4_n.Bth4.23, GND )#5
and2(w1.Bth4.23, b4, GND )#5
or2(PP_4_23, w0.Bth4.23, w1.Bth4.23 )#5

// end mux2x1 Bth4.23


end

netlist

// mux2x1 Bth5.0( PP_5_0, GND, GND, b5 )

inv(b5_n.Bth5.0, b5 )#5
and2(w0.Bth5.0, b5_n.Bth5.0, GND )#5
and2(w1.Bth5.0, b5, GND )#5
or2(PP_5_0, w0.Bth5.0, w1.Bth5.0 )#5

// end mux2x1 Bth5.0


end

netlist

// mux2x1 Bth5.1( PP_5_1, GND, GND, b5 )

inv(b5_n.Bth5.1, b5 )#5
and2(w0.Bth5.1, b5_n.Bth5.1, GND )#5
and2(w1.Bth5.1, b5, GND )#5
or2(PP_5_1, w0.Bth5.1, w1.Bth5.1 )#5

// end mux2x1 Bth5.1


end

netlist

// mux2x1 Bth5.2( PP_5_2, GND, GND, b5 )

inv(b5_n.Bth5.2, b5 )#5
and2(w0.Bth5.2, b5_n.Bth5.2, GND )#5
and2(w1.Bth5.2, b5, GND )#5
or2(PP_5_2, w0.Bth5.2, w1.Bth5.2 )#5

// end mux2x1 Bth5.2


end

netlist

// mux2x1 Bth5.3( PP_5_3, GND, GND, b5 )

inv(b5_n.Bth5.3, b5 )#5
and2(w0.Bth5.3, b5_n.Bth5.3, GND )#5
and2(w1.Bth5.3, b5, GND )#5
or2(PP_5_3, w0.Bth5.3, w1.Bth5.3 )#5

// end mux2x1 Bth5.3


end

netlist

// mux2x1 Bth5.4( PP_5_4, GND, GND, b5 )

inv(b5_n.Bth5.4, b5 )#5
and2(w0.Bth5.4, b5_n.Bth5.4, GND )#5
and2(w1.Bth5.4, b5, GND )#5
or2(PP_5_4, w0.Bth5.4, w1.Bth5.4 )#5

// end mux2x1 Bth5.4


end

netlist

// mux2x1 Bth5.5( PP_5_5, GND, a0, b5 )

inv(b5_n.Bth5.5, b5 )#5
and2(w0.Bth5.5, b5_n.Bth5.5, GND )#5
and2(w1.Bth5.5, b5, a0 )#5
or2(PP_5_5, w0.Bth5.5, w1.Bth5.5 )#5

// end mux2x1 Bth5.5


end

netlist

// mux2x1 Bth5.6( PP_5_6, GND, a1, b5 )

inv(b5_n.Bth5.6, b5 )#5
and2(w0.Bth5.6, b5_n.Bth5.6, GND )#5
and2(w1.Bth5.6, b5, a1 )#5
or2(PP_5_6, w0.Bth5.6, w1.Bth5.6 )#5

// end mux2x1 Bth5.6


end

netlist

// mux2x1 Bth5.7( PP_5_7, GND, a2, b5 )

inv(b5_n.Bth5.7, b5 )#5
and2(w0.Bth5.7, b5_n.Bth5.7, GND )#5
and2(w1.Bth5.7, b5, a2 )#5
or2(PP_5_7, w0.Bth5.7, w1.Bth5.7 )#5

// end mux2x1 Bth5.7


end

netlist

// mux2x1 Bth5.8( PP_5_8, GND, a3, b5 )

inv(b5_n.Bth5.8, b5 )#5
and2(w0.Bth5.8, b5_n.Bth5.8, GND )#5
and2(w1.Bth5.8, b5, a3 )#5
or2(PP_5_8, w0.Bth5.8, w1.Bth5.8 )#5

// end mux2x1 Bth5.8


end

netlist

// mux2x1 Bth5.9( PP_5_9, GND, a4, b5 )

inv(b5_n.Bth5.9, b5 )#5
and2(w0.Bth5.9, b5_n.Bth5.9, GND )#5
and2(w1.Bth5.9, b5, a4 )#5
or2(PP_5_9, w0.Bth5.9, w1.Bth5.9 )#5

// end mux2x1 Bth5.9


end

netlist

// mux2x1 Bth5.10( PP_5_10, GND, a5, b5 )

inv(b5_n.Bth5.10, b5 )#5
and2(w0.Bth5.10, b5_n.Bth5.10, GND )#5
and2(w1.Bth5.10, b5, a5 )#5
or2(PP_5_10, w0.Bth5.10, w1.Bth5.10 )#5

// end mux2x1 Bth5.10


end

netlist

// mux2x1 Bth5.11( PP_5_11, GND, a6, b5 )

inv(b5_n.Bth5.11, b5 )#5
and2(w0.Bth5.11, b5_n.Bth5.11, GND )#5
and2(w1.Bth5.11, b5, a6 )#5
or2(PP_5_11, w0.Bth5.11, w1.Bth5.11 )#5

// end mux2x1 Bth5.11


end

netlist

// mux2x1 Bth5.12( PP_5_12, GND, a7, b5 )

inv(b5_n.Bth5.12, b5 )#5
and2(w0.Bth5.12, b5_n.Bth5.12, GND )#5
and2(w1.Bth5.12, b5, a7 )#5
or2(PP_5_12, w0.Bth5.12, w1.Bth5.12 )#5

// end mux2x1 Bth5.12


end

netlist

// mux2x1 Bth5.13( PP_5_13, GND, a8, b5 )

inv(b5_n.Bth5.13, b5 )#5
and2(w0.Bth5.13, b5_n.Bth5.13, GND )#5
and2(w1.Bth5.13, b5, a8 )#5
or2(PP_5_13, w0.Bth5.13, w1.Bth5.13 )#5

// end mux2x1 Bth5.13


end

netlist

// mux2x1 Bth5.14( PP_5_14, GND, a9, b5 )

inv(b5_n.Bth5.14, b5 )#5
and2(w0.Bth5.14, b5_n.Bth5.14, GND )#5
and2(w1.Bth5.14, b5, a9 )#5
or2(PP_5_14, w0.Bth5.14, w1.Bth5.14 )#5

// end mux2x1 Bth5.14


end

netlist

// mux2x1 Bth5.15( PP_5_15, GND, a10, b5 )

inv(b5_n.Bth5.15, b5 )#5
and2(w0.Bth5.15, b5_n.Bth5.15, GND )#5
and2(w1.Bth5.15, b5, a10 )#5
or2(PP_5_15, w0.Bth5.15, w1.Bth5.15 )#5

// end mux2x1 Bth5.15


end

netlist

// mux2x1 Bth5.16( PP_5_16, GND, a11, b5 )

inv(b5_n.Bth5.16, b5 )#5
and2(w0.Bth5.16, b5_n.Bth5.16, GND )#5
and2(w1.Bth5.16, b5, a11 )#5
or2(PP_5_16, w0.Bth5.16, w1.Bth5.16 )#5

// end mux2x1 Bth5.16


end

netlist

// mux2x1 Bth5.17( PP_5_17, GND, GND, b5 )

inv(b5_n.Bth5.17, b5 )#5
and2(w0.Bth5.17, b5_n.Bth5.17, GND )#5
and2(w1.Bth5.17, b5, GND )#5
or2(PP_5_17, w0.Bth5.17, w1.Bth5.17 )#5

// end mux2x1 Bth5.17


end

netlist

// mux2x1 Bth5.18( PP_5_18, GND, GND, b5 )

inv(b5_n.Bth5.18, b5 )#5
and2(w0.Bth5.18, b5_n.Bth5.18, GND )#5
and2(w1.Bth5.18, b5, GND )#5
or2(PP_5_18, w0.Bth5.18, w1.Bth5.18 )#5

// end mux2x1 Bth5.18


end

netlist

// mux2x1 Bth5.19( PP_5_19, GND, GND, b5 )

inv(b5_n.Bth5.19, b5 )#5
and2(w0.Bth5.19, b5_n.Bth5.19, GND )#5
and2(w1.Bth5.19, b5, GND )#5
or2(PP_5_19, w0.Bth5.19, w1.Bth5.19 )#5

// end mux2x1 Bth5.19


end

netlist

// mux2x1 Bth5.20( PP_5_20, GND, GND, b5 )

inv(b5_n.Bth5.20, b5 )#5
and2(w0.Bth5.20, b5_n.Bth5.20, GND )#5
and2(w1.Bth5.20, b5, GND )#5
or2(PP_5_20, w0.Bth5.20, w1.Bth5.20 )#5

// end mux2x1 Bth5.20


end

netlist

// mux2x1 Bth5.21( PP_5_21, GND, GND, b5 )

inv(b5_n.Bth5.21, b5 )#5
and2(w0.Bth5.21, b5_n.Bth5.21, GND )#5
and2(w1.Bth5.21, b5, GND )#5
or2(PP_5_21, w0.Bth5.21, w1.Bth5.21 )#5

// end mux2x1 Bth5.21


end

netlist

// mux2x1 Bth5.22( PP_5_22, GND, GND, b5 )

inv(b5_n.Bth5.22, b5 )#5
and2(w0.Bth5.22, b5_n.Bth5.22, GND )#5
and2(w1.Bth5.22, b5, GND )#5
or2(PP_5_22, w0.Bth5.22, w1.Bth5.22 )#5

// end mux2x1 Bth5.22


end

netlist

// mux2x1 Bth5.23( PP_5_23, GND, GND, b5 )

inv(b5_n.Bth5.23, b5 )#5
and2(w0.Bth5.23, b5_n.Bth5.23, GND )#5
and2(w1.Bth5.23, b5, GND )#5
or2(PP_5_23, w0.Bth5.23, w1.Bth5.23 )#5

// end mux2x1 Bth5.23


end

netlist

// mux2x1 Bth6.0( PP_6_0, GND, GND, b6 )

inv(b6_n.Bth6.0, b6 )#5
and2(w0.Bth6.0, b6_n.Bth6.0, GND )#5
and2(w1.Bth6.0, b6, GND )#5
or2(PP_6_0, w0.Bth6.0, w1.Bth6.0 )#5

// end mux2x1 Bth6.0


end

netlist

// mux2x1 Bth6.1( PP_6_1, GND, GND, b6 )

inv(b6_n.Bth6.1, b6 )#5
and2(w0.Bth6.1, b6_n.Bth6.1, GND )#5
and2(w1.Bth6.1, b6, GND )#5
or2(PP_6_1, w0.Bth6.1, w1.Bth6.1 )#5

// end mux2x1 Bth6.1


end

netlist

// mux2x1 Bth6.2( PP_6_2, GND, GND, b6 )

inv(b6_n.Bth6.2, b6 )#5
and2(w0.Bth6.2, b6_n.Bth6.2, GND )#5
and2(w1.Bth6.2, b6, GND )#5
or2(PP_6_2, w0.Bth6.2, w1.Bth6.2 )#5

// end mux2x1 Bth6.2


end

netlist

// mux2x1 Bth6.3( PP_6_3, GND, GND, b6 )

inv(b6_n.Bth6.3, b6 )#5
and2(w0.Bth6.3, b6_n.Bth6.3, GND )#5
and2(w1.Bth6.3, b6, GND )#5
or2(PP_6_3, w0.Bth6.3, w1.Bth6.3 )#5

// end mux2x1 Bth6.3


end

netlist

// mux2x1 Bth6.4( PP_6_4, GND, GND, b6 )

inv(b6_n.Bth6.4, b6 )#5
and2(w0.Bth6.4, b6_n.Bth6.4, GND )#5
and2(w1.Bth6.4, b6, GND )#5
or2(PP_6_4, w0.Bth6.4, w1.Bth6.4 )#5

// end mux2x1 Bth6.4


end

netlist

// mux2x1 Bth6.5( PP_6_5, GND, GND, b6 )

inv(b6_n.Bth6.5, b6 )#5
and2(w0.Bth6.5, b6_n.Bth6.5, GND )#5
and2(w1.Bth6.5, b6, GND )#5
or2(PP_6_5, w0.Bth6.5, w1.Bth6.5 )#5

// end mux2x1 Bth6.5


end

netlist

// mux2x1 Bth6.6( PP_6_6, GND, a0, b6 )

inv(b6_n.Bth6.6, b6 )#5
and2(w0.Bth6.6, b6_n.Bth6.6, GND )#5
and2(w1.Bth6.6, b6, a0 )#5
or2(PP_6_6, w0.Bth6.6, w1.Bth6.6 )#5

// end mux2x1 Bth6.6


end

netlist

// mux2x1 Bth6.7( PP_6_7, GND, a1, b6 )

inv(b6_n.Bth6.7, b6 )#5
and2(w0.Bth6.7, b6_n.Bth6.7, GND )#5
and2(w1.Bth6.7, b6, a1 )#5
or2(PP_6_7, w0.Bth6.7, w1.Bth6.7 )#5

// end mux2x1 Bth6.7


end

netlist

// mux2x1 Bth6.8( PP_6_8, GND, a2, b6 )

inv(b6_n.Bth6.8, b6 )#5
and2(w0.Bth6.8, b6_n.Bth6.8, GND )#5
and2(w1.Bth6.8, b6, a2 )#5
or2(PP_6_8, w0.Bth6.8, w1.Bth6.8 )#5

// end mux2x1 Bth6.8


end

netlist

// mux2x1 Bth6.9( PP_6_9, GND, a3, b6 )

inv(b6_n.Bth6.9, b6 )#5
and2(w0.Bth6.9, b6_n.Bth6.9, GND )#5
and2(w1.Bth6.9, b6, a3 )#5
or2(PP_6_9, w0.Bth6.9, w1.Bth6.9 )#5

// end mux2x1 Bth6.9


end

netlist

// mux2x1 Bth6.10( PP_6_10, GND, a4, b6 )

inv(b6_n.Bth6.10, b6 )#5
and2(w0.Bth6.10, b6_n.Bth6.10, GND )#5
and2(w1.Bth6.10, b6, a4 )#5
or2(PP_6_10, w0.Bth6.10, w1.Bth6.10 )#5

// end mux2x1 Bth6.10


end

netlist

// mux2x1 Bth6.11( PP_6_11, GND, a5, b6 )

inv(b6_n.Bth6.11, b6 )#5
and2(w0.Bth6.11, b6_n.Bth6.11, GND )#5
and2(w1.Bth6.11, b6, a5 )#5
or2(PP_6_11, w0.Bth6.11, w1.Bth6.11 )#5

// end mux2x1 Bth6.11


end

netlist

// mux2x1 Bth6.12( PP_6_12, GND, a6, b6 )

inv(b6_n.Bth6.12, b6 )#5
and2(w0.Bth6.12, b6_n.Bth6.12, GND )#5
and2(w1.Bth6.12, b6, a6 )#5
or2(PP_6_12, w0.Bth6.12, w1.Bth6.12 )#5

// end mux2x1 Bth6.12


end

netlist

// mux2x1 Bth6.13( PP_6_13, GND, a7, b6 )

inv(b6_n.Bth6.13, b6 )#5
and2(w0.Bth6.13, b6_n.Bth6.13, GND )#5
and2(w1.Bth6.13, b6, a7 )#5
or2(PP_6_13, w0.Bth6.13, w1.Bth6.13 )#5

// end mux2x1 Bth6.13


end

netlist

// mux2x1 Bth6.14( PP_6_14, GND, a8, b6 )

inv(b6_n.Bth6.14, b6 )#5
and2(w0.Bth6.14, b6_n.Bth6.14, GND )#5
and2(w1.Bth6.14, b6, a8 )#5
or2(PP_6_14, w0.Bth6.14, w1.Bth6.14 )#5

// end mux2x1 Bth6.14


end

netlist

// mux2x1 Bth6.15( PP_6_15, GND, a9, b6 )

inv(b6_n.Bth6.15, b6 )#5
and2(w0.Bth6.15, b6_n.Bth6.15, GND )#5
and2(w1.Bth6.15, b6, a9 )#5
or2(PP_6_15, w0.Bth6.15, w1.Bth6.15 )#5

// end mux2x1 Bth6.15


end

netlist

// mux2x1 Bth6.16( PP_6_16, GND, a10, b6 )

inv(b6_n.Bth6.16, b6 )#5
and2(w0.Bth6.16, b6_n.Bth6.16, GND )#5
and2(w1.Bth6.16, b6, a10 )#5
or2(PP_6_16, w0.Bth6.16, w1.Bth6.16 )#5

// end mux2x1 Bth6.16


end

netlist

// mux2x1 Bth6.17( PP_6_17, GND, a11, b6 )

inv(b6_n.Bth6.17, b6 )#5
and2(w0.Bth6.17, b6_n.Bth6.17, GND )#5
and2(w1.Bth6.17, b6, a11 )#5
or2(PP_6_17, w0.Bth6.17, w1.Bth6.17 )#5

// end mux2x1 Bth6.17


end

netlist

// mux2x1 Bth6.18( PP_6_18, GND, GND, b6 )

inv(b6_n.Bth6.18, b6 )#5
and2(w0.Bth6.18, b6_n.Bth6.18, GND )#5
and2(w1.Bth6.18, b6, GND )#5
or2(PP_6_18, w0.Bth6.18, w1.Bth6.18 )#5

// end mux2x1 Bth6.18


end

netlist

// mux2x1 Bth6.19( PP_6_19, GND, GND, b6 )

inv(b6_n.Bth6.19, b6 )#5
and2(w0.Bth6.19, b6_n.Bth6.19, GND )#5
and2(w1.Bth6.19, b6, GND )#5
or2(PP_6_19, w0.Bth6.19, w1.Bth6.19 )#5

// end mux2x1 Bth6.19


end

netlist

// mux2x1 Bth6.20( PP_6_20, GND, GND, b6 )

inv(b6_n.Bth6.20, b6 )#5
and2(w0.Bth6.20, b6_n.Bth6.20, GND )#5
and2(w1.Bth6.20, b6, GND )#5
or2(PP_6_20, w0.Bth6.20, w1.Bth6.20 )#5

// end mux2x1 Bth6.20


end

netlist

// mux2x1 Bth6.21( PP_6_21, GND, GND, b6 )

inv(b6_n.Bth6.21, b6 )#5
and2(w0.Bth6.21, b6_n.Bth6.21, GND )#5
and2(w1.Bth6.21, b6, GND )#5
or2(PP_6_21, w0.Bth6.21, w1.Bth6.21 )#5

// end mux2x1 Bth6.21


end

netlist

// mux2x1 Bth6.22( PP_6_22, GND, GND, b6 )

inv(b6_n.Bth6.22, b6 )#5
and2(w0.Bth6.22, b6_n.Bth6.22, GND )#5
and2(w1.Bth6.22, b6, GND )#5
or2(PP_6_22, w0.Bth6.22, w1.Bth6.22 )#5

// end mux2x1 Bth6.22


end

netlist

// mux2x1 Bth6.23( PP_6_23, GND, GND, b6 )

inv(b6_n.Bth6.23, b6 )#5
and2(w0.Bth6.23, b6_n.Bth6.23, GND )#5
and2(w1.Bth6.23, b6, GND )#5
or2(PP_6_23, w0.Bth6.23, w1.Bth6.23 )#5

// end mux2x1 Bth6.23


end

netlist

// mux2x1 Bth7.0( PP_7_0, GND, GND, b7 )

inv(b7_n.Bth7.0, b7 )#5
and2(w0.Bth7.0, b7_n.Bth7.0, GND )#5
and2(w1.Bth7.0, b7, GND )#5
or2(PP_7_0, w0.Bth7.0, w1.Bth7.0 )#5

// end mux2x1 Bth7.0


end

netlist

// mux2x1 Bth7.1( PP_7_1, GND, GND, b7 )

inv(b7_n.Bth7.1, b7 )#5
and2(w0.Bth7.1, b7_n.Bth7.1, GND )#5
and2(w1.Bth7.1, b7, GND )#5
or2(PP_7_1, w0.Bth7.1, w1.Bth7.1 )#5

// end mux2x1 Bth7.1


end

netlist

// mux2x1 Bth7.2( PP_7_2, GND, GND, b7 )

inv(b7_n.Bth7.2, b7 )#5
and2(w0.Bth7.2, b7_n.Bth7.2, GND )#5
and2(w1.Bth7.2, b7, GND )#5
or2(PP_7_2, w0.Bth7.2, w1.Bth7.2 )#5

// end mux2x1 Bth7.2


end

netlist

// mux2x1 Bth7.3( PP_7_3, GND, GND, b7 )

inv(b7_n.Bth7.3, b7 )#5
and2(w0.Bth7.3, b7_n.Bth7.3, GND )#5
and2(w1.Bth7.3, b7, GND )#5
or2(PP_7_3, w0.Bth7.3, w1.Bth7.3 )#5

// end mux2x1 Bth7.3


end

netlist

// mux2x1 Bth7.4( PP_7_4, GND, GND, b7 )

inv(b7_n.Bth7.4, b7 )#5
and2(w0.Bth7.4, b7_n.Bth7.4, GND )#5
and2(w1.Bth7.4, b7, GND )#5
or2(PP_7_4, w0.Bth7.4, w1.Bth7.4 )#5

// end mux2x1 Bth7.4


end

netlist

// mux2x1 Bth7.5( PP_7_5, GND, GND, b7 )

inv(b7_n.Bth7.5, b7 )#5
and2(w0.Bth7.5, b7_n.Bth7.5, GND )#5
and2(w1.Bth7.5, b7, GND )#5
or2(PP_7_5, w0.Bth7.5, w1.Bth7.5 )#5

// end mux2x1 Bth7.5


end

netlist

// mux2x1 Bth7.6( PP_7_6, GND, GND, b7 )

inv(b7_n.Bth7.6, b7 )#5
and2(w0.Bth7.6, b7_n.Bth7.6, GND )#5
and2(w1.Bth7.6, b7, GND )#5
or2(PP_7_6, w0.Bth7.6, w1.Bth7.6 )#5

// end mux2x1 Bth7.6


end

netlist

// mux2x1 Bth7.7( PP_7_7, GND, a0, b7 )

inv(b7_n.Bth7.7, b7 )#5
and2(w0.Bth7.7, b7_n.Bth7.7, GND )#5
and2(w1.Bth7.7, b7, a0 )#5
or2(PP_7_7, w0.Bth7.7, w1.Bth7.7 )#5

// end mux2x1 Bth7.7


end

netlist

// mux2x1 Bth7.8( PP_7_8, GND, a1, b7 )

inv(b7_n.Bth7.8, b7 )#5
and2(w0.Bth7.8, b7_n.Bth7.8, GND )#5
and2(w1.Bth7.8, b7, a1 )#5
or2(PP_7_8, w0.Bth7.8, w1.Bth7.8 )#5

// end mux2x1 Bth7.8


end

netlist

// mux2x1 Bth7.9( PP_7_9, GND, a2, b7 )

inv(b7_n.Bth7.9, b7 )#5
and2(w0.Bth7.9, b7_n.Bth7.9, GND )#5
and2(w1.Bth7.9, b7, a2 )#5
or2(PP_7_9, w0.Bth7.9, w1.Bth7.9 )#5

// end mux2x1 Bth7.9


end

netlist

// mux2x1 Bth7.10( PP_7_10, GND, a3, b7 )

inv(b7_n.Bth7.10, b7 )#5
and2(w0.Bth7.10, b7_n.Bth7.10, GND )#5
and2(w1.Bth7.10, b7, a3 )#5
or2(PP_7_10, w0.Bth7.10, w1.Bth7.10 )#5

// end mux2x1 Bth7.10


end

netlist

// mux2x1 Bth7.11( PP_7_11, GND, a4, b7 )

inv(b7_n.Bth7.11, b7 )#5
and2(w0.Bth7.11, b7_n.Bth7.11, GND )#5
and2(w1.Bth7.11, b7, a4 )#5
or2(PP_7_11, w0.Bth7.11, w1.Bth7.11 )#5

// end mux2x1 Bth7.11


end

netlist

// mux2x1 Bth7.12( PP_7_12, GND, a5, b7 )

inv(b7_n.Bth7.12, b7 )#5
and2(w0.Bth7.12, b7_n.Bth7.12, GND )#5
and2(w1.Bth7.12, b7, a5 )#5
or2(PP_7_12, w0.Bth7.12, w1.Bth7.12 )#5

// end mux2x1 Bth7.12


end

netlist

// mux2x1 Bth7.13( PP_7_13, GND, a6, b7 )

inv(b7_n.Bth7.13, b7 )#5
and2(w0.Bth7.13, b7_n.Bth7.13, GND )#5
and2(w1.Bth7.13, b7, a6 )#5
or2(PP_7_13, w0.Bth7.13, w1.Bth7.13 )#5

// end mux2x1 Bth7.13


end

netlist

// mux2x1 Bth7.14( PP_7_14, GND, a7, b7 )

inv(b7_n.Bth7.14, b7 )#5
and2(w0.Bth7.14, b7_n.Bth7.14, GND )#5
and2(w1.Bth7.14, b7, a7 )#5
or2(PP_7_14, w0.Bth7.14, w1.Bth7.14 )#5

// end mux2x1 Bth7.14


end

netlist

// mux2x1 Bth7.15( PP_7_15, GND, a8, b7 )

inv(b7_n.Bth7.15, b7 )#5
and2(w0.Bth7.15, b7_n.Bth7.15, GND )#5
and2(w1.Bth7.15, b7, a8 )#5
or2(PP_7_15, w0.Bth7.15, w1.Bth7.15 )#5

// end mux2x1 Bth7.15


end

netlist

// mux2x1 Bth7.16( PP_7_16, GND, a9, b7 )

inv(b7_n.Bth7.16, b7 )#5
and2(w0.Bth7.16, b7_n.Bth7.16, GND )#5
and2(w1.Bth7.16, b7, a9 )#5
or2(PP_7_16, w0.Bth7.16, w1.Bth7.16 )#5

// end mux2x1 Bth7.16


end

netlist

// mux2x1 Bth7.17( PP_7_17, GND, a10, b7 )

inv(b7_n.Bth7.17, b7 )#5
and2(w0.Bth7.17, b7_n.Bth7.17, GND )#5
and2(w1.Bth7.17, b7, a10 )#5
or2(PP_7_17, w0.Bth7.17, w1.Bth7.17 )#5

// end mux2x1 Bth7.17


end

netlist

// mux2x1 Bth7.18( PP_7_18, GND, a11, b7 )

inv(b7_n.Bth7.18, b7 )#5
and2(w0.Bth7.18, b7_n.Bth7.18, GND )#5
and2(w1.Bth7.18, b7, a11 )#5
or2(PP_7_18, w0.Bth7.18, w1.Bth7.18 )#5

// end mux2x1 Bth7.18


end

netlist

// mux2x1 Bth7.19( PP_7_19, GND, GND, b7 )

inv(b7_n.Bth7.19, b7 )#5
and2(w0.Bth7.19, b7_n.Bth7.19, GND )#5
and2(w1.Bth7.19, b7, GND )#5
or2(PP_7_19, w0.Bth7.19, w1.Bth7.19 )#5

// end mux2x1 Bth7.19


end

netlist

// mux2x1 Bth7.20( PP_7_20, GND, GND, b7 )

inv(b7_n.Bth7.20, b7 )#5
and2(w0.Bth7.20, b7_n.Bth7.20, GND )#5
and2(w1.Bth7.20, b7, GND )#5
or2(PP_7_20, w0.Bth7.20, w1.Bth7.20 )#5

// end mux2x1 Bth7.20


end

netlist

// mux2x1 Bth7.21( PP_7_21, GND, GND, b7 )

inv(b7_n.Bth7.21, b7 )#5
and2(w0.Bth7.21, b7_n.Bth7.21, GND )#5
and2(w1.Bth7.21, b7, GND )#5
or2(PP_7_21, w0.Bth7.21, w1.Bth7.21 )#5

// end mux2x1 Bth7.21


end

netlist

// mux2x1 Bth7.22( PP_7_22, GND, GND, b7 )

inv(b7_n.Bth7.22, b7 )#5
and2(w0.Bth7.22, b7_n.Bth7.22, GND )#5
and2(w1.Bth7.22, b7, GND )#5
or2(PP_7_22, w0.Bth7.22, w1.Bth7.22 )#5

// end mux2x1 Bth7.22


end

netlist

// mux2x1 Bth7.23( PP_7_23, GND, GND, b7 )

inv(b7_n.Bth7.23, b7 )#5
and2(w0.Bth7.23, b7_n.Bth7.23, GND )#5
and2(w1.Bth7.23, b7, GND )#5
or2(PP_7_23, w0.Bth7.23, w1.Bth7.23 )#5

// end mux2x1 Bth7.23


end

netlist

// mux2x1 Bth8.0( PP_8_0, GND, GND, b8 )

inv(b8_n.Bth8.0, b8 )#5
and2(w0.Bth8.0, b8_n.Bth8.0, GND )#5
and2(w1.Bth8.0, b8, GND )#5
or2(PP_8_0, w0.Bth8.0, w1.Bth8.0 )#5

// end mux2x1 Bth8.0


end

netlist

// mux2x1 Bth8.1( PP_8_1, GND, GND, b8 )

inv(b8_n.Bth8.1, b8 )#5
and2(w0.Bth8.1, b8_n.Bth8.1, GND )#5
and2(w1.Bth8.1, b8, GND )#5
or2(PP_8_1, w0.Bth8.1, w1.Bth8.1 )#5

// end mux2x1 Bth8.1


end

netlist

// mux2x1 Bth8.2( PP_8_2, GND, GND, b8 )

inv(b8_n.Bth8.2, b8 )#5
and2(w0.Bth8.2, b8_n.Bth8.2, GND )#5
and2(w1.Bth8.2, b8, GND )#5
or2(PP_8_2, w0.Bth8.2, w1.Bth8.2 )#5

// end mux2x1 Bth8.2


end

netlist

// mux2x1 Bth8.3( PP_8_3, GND, GND, b8 )

inv(b8_n.Bth8.3, b8 )#5
and2(w0.Bth8.3, b8_n.Bth8.3, GND )#5
and2(w1.Bth8.3, b8, GND )#5
or2(PP_8_3, w0.Bth8.3, w1.Bth8.3 )#5

// end mux2x1 Bth8.3


end

netlist

// mux2x1 Bth8.4( PP_8_4, GND, GND, b8 )

inv(b8_n.Bth8.4, b8 )#5
and2(w0.Bth8.4, b8_n.Bth8.4, GND )#5
and2(w1.Bth8.4, b8, GND )#5
or2(PP_8_4, w0.Bth8.4, w1.Bth8.4 )#5

// end mux2x1 Bth8.4


end

netlist

// mux2x1 Bth8.5( PP_8_5, GND, GND, b8 )

inv(b8_n.Bth8.5, b8 )#5
and2(w0.Bth8.5, b8_n.Bth8.5, GND )#5
and2(w1.Bth8.5, b8, GND )#5
or2(PP_8_5, w0.Bth8.5, w1.Bth8.5 )#5

// end mux2x1 Bth8.5


end

netlist

// mux2x1 Bth8.6( PP_8_6, GND, GND, b8 )

inv(b8_n.Bth8.6, b8 )#5
and2(w0.Bth8.6, b8_n.Bth8.6, GND )#5
and2(w1.Bth8.6, b8, GND )#5
or2(PP_8_6, w0.Bth8.6, w1.Bth8.6 )#5

// end mux2x1 Bth8.6


end

netlist

// mux2x1 Bth8.7( PP_8_7, GND, GND, b8 )

inv(b8_n.Bth8.7, b8 )#5
and2(w0.Bth8.7, b8_n.Bth8.7, GND )#5
and2(w1.Bth8.7, b8, GND )#5
or2(PP_8_7, w0.Bth8.7, w1.Bth8.7 )#5

// end mux2x1 Bth8.7


end

netlist

// mux2x1 Bth8.8( PP_8_8, GND, a0, b8 )

inv(b8_n.Bth8.8, b8 )#5
and2(w0.Bth8.8, b8_n.Bth8.8, GND )#5
and2(w1.Bth8.8, b8, a0 )#5
or2(PP_8_8, w0.Bth8.8, w1.Bth8.8 )#5

// end mux2x1 Bth8.8


end

netlist

// mux2x1 Bth8.9( PP_8_9, GND, a1, b8 )

inv(b8_n.Bth8.9, b8 )#5
and2(w0.Bth8.9, b8_n.Bth8.9, GND )#5
and2(w1.Bth8.9, b8, a1 )#5
or2(PP_8_9, w0.Bth8.9, w1.Bth8.9 )#5

// end mux2x1 Bth8.9


end

netlist

// mux2x1 Bth8.10( PP_8_10, GND, a2, b8 )

inv(b8_n.Bth8.10, b8 )#5
and2(w0.Bth8.10, b8_n.Bth8.10, GND )#5
and2(w1.Bth8.10, b8, a2 )#5
or2(PP_8_10, w0.Bth8.10, w1.Bth8.10 )#5

// end mux2x1 Bth8.10


end

netlist

// mux2x1 Bth8.11( PP_8_11, GND, a3, b8 )

inv(b8_n.Bth8.11, b8 )#5
and2(w0.Bth8.11, b8_n.Bth8.11, GND )#5
and2(w1.Bth8.11, b8, a3 )#5
or2(PP_8_11, w0.Bth8.11, w1.Bth8.11 )#5

// end mux2x1 Bth8.11


end

netlist

// mux2x1 Bth8.12( PP_8_12, GND, a4, b8 )

inv(b8_n.Bth8.12, b8 )#5
and2(w0.Bth8.12, b8_n.Bth8.12, GND )#5
and2(w1.Bth8.12, b8, a4 )#5
or2(PP_8_12, w0.Bth8.12, w1.Bth8.12 )#5

// end mux2x1 Bth8.12


end

netlist

// mux2x1 Bth8.13( PP_8_13, GND, a5, b8 )

inv(b8_n.Bth8.13, b8 )#5
and2(w0.Bth8.13, b8_n.Bth8.13, GND )#5
and2(w1.Bth8.13, b8, a5 )#5
or2(PP_8_13, w0.Bth8.13, w1.Bth8.13 )#5

// end mux2x1 Bth8.13


end

netlist

// mux2x1 Bth8.14( PP_8_14, GND, a6, b8 )

inv(b8_n.Bth8.14, b8 )#5
and2(w0.Bth8.14, b8_n.Bth8.14, GND )#5
and2(w1.Bth8.14, b8, a6 )#5
or2(PP_8_14, w0.Bth8.14, w1.Bth8.14 )#5

// end mux2x1 Bth8.14


end

netlist

// mux2x1 Bth8.15( PP_8_15, GND, a7, b8 )

inv(b8_n.Bth8.15, b8 )#5
and2(w0.Bth8.15, b8_n.Bth8.15, GND )#5
and2(w1.Bth8.15, b8, a7 )#5
or2(PP_8_15, w0.Bth8.15, w1.Bth8.15 )#5

// end mux2x1 Bth8.15


end

netlist

// mux2x1 Bth8.16( PP_8_16, GND, a8, b8 )

inv(b8_n.Bth8.16, b8 )#5
and2(w0.Bth8.16, b8_n.Bth8.16, GND )#5
and2(w1.Bth8.16, b8, a8 )#5
or2(PP_8_16, w0.Bth8.16, w1.Bth8.16 )#5

// end mux2x1 Bth8.16


end

netlist

// mux2x1 Bth8.17( PP_8_17, GND, a9, b8 )

inv(b8_n.Bth8.17, b8 )#5
and2(w0.Bth8.17, b8_n.Bth8.17, GND )#5
and2(w1.Bth8.17, b8, a9 )#5
or2(PP_8_17, w0.Bth8.17, w1.Bth8.17 )#5

// end mux2x1 Bth8.17


end

netlist

// mux2x1 Bth8.18( PP_8_18, GND, a10, b8 )

inv(b8_n.Bth8.18, b8 )#5
and2(w0.Bth8.18, b8_n.Bth8.18, GND )#5
and2(w1.Bth8.18, b8, a10 )#5
or2(PP_8_18, w0.Bth8.18, w1.Bth8.18 )#5

// end mux2x1 Bth8.18


end

netlist

// mux2x1 Bth8.19( PP_8_19, GND, a11, b8 )

inv(b8_n.Bth8.19, b8 )#5
and2(w0.Bth8.19, b8_n.Bth8.19, GND )#5
and2(w1.Bth8.19, b8, a11 )#5
or2(PP_8_19, w0.Bth8.19, w1.Bth8.19 )#5

// end mux2x1 Bth8.19


end

netlist

// mux2x1 Bth8.20( PP_8_20, GND, GND, b8 )

inv(b8_n.Bth8.20, b8 )#5
and2(w0.Bth8.20, b8_n.Bth8.20, GND )#5
and2(w1.Bth8.20, b8, GND )#5
or2(PP_8_20, w0.Bth8.20, w1.Bth8.20 )#5

// end mux2x1 Bth8.20


end

netlist

// mux2x1 Bth8.21( PP_8_21, GND, GND, b8 )

inv(b8_n.Bth8.21, b8 )#5
and2(w0.Bth8.21, b8_n.Bth8.21, GND )#5
and2(w1.Bth8.21, b8, GND )#5
or2(PP_8_21, w0.Bth8.21, w1.Bth8.21 )#5

// end mux2x1 Bth8.21


end

netlist

// mux2x1 Bth8.22( PP_8_22, GND, GND, b8 )

inv(b8_n.Bth8.22, b8 )#5
and2(w0.Bth8.22, b8_n.Bth8.22, GND )#5
and2(w1.Bth8.22, b8, GND )#5
or2(PP_8_22, w0.Bth8.22, w1.Bth8.22 )#5

// end mux2x1 Bth8.22


end

netlist

// mux2x1 Bth8.23( PP_8_23, GND, GND, b8 )

inv(b8_n.Bth8.23, b8 )#5
and2(w0.Bth8.23, b8_n.Bth8.23, GND )#5
and2(w1.Bth8.23, b8, GND )#5
or2(PP_8_23, w0.Bth8.23, w1.Bth8.23 )#5

// end mux2x1 Bth8.23


end

netlist

// mux2x1 Bth9.0( PP_9_0, GND, GND, b9 )

inv(b9_n.Bth9.0, b9 )#5
and2(w0.Bth9.0, b9_n.Bth9.0, GND )#5
and2(w1.Bth9.0, b9, GND )#5
or2(PP_9_0, w0.Bth9.0, w1.Bth9.0 )#5

// end mux2x1 Bth9.0


end

netlist

// mux2x1 Bth9.1( PP_9_1, GND, GND, b9 )

inv(b9_n.Bth9.1, b9 )#5
and2(w0.Bth9.1, b9_n.Bth9.1, GND )#5
and2(w1.Bth9.1, b9, GND )#5
or2(PP_9_1, w0.Bth9.1, w1.Bth9.1 )#5

// end mux2x1 Bth9.1


end

netlist

// mux2x1 Bth9.2( PP_9_2, GND, GND, b9 )

inv(b9_n.Bth9.2, b9 )#5
and2(w0.Bth9.2, b9_n.Bth9.2, GND )#5
and2(w1.Bth9.2, b9, GND )#5
or2(PP_9_2, w0.Bth9.2, w1.Bth9.2 )#5

// end mux2x1 Bth9.2


end

netlist

// mux2x1 Bth9.3( PP_9_3, GND, GND, b9 )

inv(b9_n.Bth9.3, b9 )#5
and2(w0.Bth9.3, b9_n.Bth9.3, GND )#5
and2(w1.Bth9.3, b9, GND )#5
or2(PP_9_3, w0.Bth9.3, w1.Bth9.3 )#5

// end mux2x1 Bth9.3


end

netlist

// mux2x1 Bth9.4( PP_9_4, GND, GND, b9 )

inv(b9_n.Bth9.4, b9 )#5
and2(w0.Bth9.4, b9_n.Bth9.4, GND )#5
and2(w1.Bth9.4, b9, GND )#5
or2(PP_9_4, w0.Bth9.4, w1.Bth9.4 )#5

// end mux2x1 Bth9.4


end

netlist

// mux2x1 Bth9.5( PP_9_5, GND, GND, b9 )

inv(b9_n.Bth9.5, b9 )#5
and2(w0.Bth9.5, b9_n.Bth9.5, GND )#5
and2(w1.Bth9.5, b9, GND )#5
or2(PP_9_5, w0.Bth9.5, w1.Bth9.5 )#5

// end mux2x1 Bth9.5


end

netlist

// mux2x1 Bth9.6( PP_9_6, GND, GND, b9 )

inv(b9_n.Bth9.6, b9 )#5
and2(w0.Bth9.6, b9_n.Bth9.6, GND )#5
and2(w1.Bth9.6, b9, GND )#5
or2(PP_9_6, w0.Bth9.6, w1.Bth9.6 )#5

// end mux2x1 Bth9.6


end

netlist

// mux2x1 Bth9.7( PP_9_7, GND, GND, b9 )

inv(b9_n.Bth9.7, b9 )#5
and2(w0.Bth9.7, b9_n.Bth9.7, GND )#5
and2(w1.Bth9.7, b9, GND )#5
or2(PP_9_7, w0.Bth9.7, w1.Bth9.7 )#5

// end mux2x1 Bth9.7


end

netlist

// mux2x1 Bth9.8( PP_9_8, GND, GND, b9 )

inv(b9_n.Bth9.8, b9 )#5
and2(w0.Bth9.8, b9_n.Bth9.8, GND )#5
and2(w1.Bth9.8, b9, GND )#5
or2(PP_9_8, w0.Bth9.8, w1.Bth9.8 )#5

// end mux2x1 Bth9.8


end

netlist

// mux2x1 Bth9.9( PP_9_9, GND, a0, b9 )

inv(b9_n.Bth9.9, b9 )#5
and2(w0.Bth9.9, b9_n.Bth9.9, GND )#5
and2(w1.Bth9.9, b9, a0 )#5
or2(PP_9_9, w0.Bth9.9, w1.Bth9.9 )#5

// end mux2x1 Bth9.9


end

netlist

// mux2x1 Bth9.10( PP_9_10, GND, a1, b9 )

inv(b9_n.Bth9.10, b9 )#5
and2(w0.Bth9.10, b9_n.Bth9.10, GND )#5
and2(w1.Bth9.10, b9, a1 )#5
or2(PP_9_10, w0.Bth9.10, w1.Bth9.10 )#5

// end mux2x1 Bth9.10


end

netlist

// mux2x1 Bth9.11( PP_9_11, GND, a2, b9 )

inv(b9_n.Bth9.11, b9 )#5
and2(w0.Bth9.11, b9_n.Bth9.11, GND )#5
and2(w1.Bth9.11, b9, a2 )#5
or2(PP_9_11, w0.Bth9.11, w1.Bth9.11 )#5

// end mux2x1 Bth9.11


end

netlist

// mux2x1 Bth9.12( PP_9_12, GND, a3, b9 )

inv(b9_n.Bth9.12, b9 )#5
and2(w0.Bth9.12, b9_n.Bth9.12, GND )#5
and2(w1.Bth9.12, b9, a3 )#5
or2(PP_9_12, w0.Bth9.12, w1.Bth9.12 )#5

// end mux2x1 Bth9.12


end

netlist

// mux2x1 Bth9.13( PP_9_13, GND, a4, b9 )

inv(b9_n.Bth9.13, b9 )#5
and2(w0.Bth9.13, b9_n.Bth9.13, GND )#5
and2(w1.Bth9.13, b9, a4 )#5
or2(PP_9_13, w0.Bth9.13, w1.Bth9.13 )#5

// end mux2x1 Bth9.13


end

netlist

// mux2x1 Bth9.14( PP_9_14, GND, a5, b9 )

inv(b9_n.Bth9.14, b9 )#5
and2(w0.Bth9.14, b9_n.Bth9.14, GND )#5
and2(w1.Bth9.14, b9, a5 )#5
or2(PP_9_14, w0.Bth9.14, w1.Bth9.14 )#5

// end mux2x1 Bth9.14


end

netlist

// mux2x1 Bth9.15( PP_9_15, GND, a6, b9 )

inv(b9_n.Bth9.15, b9 )#5
and2(w0.Bth9.15, b9_n.Bth9.15, GND )#5
and2(w1.Bth9.15, b9, a6 )#5
or2(PP_9_15, w0.Bth9.15, w1.Bth9.15 )#5

// end mux2x1 Bth9.15


end

netlist

// mux2x1 Bth9.16( PP_9_16, GND, a7, b9 )

inv(b9_n.Bth9.16, b9 )#5
and2(w0.Bth9.16, b9_n.Bth9.16, GND )#5
and2(w1.Bth9.16, b9, a7 )#5
or2(PP_9_16, w0.Bth9.16, w1.Bth9.16 )#5

// end mux2x1 Bth9.16


end

netlist

// mux2x1 Bth9.17( PP_9_17, GND, a8, b9 )

inv(b9_n.Bth9.17, b9 )#5
and2(w0.Bth9.17, b9_n.Bth9.17, GND )#5
and2(w1.Bth9.17, b9, a8 )#5
or2(PP_9_17, w0.Bth9.17, w1.Bth9.17 )#5

// end mux2x1 Bth9.17


end

netlist

// mux2x1 Bth9.18( PP_9_18, GND, a9, b9 )

inv(b9_n.Bth9.18, b9 )#5
and2(w0.Bth9.18, b9_n.Bth9.18, GND )#5
and2(w1.Bth9.18, b9, a9 )#5
or2(PP_9_18, w0.Bth9.18, w1.Bth9.18 )#5

// end mux2x1 Bth9.18


end

netlist

// mux2x1 Bth9.19( PP_9_19, GND, a10, b9 )

inv(b9_n.Bth9.19, b9 )#5
and2(w0.Bth9.19, b9_n.Bth9.19, GND )#5
and2(w1.Bth9.19, b9, a10 )#5
or2(PP_9_19, w0.Bth9.19, w1.Bth9.19 )#5

// end mux2x1 Bth9.19


end

netlist

// mux2x1 Bth9.20( PP_9_20, GND, a11, b9 )

inv(b9_n.Bth9.20, b9 )#5
and2(w0.Bth9.20, b9_n.Bth9.20, GND )#5
and2(w1.Bth9.20, b9, a11 )#5
or2(PP_9_20, w0.Bth9.20, w1.Bth9.20 )#5

// end mux2x1 Bth9.20


end

netlist

// mux2x1 Bth9.21( PP_9_21, GND, GND, b9 )

inv(b9_n.Bth9.21, b9 )#5
and2(w0.Bth9.21, b9_n.Bth9.21, GND )#5
and2(w1.Bth9.21, b9, GND )#5
or2(PP_9_21, w0.Bth9.21, w1.Bth9.21 )#5

// end mux2x1 Bth9.21


end

netlist

// mux2x1 Bth9.22( PP_9_22, GND, GND, b9 )

inv(b9_n.Bth9.22, b9 )#5
and2(w0.Bth9.22, b9_n.Bth9.22, GND )#5
and2(w1.Bth9.22, b9, GND )#5
or2(PP_9_22, w0.Bth9.22, w1.Bth9.22 )#5

// end mux2x1 Bth9.22


end

netlist

// mux2x1 Bth9.23( PP_9_23, GND, GND, b9 )

inv(b9_n.Bth9.23, b9 )#5
and2(w0.Bth9.23, b9_n.Bth9.23, GND )#5
and2(w1.Bth9.23, b9, GND )#5
or2(PP_9_23, w0.Bth9.23, w1.Bth9.23 )#5

// end mux2x1 Bth9.23


end

netlist

// mux2x1 Bth10.0( PP_10_0, GND, GND, b10 )

inv(b10_n.Bth10.0, b10 )#5
and2(w0.Bth10.0, b10_n.Bth10.0, GND )#5
and2(w1.Bth10.0, b10, GND )#5
or2(PP_10_0, w0.Bth10.0, w1.Bth10.0 )#5

// end mux2x1 Bth10.0


end

netlist

// mux2x1 Bth10.1( PP_10_1, GND, GND, b10 )

inv(b10_n.Bth10.1, b10 )#5
and2(w0.Bth10.1, b10_n.Bth10.1, GND )#5
and2(w1.Bth10.1, b10, GND )#5
or2(PP_10_1, w0.Bth10.1, w1.Bth10.1 )#5

// end mux2x1 Bth10.1


end

netlist

// mux2x1 Bth10.2( PP_10_2, GND, GND, b10 )

inv(b10_n.Bth10.2, b10 )#5
and2(w0.Bth10.2, b10_n.Bth10.2, GND )#5
and2(w1.Bth10.2, b10, GND )#5
or2(PP_10_2, w0.Bth10.2, w1.Bth10.2 )#5

// end mux2x1 Bth10.2


end

netlist

// mux2x1 Bth10.3( PP_10_3, GND, GND, b10 )

inv(b10_n.Bth10.3, b10 )#5
and2(w0.Bth10.3, b10_n.Bth10.3, GND )#5
and2(w1.Bth10.3, b10, GND )#5
or2(PP_10_3, w0.Bth10.3, w1.Bth10.3 )#5

// end mux2x1 Bth10.3


end

netlist

// mux2x1 Bth10.4( PP_10_4, GND, GND, b10 )

inv(b10_n.Bth10.4, b10 )#5
and2(w0.Bth10.4, b10_n.Bth10.4, GND )#5
and2(w1.Bth10.4, b10, GND )#5
or2(PP_10_4, w0.Bth10.4, w1.Bth10.4 )#5

// end mux2x1 Bth10.4


end

netlist

// mux2x1 Bth10.5( PP_10_5, GND, GND, b10 )

inv(b10_n.Bth10.5, b10 )#5
and2(w0.Bth10.5, b10_n.Bth10.5, GND )#5
and2(w1.Bth10.5, b10, GND )#5
or2(PP_10_5, w0.Bth10.5, w1.Bth10.5 )#5

// end mux2x1 Bth10.5


end

netlist

// mux2x1 Bth10.6( PP_10_6, GND, GND, b10 )

inv(b10_n.Bth10.6, b10 )#5
and2(w0.Bth10.6, b10_n.Bth10.6, GND )#5
and2(w1.Bth10.6, b10, GND )#5
or2(PP_10_6, w0.Bth10.6, w1.Bth10.6 )#5

// end mux2x1 Bth10.6


end

netlist

// mux2x1 Bth10.7( PP_10_7, GND, GND, b10 )

inv(b10_n.Bth10.7, b10 )#5
and2(w0.Bth10.7, b10_n.Bth10.7, GND )#5
and2(w1.Bth10.7, b10, GND )#5
or2(PP_10_7, w0.Bth10.7, w1.Bth10.7 )#5

// end mux2x1 Bth10.7


end

netlist

// mux2x1 Bth10.8( PP_10_8, GND, GND, b10 )

inv(b10_n.Bth10.8, b10 )#5
and2(w0.Bth10.8, b10_n.Bth10.8, GND )#5
and2(w1.Bth10.8, b10, GND )#5
or2(PP_10_8, w0.Bth10.8, w1.Bth10.8 )#5

// end mux2x1 Bth10.8


end

netlist

// mux2x1 Bth10.9( PP_10_9, GND, GND, b10 )

inv(b10_n.Bth10.9, b10 )#5
and2(w0.Bth10.9, b10_n.Bth10.9, GND )#5
and2(w1.Bth10.9, b10, GND )#5
or2(PP_10_9, w0.Bth10.9, w1.Bth10.9 )#5

// end mux2x1 Bth10.9


end

netlist

// mux2x1 Bth10.10( PP_10_10, GND, a0, b10 )

inv(b10_n.Bth10.10, b10 )#5
and2(w0.Bth10.10, b10_n.Bth10.10, GND )#5
and2(w1.Bth10.10, b10, a0 )#5
or2(PP_10_10, w0.Bth10.10, w1.Bth10.10 )#5

// end mux2x1 Bth10.10


end

netlist

// mux2x1 Bth10.11( PP_10_11, GND, a1, b10 )

inv(b10_n.Bth10.11, b10 )#5
and2(w0.Bth10.11, b10_n.Bth10.11, GND )#5
and2(w1.Bth10.11, b10, a1 )#5
or2(PP_10_11, w0.Bth10.11, w1.Bth10.11 )#5

// end mux2x1 Bth10.11


end

netlist

// mux2x1 Bth10.12( PP_10_12, GND, a2, b10 )

inv(b10_n.Bth10.12, b10 )#5
and2(w0.Bth10.12, b10_n.Bth10.12, GND )#5
and2(w1.Bth10.12, b10, a2 )#5
or2(PP_10_12, w0.Bth10.12, w1.Bth10.12 )#5

// end mux2x1 Bth10.12


end

netlist

// mux2x1 Bth10.13( PP_10_13, GND, a3, b10 )

inv(b10_n.Bth10.13, b10 )#5
and2(w0.Bth10.13, b10_n.Bth10.13, GND )#5
and2(w1.Bth10.13, b10, a3 )#5
or2(PP_10_13, w0.Bth10.13, w1.Bth10.13 )#5

// end mux2x1 Bth10.13


end

netlist

// mux2x1 Bth10.14( PP_10_14, GND, a4, b10 )

inv(b10_n.Bth10.14, b10 )#5
and2(w0.Bth10.14, b10_n.Bth10.14, GND )#5
and2(w1.Bth10.14, b10, a4 )#5
or2(PP_10_14, w0.Bth10.14, w1.Bth10.14 )#5

// end mux2x1 Bth10.14


end

netlist

// mux2x1 Bth10.15( PP_10_15, GND, a5, b10 )

inv(b10_n.Bth10.15, b10 )#5
and2(w0.Bth10.15, b10_n.Bth10.15, GND )#5
and2(w1.Bth10.15, b10, a5 )#5
or2(PP_10_15, w0.Bth10.15, w1.Bth10.15 )#5

// end mux2x1 Bth10.15


end

netlist

// mux2x1 Bth10.16( PP_10_16, GND, a6, b10 )

inv(b10_n.Bth10.16, b10 )#5
and2(w0.Bth10.16, b10_n.Bth10.16, GND )#5
and2(w1.Bth10.16, b10, a6 )#5
or2(PP_10_16, w0.Bth10.16, w1.Bth10.16 )#5

// end mux2x1 Bth10.16


end

netlist

// mux2x1 Bth10.17( PP_10_17, GND, a7, b10 )

inv(b10_n.Bth10.17, b10 )#5
and2(w0.Bth10.17, b10_n.Bth10.17, GND )#5
and2(w1.Bth10.17, b10, a7 )#5
or2(PP_10_17, w0.Bth10.17, w1.Bth10.17 )#5

// end mux2x1 Bth10.17


end

netlist

// mux2x1 Bth10.18( PP_10_18, GND, a8, b10 )

inv(b10_n.Bth10.18, b10 )#5
and2(w0.Bth10.18, b10_n.Bth10.18, GND )#5
and2(w1.Bth10.18, b10, a8 )#5
or2(PP_10_18, w0.Bth10.18, w1.Bth10.18 )#5

// end mux2x1 Bth10.18


end

netlist

// mux2x1 Bth10.19( PP_10_19, GND, a9, b10 )

inv(b10_n.Bth10.19, b10 )#5
and2(w0.Bth10.19, b10_n.Bth10.19, GND )#5
and2(w1.Bth10.19, b10, a9 )#5
or2(PP_10_19, w0.Bth10.19, w1.Bth10.19 )#5

// end mux2x1 Bth10.19


end

netlist

// mux2x1 Bth10.20( PP_10_20, GND, a10, b10 )

inv(b10_n.Bth10.20, b10 )#5
and2(w0.Bth10.20, b10_n.Bth10.20, GND )#5
and2(w1.Bth10.20, b10, a10 )#5
or2(PP_10_20, w0.Bth10.20, w1.Bth10.20 )#5

// end mux2x1 Bth10.20


end

netlist

// mux2x1 Bth10.21( PP_10_21, GND, a11, b10 )

inv(b10_n.Bth10.21, b10 )#5
and2(w0.Bth10.21, b10_n.Bth10.21, GND )#5
and2(w1.Bth10.21, b10, a11 )#5
or2(PP_10_21, w0.Bth10.21, w1.Bth10.21 )#5

// end mux2x1 Bth10.21


end

netlist

// mux2x1 Bth10.22( PP_10_22, GND, GND, b10 )

inv(b10_n.Bth10.22, b10 )#5
and2(w0.Bth10.22, b10_n.Bth10.22, GND )#5
and2(w1.Bth10.22, b10, GND )#5
or2(PP_10_22, w0.Bth10.22, w1.Bth10.22 )#5

// end mux2x1 Bth10.22


end

netlist

// mux2x1 Bth10.23( PP_10_23, GND, GND, b10 )

inv(b10_n.Bth10.23, b10 )#5
and2(w0.Bth10.23, b10_n.Bth10.23, GND )#5
and2(w1.Bth10.23, b10, GND )#5
or2(PP_10_23, w0.Bth10.23, w1.Bth10.23 )#5

// end mux2x1 Bth10.23


end

netlist

// mux2x1 Bth11.0( PP_11_0, GND, GND, b11 )

inv(b11_n.Bth11.0, b11 )#5
and2(w0.Bth11.0, b11_n.Bth11.0, GND )#5
and2(w1.Bth11.0, b11, GND )#5
or2(PP_11_0, w0.Bth11.0, w1.Bth11.0 )#5

// end mux2x1 Bth11.0


end

netlist

// mux2x1 Bth11.1( PP_11_1, GND, GND, b11 )

inv(b11_n.Bth11.1, b11 )#5
and2(w0.Bth11.1, b11_n.Bth11.1, GND )#5
and2(w1.Bth11.1, b11, GND )#5
or2(PP_11_1, w0.Bth11.1, w1.Bth11.1 )#5

// end mux2x1 Bth11.1


end

netlist

// mux2x1 Bth11.2( PP_11_2, GND, GND, b11 )

inv(b11_n.Bth11.2, b11 )#5
and2(w0.Bth11.2, b11_n.Bth11.2, GND )#5
and2(w1.Bth11.2, b11, GND )#5
or2(PP_11_2, w0.Bth11.2, w1.Bth11.2 )#5

// end mux2x1 Bth11.2


end

netlist

// mux2x1 Bth11.3( PP_11_3, GND, GND, b11 )

inv(b11_n.Bth11.3, b11 )#5
and2(w0.Bth11.3, b11_n.Bth11.3, GND )#5
and2(w1.Bth11.3, b11, GND )#5
or2(PP_11_3, w0.Bth11.3, w1.Bth11.3 )#5

// end mux2x1 Bth11.3


end

netlist

// mux2x1 Bth11.4( PP_11_4, GND, GND, b11 )

inv(b11_n.Bth11.4, b11 )#5
and2(w0.Bth11.4, b11_n.Bth11.4, GND )#5
and2(w1.Bth11.4, b11, GND )#5
or2(PP_11_4, w0.Bth11.4, w1.Bth11.4 )#5

// end mux2x1 Bth11.4


end

netlist

// mux2x1 Bth11.5( PP_11_5, GND, GND, b11 )

inv(b11_n.Bth11.5, b11 )#5
and2(w0.Bth11.5, b11_n.Bth11.5, GND )#5
and2(w1.Bth11.5, b11, GND )#5
or2(PP_11_5, w0.Bth11.5, w1.Bth11.5 )#5

// end mux2x1 Bth11.5


end

netlist

// mux2x1 Bth11.6( PP_11_6, GND, GND, b11 )

inv(b11_n.Bth11.6, b11 )#5
and2(w0.Bth11.6, b11_n.Bth11.6, GND )#5
and2(w1.Bth11.6, b11, GND )#5
or2(PP_11_6, w0.Bth11.6, w1.Bth11.6 )#5

// end mux2x1 Bth11.6


end

netlist

// mux2x1 Bth11.7( PP_11_7, GND, GND, b11 )

inv(b11_n.Bth11.7, b11 )#5
and2(w0.Bth11.7, b11_n.Bth11.7, GND )#5
and2(w1.Bth11.7, b11, GND )#5
or2(PP_11_7, w0.Bth11.7, w1.Bth11.7 )#5

// end mux2x1 Bth11.7


end

netlist

// mux2x1 Bth11.8( PP_11_8, GND, GND, b11 )

inv(b11_n.Bth11.8, b11 )#5
and2(w0.Bth11.8, b11_n.Bth11.8, GND )#5
and2(w1.Bth11.8, b11, GND )#5
or2(PP_11_8, w0.Bth11.8, w1.Bth11.8 )#5

// end mux2x1 Bth11.8


end

netlist

// mux2x1 Bth11.9( PP_11_9, GND, GND, b11 )

inv(b11_n.Bth11.9, b11 )#5
and2(w0.Bth11.9, b11_n.Bth11.9, GND )#5
and2(w1.Bth11.9, b11, GND )#5
or2(PP_11_9, w0.Bth11.9, w1.Bth11.9 )#5

// end mux2x1 Bth11.9


end

netlist

// mux2x1 Bth11.10( PP_11_10, GND, GND, b11 )

inv(b11_n.Bth11.10, b11 )#5
and2(w0.Bth11.10, b11_n.Bth11.10, GND )#5
and2(w1.Bth11.10, b11, GND )#5
or2(PP_11_10, w0.Bth11.10, w1.Bth11.10 )#5

// end mux2x1 Bth11.10


end

netlist

// mux2x1 Bth11.11( PP_11_11, GND, a0, b11 )

inv(b11_n.Bth11.11, b11 )#5
and2(w0.Bth11.11, b11_n.Bth11.11, GND )#5
and2(w1.Bth11.11, b11, a0 )#5
or2(PP_11_11, w0.Bth11.11, w1.Bth11.11 )#5

// end mux2x1 Bth11.11


end

netlist

// mux2x1 Bth11.12( PP_11_12, GND, a1, b11 )

inv(b11_n.Bth11.12, b11 )#5
and2(w0.Bth11.12, b11_n.Bth11.12, GND )#5
and2(w1.Bth11.12, b11, a1 )#5
or2(PP_11_12, w0.Bth11.12, w1.Bth11.12 )#5

// end mux2x1 Bth11.12


end

netlist

// mux2x1 Bth11.13( PP_11_13, GND, a2, b11 )

inv(b11_n.Bth11.13, b11 )#5
and2(w0.Bth11.13, b11_n.Bth11.13, GND )#5
and2(w1.Bth11.13, b11, a2 )#5
or2(PP_11_13, w0.Bth11.13, w1.Bth11.13 )#5

// end mux2x1 Bth11.13


end

netlist

// mux2x1 Bth11.14( PP_11_14, GND, a3, b11 )

inv(b11_n.Bth11.14, b11 )#5
and2(w0.Bth11.14, b11_n.Bth11.14, GND )#5
and2(w1.Bth11.14, b11, a3 )#5
or2(PP_11_14, w0.Bth11.14, w1.Bth11.14 )#5

// end mux2x1 Bth11.14


end

netlist

// mux2x1 Bth11.15( PP_11_15, GND, a4, b11 )

inv(b11_n.Bth11.15, b11 )#5
and2(w0.Bth11.15, b11_n.Bth11.15, GND )#5
and2(w1.Bth11.15, b11, a4 )#5
or2(PP_11_15, w0.Bth11.15, w1.Bth11.15 )#5

// end mux2x1 Bth11.15


end

netlist

// mux2x1 Bth11.16( PP_11_16, GND, a5, b11 )

inv(b11_n.Bth11.16, b11 )#5
and2(w0.Bth11.16, b11_n.Bth11.16, GND )#5
and2(w1.Bth11.16, b11, a5 )#5
or2(PP_11_16, w0.Bth11.16, w1.Bth11.16 )#5

// end mux2x1 Bth11.16


end

netlist

// mux2x1 Bth11.17( PP_11_17, GND, a6, b11 )

inv(b11_n.Bth11.17, b11 )#5
and2(w0.Bth11.17, b11_n.Bth11.17, GND )#5
and2(w1.Bth11.17, b11, a6 )#5
or2(PP_11_17, w0.Bth11.17, w1.Bth11.17 )#5

// end mux2x1 Bth11.17


end

netlist

// mux2x1 Bth11.18( PP_11_18, GND, a7, b11 )

inv(b11_n.Bth11.18, b11 )#5
and2(w0.Bth11.18, b11_n.Bth11.18, GND )#5
and2(w1.Bth11.18, b11, a7 )#5
or2(PP_11_18, w0.Bth11.18, w1.Bth11.18 )#5

// end mux2x1 Bth11.18


end

netlist

// mux2x1 Bth11.19( PP_11_19, GND, a8, b11 )

inv(b11_n.Bth11.19, b11 )#5
and2(w0.Bth11.19, b11_n.Bth11.19, GND )#5
and2(w1.Bth11.19, b11, a8 )#5
or2(PP_11_19, w0.Bth11.19, w1.Bth11.19 )#5

// end mux2x1 Bth11.19


end

netlist

// mux2x1 Bth11.20( PP_11_20, GND, a9, b11 )

inv(b11_n.Bth11.20, b11 )#5
and2(w0.Bth11.20, b11_n.Bth11.20, GND )#5
and2(w1.Bth11.20, b11, a9 )#5
or2(PP_11_20, w0.Bth11.20, w1.Bth11.20 )#5

// end mux2x1 Bth11.20


end

netlist

// mux2x1 Bth11.21( PP_11_21, GND, a10, b11 )

inv(b11_n.Bth11.21, b11 )#5
and2(w0.Bth11.21, b11_n.Bth11.21, GND )#5
and2(w1.Bth11.21, b11, a10 )#5
or2(PP_11_21, w0.Bth11.21, w1.Bth11.21 )#5

// end mux2x1 Bth11.21


end

netlist

// mux2x1 Bth11.22( PP_11_22, GND, a11, b11 )

inv(b11_n.Bth11.22, b11 )#5
and2(w0.Bth11.22, b11_n.Bth11.22, GND )#5
and2(w1.Bth11.22, b11, a11 )#5
or2(PP_11_22, w0.Bth11.22, w1.Bth11.22 )#5

// end mux2x1 Bth11.22


end

netlist

// mux2x1 Bth11.23( PP_11_23, GND, GND, b11 )

inv(b11_n.Bth11.23, b11 )#5
and2(w0.Bth11.23, b11_n.Bth11.23, GND )#5
and2(w1.Bth11.23, b11, GND )#5
or2(PP_11_23, w0.Bth11.23, w1.Bth11.23 )#5

// end mux2x1 Bth11.23


end

// instantiating csa4x2Vec at lvl 0 

netlist
   // csa4x2 (csa4x2_0_lvl0.0, s0_lvl0_0,t0_lvl0_0,cout_csa4x2_0_lvl0.0,PP_0_0,PP_1_0,PP_2_0,PP_3_0,GND) ;


   // adder1bit Adder0.csa4x2_0_lvl0.0( sintcsa4x2_0_lvl0.0, cout_csa4x2_0_lvl0.0, PP_0_0, PP_1_0, PP_2_0)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.0, PP_0_0, PP_1_0 )#5
xor2( sintcsa4x2_0_lvl0.0, w0.Adder0.csa4x2_0_lvl0.0, PP_2_0 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.0, PP_0_0, PP_1_0 )#5
and2( w2.Adder0.csa4x2_0_lvl0.0, w0.Adder0.csa4x2_0_lvl0.0, PP_2_0 )#5
or2( cout_csa4x2_0_lvl0.0, w1.Adder0.csa4x2_0_lvl0.0, w2.Adder0.csa4x2_0_lvl0.0  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.0( s0_lvl0_0, t0_lvl0_0, sintcsa4x2_0_lvl0.0, PP_3_0, GND)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.0, sintcsa4x2_0_lvl0.0, PP_3_0 )#5
xor2( s0_lvl0_0, w0.Adder1.csa4x2_0_lvl0.0, GND )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.0, sintcsa4x2_0_lvl0.0, PP_3_0 )#5
and2( w2.Adder1.csa4x2_0_lvl0.0, w0.Adder1.csa4x2_0_lvl0.0, GND )#5
or2( t0_lvl0_0, w1.Adder1.csa4x2_0_lvl0.0, w2.Adder1.csa4x2_0_lvl0.0  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.1, s0_lvl0_1,t0_lvl0_1,cout_csa4x2_0_lvl0.1,PP_0_1,PP_1_1,PP_2_1,PP_3_1,cout_csa4x2_0_lvl0.0) ;


   // adder1bit Adder0.csa4x2_0_lvl0.1( sintcsa4x2_0_lvl0.1, cout_csa4x2_0_lvl0.1, PP_0_1, PP_1_1, PP_2_1)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.1, PP_0_1, PP_1_1 )#5
xor2( sintcsa4x2_0_lvl0.1, w0.Adder0.csa4x2_0_lvl0.1, PP_2_1 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.1, PP_0_1, PP_1_1 )#5
and2( w2.Adder0.csa4x2_0_lvl0.1, w0.Adder0.csa4x2_0_lvl0.1, PP_2_1 )#5
or2( cout_csa4x2_0_lvl0.1, w1.Adder0.csa4x2_0_lvl0.1, w2.Adder0.csa4x2_0_lvl0.1  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.1( s0_lvl0_1, t0_lvl0_1, sintcsa4x2_0_lvl0.1, PP_3_1, cout_csa4x2_0_lvl0.0)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.1, sintcsa4x2_0_lvl0.1, PP_3_1 )#5
xor2( s0_lvl0_1, w0.Adder1.csa4x2_0_lvl0.1, cout_csa4x2_0_lvl0.0 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.1, sintcsa4x2_0_lvl0.1, PP_3_1 )#5
and2( w2.Adder1.csa4x2_0_lvl0.1, w0.Adder1.csa4x2_0_lvl0.1, cout_csa4x2_0_lvl0.0 )#5
or2( t0_lvl0_1, w1.Adder1.csa4x2_0_lvl0.1, w2.Adder1.csa4x2_0_lvl0.1  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.2, s0_lvl0_2,t0_lvl0_2,cout_csa4x2_0_lvl0.2,PP_0_2,PP_1_2,PP_2_2,PP_3_2,cout_csa4x2_0_lvl0.1) ;


   // adder1bit Adder0.csa4x2_0_lvl0.2( sintcsa4x2_0_lvl0.2, cout_csa4x2_0_lvl0.2, PP_0_2, PP_1_2, PP_2_2)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.2, PP_0_2, PP_1_2 )#5
xor2( sintcsa4x2_0_lvl0.2, w0.Adder0.csa4x2_0_lvl0.2, PP_2_2 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.2, PP_0_2, PP_1_2 )#5
and2( w2.Adder0.csa4x2_0_lvl0.2, w0.Adder0.csa4x2_0_lvl0.2, PP_2_2 )#5
or2( cout_csa4x2_0_lvl0.2, w1.Adder0.csa4x2_0_lvl0.2, w2.Adder0.csa4x2_0_lvl0.2  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.2( s0_lvl0_2, t0_lvl0_2, sintcsa4x2_0_lvl0.2, PP_3_2, cout_csa4x2_0_lvl0.1)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.2, sintcsa4x2_0_lvl0.2, PP_3_2 )#5
xor2( s0_lvl0_2, w0.Adder1.csa4x2_0_lvl0.2, cout_csa4x2_0_lvl0.1 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.2, sintcsa4x2_0_lvl0.2, PP_3_2 )#5
and2( w2.Adder1.csa4x2_0_lvl0.2, w0.Adder1.csa4x2_0_lvl0.2, cout_csa4x2_0_lvl0.1 )#5
or2( t0_lvl0_2, w1.Adder1.csa4x2_0_lvl0.2, w2.Adder1.csa4x2_0_lvl0.2  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.3, s0_lvl0_3,t0_lvl0_3,cout_csa4x2_0_lvl0.3,PP_0_3,PP_1_3,PP_2_3,PP_3_3,cout_csa4x2_0_lvl0.2) ;


   // adder1bit Adder0.csa4x2_0_lvl0.3( sintcsa4x2_0_lvl0.3, cout_csa4x2_0_lvl0.3, PP_0_3, PP_1_3, PP_2_3)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.3, PP_0_3, PP_1_3 )#5
xor2( sintcsa4x2_0_lvl0.3, w0.Adder0.csa4x2_0_lvl0.3, PP_2_3 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.3, PP_0_3, PP_1_3 )#5
and2( w2.Adder0.csa4x2_0_lvl0.3, w0.Adder0.csa4x2_0_lvl0.3, PP_2_3 )#5
or2( cout_csa4x2_0_lvl0.3, w1.Adder0.csa4x2_0_lvl0.3, w2.Adder0.csa4x2_0_lvl0.3  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.3( s0_lvl0_3, t0_lvl0_3, sintcsa4x2_0_lvl0.3, PP_3_3, cout_csa4x2_0_lvl0.2)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.3, sintcsa4x2_0_lvl0.3, PP_3_3 )#5
xor2( s0_lvl0_3, w0.Adder1.csa4x2_0_lvl0.3, cout_csa4x2_0_lvl0.2 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.3, sintcsa4x2_0_lvl0.3, PP_3_3 )#5
and2( w2.Adder1.csa4x2_0_lvl0.3, w0.Adder1.csa4x2_0_lvl0.3, cout_csa4x2_0_lvl0.2 )#5
or2( t0_lvl0_3, w1.Adder1.csa4x2_0_lvl0.3, w2.Adder1.csa4x2_0_lvl0.3  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.4, s0_lvl0_4,t0_lvl0_4,cout_csa4x2_0_lvl0.4,PP_0_4,PP_1_4,PP_2_4,PP_3_4,cout_csa4x2_0_lvl0.3) ;


   // adder1bit Adder0.csa4x2_0_lvl0.4( sintcsa4x2_0_lvl0.4, cout_csa4x2_0_lvl0.4, PP_0_4, PP_1_4, PP_2_4)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.4, PP_0_4, PP_1_4 )#5
xor2( sintcsa4x2_0_lvl0.4, w0.Adder0.csa4x2_0_lvl0.4, PP_2_4 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.4, PP_0_4, PP_1_4 )#5
and2( w2.Adder0.csa4x2_0_lvl0.4, w0.Adder0.csa4x2_0_lvl0.4, PP_2_4 )#5
or2( cout_csa4x2_0_lvl0.4, w1.Adder0.csa4x2_0_lvl0.4, w2.Adder0.csa4x2_0_lvl0.4  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.4( s0_lvl0_4, t0_lvl0_4, sintcsa4x2_0_lvl0.4, PP_3_4, cout_csa4x2_0_lvl0.3)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.4, sintcsa4x2_0_lvl0.4, PP_3_4 )#5
xor2( s0_lvl0_4, w0.Adder1.csa4x2_0_lvl0.4, cout_csa4x2_0_lvl0.3 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.4, sintcsa4x2_0_lvl0.4, PP_3_4 )#5
and2( w2.Adder1.csa4x2_0_lvl0.4, w0.Adder1.csa4x2_0_lvl0.4, cout_csa4x2_0_lvl0.3 )#5
or2( t0_lvl0_4, w1.Adder1.csa4x2_0_lvl0.4, w2.Adder1.csa4x2_0_lvl0.4  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.5, s0_lvl0_5,t0_lvl0_5,cout_csa4x2_0_lvl0.5,PP_0_5,PP_1_5,PP_2_5,PP_3_5,cout_csa4x2_0_lvl0.4) ;


   // adder1bit Adder0.csa4x2_0_lvl0.5( sintcsa4x2_0_lvl0.5, cout_csa4x2_0_lvl0.5, PP_0_5, PP_1_5, PP_2_5)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.5, PP_0_5, PP_1_5 )#5
xor2( sintcsa4x2_0_lvl0.5, w0.Adder0.csa4x2_0_lvl0.5, PP_2_5 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.5, PP_0_5, PP_1_5 )#5
and2( w2.Adder0.csa4x2_0_lvl0.5, w0.Adder0.csa4x2_0_lvl0.5, PP_2_5 )#5
or2( cout_csa4x2_0_lvl0.5, w1.Adder0.csa4x2_0_lvl0.5, w2.Adder0.csa4x2_0_lvl0.5  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.5( s0_lvl0_5, t0_lvl0_5, sintcsa4x2_0_lvl0.5, PP_3_5, cout_csa4x2_0_lvl0.4)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.5, sintcsa4x2_0_lvl0.5, PP_3_5 )#5
xor2( s0_lvl0_5, w0.Adder1.csa4x2_0_lvl0.5, cout_csa4x2_0_lvl0.4 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.5, sintcsa4x2_0_lvl0.5, PP_3_5 )#5
and2( w2.Adder1.csa4x2_0_lvl0.5, w0.Adder1.csa4x2_0_lvl0.5, cout_csa4x2_0_lvl0.4 )#5
or2( t0_lvl0_5, w1.Adder1.csa4x2_0_lvl0.5, w2.Adder1.csa4x2_0_lvl0.5  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.6, s0_lvl0_6,t0_lvl0_6,cout_csa4x2_0_lvl0.6,PP_0_6,PP_1_6,PP_2_6,PP_3_6,cout_csa4x2_0_lvl0.5) ;


   // adder1bit Adder0.csa4x2_0_lvl0.6( sintcsa4x2_0_lvl0.6, cout_csa4x2_0_lvl0.6, PP_0_6, PP_1_6, PP_2_6)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.6, PP_0_6, PP_1_6 )#5
xor2( sintcsa4x2_0_lvl0.6, w0.Adder0.csa4x2_0_lvl0.6, PP_2_6 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.6, PP_0_6, PP_1_6 )#5
and2( w2.Adder0.csa4x2_0_lvl0.6, w0.Adder0.csa4x2_0_lvl0.6, PP_2_6 )#5
or2( cout_csa4x2_0_lvl0.6, w1.Adder0.csa4x2_0_lvl0.6, w2.Adder0.csa4x2_0_lvl0.6  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.6( s0_lvl0_6, t0_lvl0_6, sintcsa4x2_0_lvl0.6, PP_3_6, cout_csa4x2_0_lvl0.5)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.6, sintcsa4x2_0_lvl0.6, PP_3_6 )#5
xor2( s0_lvl0_6, w0.Adder1.csa4x2_0_lvl0.6, cout_csa4x2_0_lvl0.5 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.6, sintcsa4x2_0_lvl0.6, PP_3_6 )#5
and2( w2.Adder1.csa4x2_0_lvl0.6, w0.Adder1.csa4x2_0_lvl0.6, cout_csa4x2_0_lvl0.5 )#5
or2( t0_lvl0_6, w1.Adder1.csa4x2_0_lvl0.6, w2.Adder1.csa4x2_0_lvl0.6  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.7, s0_lvl0_7,t0_lvl0_7,cout_csa4x2_0_lvl0.7,PP_0_7,PP_1_7,PP_2_7,PP_3_7,cout_csa4x2_0_lvl0.6) ;


   // adder1bit Adder0.csa4x2_0_lvl0.7( sintcsa4x2_0_lvl0.7, cout_csa4x2_0_lvl0.7, PP_0_7, PP_1_7, PP_2_7)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.7, PP_0_7, PP_1_7 )#5
xor2( sintcsa4x2_0_lvl0.7, w0.Adder0.csa4x2_0_lvl0.7, PP_2_7 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.7, PP_0_7, PP_1_7 )#5
and2( w2.Adder0.csa4x2_0_lvl0.7, w0.Adder0.csa4x2_0_lvl0.7, PP_2_7 )#5
or2( cout_csa4x2_0_lvl0.7, w1.Adder0.csa4x2_0_lvl0.7, w2.Adder0.csa4x2_0_lvl0.7  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.7( s0_lvl0_7, t0_lvl0_7, sintcsa4x2_0_lvl0.7, PP_3_7, cout_csa4x2_0_lvl0.6)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.7, sintcsa4x2_0_lvl0.7, PP_3_7 )#5
xor2( s0_lvl0_7, w0.Adder1.csa4x2_0_lvl0.7, cout_csa4x2_0_lvl0.6 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.7, sintcsa4x2_0_lvl0.7, PP_3_7 )#5
and2( w2.Adder1.csa4x2_0_lvl0.7, w0.Adder1.csa4x2_0_lvl0.7, cout_csa4x2_0_lvl0.6 )#5
or2( t0_lvl0_7, w1.Adder1.csa4x2_0_lvl0.7, w2.Adder1.csa4x2_0_lvl0.7  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.8, s0_lvl0_8,t0_lvl0_8,cout_csa4x2_0_lvl0.8,PP_0_8,PP_1_8,PP_2_8,PP_3_8,cout_csa4x2_0_lvl0.7) ;


   // adder1bit Adder0.csa4x2_0_lvl0.8( sintcsa4x2_0_lvl0.8, cout_csa4x2_0_lvl0.8, PP_0_8, PP_1_8, PP_2_8)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.8, PP_0_8, PP_1_8 )#5
xor2( sintcsa4x2_0_lvl0.8, w0.Adder0.csa4x2_0_lvl0.8, PP_2_8 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.8, PP_0_8, PP_1_8 )#5
and2( w2.Adder0.csa4x2_0_lvl0.8, w0.Adder0.csa4x2_0_lvl0.8, PP_2_8 )#5
or2( cout_csa4x2_0_lvl0.8, w1.Adder0.csa4x2_0_lvl0.8, w2.Adder0.csa4x2_0_lvl0.8  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.8( s0_lvl0_8, t0_lvl0_8, sintcsa4x2_0_lvl0.8, PP_3_8, cout_csa4x2_0_lvl0.7)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.8, sintcsa4x2_0_lvl0.8, PP_3_8 )#5
xor2( s0_lvl0_8, w0.Adder1.csa4x2_0_lvl0.8, cout_csa4x2_0_lvl0.7 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.8, sintcsa4x2_0_lvl0.8, PP_3_8 )#5
and2( w2.Adder1.csa4x2_0_lvl0.8, w0.Adder1.csa4x2_0_lvl0.8, cout_csa4x2_0_lvl0.7 )#5
or2( t0_lvl0_8, w1.Adder1.csa4x2_0_lvl0.8, w2.Adder1.csa4x2_0_lvl0.8  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.9, s0_lvl0_9,t0_lvl0_9,cout_csa4x2_0_lvl0.9,PP_0_9,PP_1_9,PP_2_9,PP_3_9,cout_csa4x2_0_lvl0.8) ;


   // adder1bit Adder0.csa4x2_0_lvl0.9( sintcsa4x2_0_lvl0.9, cout_csa4x2_0_lvl0.9, PP_0_9, PP_1_9, PP_2_9)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.9, PP_0_9, PP_1_9 )#5
xor2( sintcsa4x2_0_lvl0.9, w0.Adder0.csa4x2_0_lvl0.9, PP_2_9 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.9, PP_0_9, PP_1_9 )#5
and2( w2.Adder0.csa4x2_0_lvl0.9, w0.Adder0.csa4x2_0_lvl0.9, PP_2_9 )#5
or2( cout_csa4x2_0_lvl0.9, w1.Adder0.csa4x2_0_lvl0.9, w2.Adder0.csa4x2_0_lvl0.9  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.9( s0_lvl0_9, t0_lvl0_9, sintcsa4x2_0_lvl0.9, PP_3_9, cout_csa4x2_0_lvl0.8)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.9, sintcsa4x2_0_lvl0.9, PP_3_9 )#5
xor2( s0_lvl0_9, w0.Adder1.csa4x2_0_lvl0.9, cout_csa4x2_0_lvl0.8 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.9, sintcsa4x2_0_lvl0.9, PP_3_9 )#5
and2( w2.Adder1.csa4x2_0_lvl0.9, w0.Adder1.csa4x2_0_lvl0.9, cout_csa4x2_0_lvl0.8 )#5
or2( t0_lvl0_9, w1.Adder1.csa4x2_0_lvl0.9, w2.Adder1.csa4x2_0_lvl0.9  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.10, s0_lvl0_10,t0_lvl0_10,cout_csa4x2_0_lvl0.10,PP_0_10,PP_1_10,PP_2_10,PP_3_10,cout_csa4x2_0_lvl0.9) ;


   // adder1bit Adder0.csa4x2_0_lvl0.10( sintcsa4x2_0_lvl0.10, cout_csa4x2_0_lvl0.10, PP_0_10, PP_1_10, PP_2_10)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.10, PP_0_10, PP_1_10 )#5
xor2( sintcsa4x2_0_lvl0.10, w0.Adder0.csa4x2_0_lvl0.10, PP_2_10 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.10, PP_0_10, PP_1_10 )#5
and2( w2.Adder0.csa4x2_0_lvl0.10, w0.Adder0.csa4x2_0_lvl0.10, PP_2_10 )#5
or2( cout_csa4x2_0_lvl0.10, w1.Adder0.csa4x2_0_lvl0.10, w2.Adder0.csa4x2_0_lvl0.10  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.10( s0_lvl0_10, t0_lvl0_10, sintcsa4x2_0_lvl0.10, PP_3_10, cout_csa4x2_0_lvl0.9)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.10, sintcsa4x2_0_lvl0.10, PP_3_10 )#5
xor2( s0_lvl0_10, w0.Adder1.csa4x2_0_lvl0.10, cout_csa4x2_0_lvl0.9 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.10, sintcsa4x2_0_lvl0.10, PP_3_10 )#5
and2( w2.Adder1.csa4x2_0_lvl0.10, w0.Adder1.csa4x2_0_lvl0.10, cout_csa4x2_0_lvl0.9 )#5
or2( t0_lvl0_10, w1.Adder1.csa4x2_0_lvl0.10, w2.Adder1.csa4x2_0_lvl0.10  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.11, s0_lvl0_11,t0_lvl0_11,cout_csa4x2_0_lvl0.11,PP_0_11,PP_1_11,PP_2_11,PP_3_11,cout_csa4x2_0_lvl0.10) ;


   // adder1bit Adder0.csa4x2_0_lvl0.11( sintcsa4x2_0_lvl0.11, cout_csa4x2_0_lvl0.11, PP_0_11, PP_1_11, PP_2_11)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.11, PP_0_11, PP_1_11 )#5
xor2( sintcsa4x2_0_lvl0.11, w0.Adder0.csa4x2_0_lvl0.11, PP_2_11 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.11, PP_0_11, PP_1_11 )#5
and2( w2.Adder0.csa4x2_0_lvl0.11, w0.Adder0.csa4x2_0_lvl0.11, PP_2_11 )#5
or2( cout_csa4x2_0_lvl0.11, w1.Adder0.csa4x2_0_lvl0.11, w2.Adder0.csa4x2_0_lvl0.11  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.11( s0_lvl0_11, t0_lvl0_11, sintcsa4x2_0_lvl0.11, PP_3_11, cout_csa4x2_0_lvl0.10)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.11, sintcsa4x2_0_lvl0.11, PP_3_11 )#5
xor2( s0_lvl0_11, w0.Adder1.csa4x2_0_lvl0.11, cout_csa4x2_0_lvl0.10 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.11, sintcsa4x2_0_lvl0.11, PP_3_11 )#5
and2( w2.Adder1.csa4x2_0_lvl0.11, w0.Adder1.csa4x2_0_lvl0.11, cout_csa4x2_0_lvl0.10 )#5
or2( t0_lvl0_11, w1.Adder1.csa4x2_0_lvl0.11, w2.Adder1.csa4x2_0_lvl0.11  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.12, s0_lvl0_12,t0_lvl0_12,cout_csa4x2_0_lvl0.12,PP_0_12,PP_1_12,PP_2_12,PP_3_12,cout_csa4x2_0_lvl0.11) ;


   // adder1bit Adder0.csa4x2_0_lvl0.12( sintcsa4x2_0_lvl0.12, cout_csa4x2_0_lvl0.12, PP_0_12, PP_1_12, PP_2_12)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.12, PP_0_12, PP_1_12 )#5
xor2( sintcsa4x2_0_lvl0.12, w0.Adder0.csa4x2_0_lvl0.12, PP_2_12 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.12, PP_0_12, PP_1_12 )#5
and2( w2.Adder0.csa4x2_0_lvl0.12, w0.Adder0.csa4x2_0_lvl0.12, PP_2_12 )#5
or2( cout_csa4x2_0_lvl0.12, w1.Adder0.csa4x2_0_lvl0.12, w2.Adder0.csa4x2_0_lvl0.12  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.12( s0_lvl0_12, t0_lvl0_12, sintcsa4x2_0_lvl0.12, PP_3_12, cout_csa4x2_0_lvl0.11)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.12, sintcsa4x2_0_lvl0.12, PP_3_12 )#5
xor2( s0_lvl0_12, w0.Adder1.csa4x2_0_lvl0.12, cout_csa4x2_0_lvl0.11 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.12, sintcsa4x2_0_lvl0.12, PP_3_12 )#5
and2( w2.Adder1.csa4x2_0_lvl0.12, w0.Adder1.csa4x2_0_lvl0.12, cout_csa4x2_0_lvl0.11 )#5
or2( t0_lvl0_12, w1.Adder1.csa4x2_0_lvl0.12, w2.Adder1.csa4x2_0_lvl0.12  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.13, s0_lvl0_13,t0_lvl0_13,cout_csa4x2_0_lvl0.13,PP_0_13,PP_1_13,PP_2_13,PP_3_13,cout_csa4x2_0_lvl0.12) ;


   // adder1bit Adder0.csa4x2_0_lvl0.13( sintcsa4x2_0_lvl0.13, cout_csa4x2_0_lvl0.13, PP_0_13, PP_1_13, PP_2_13)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.13, PP_0_13, PP_1_13 )#5
xor2( sintcsa4x2_0_lvl0.13, w0.Adder0.csa4x2_0_lvl0.13, PP_2_13 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.13, PP_0_13, PP_1_13 )#5
and2( w2.Adder0.csa4x2_0_lvl0.13, w0.Adder0.csa4x2_0_lvl0.13, PP_2_13 )#5
or2( cout_csa4x2_0_lvl0.13, w1.Adder0.csa4x2_0_lvl0.13, w2.Adder0.csa4x2_0_lvl0.13  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.13( s0_lvl0_13, t0_lvl0_13, sintcsa4x2_0_lvl0.13, PP_3_13, cout_csa4x2_0_lvl0.12)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.13, sintcsa4x2_0_lvl0.13, PP_3_13 )#5
xor2( s0_lvl0_13, w0.Adder1.csa4x2_0_lvl0.13, cout_csa4x2_0_lvl0.12 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.13, sintcsa4x2_0_lvl0.13, PP_3_13 )#5
and2( w2.Adder1.csa4x2_0_lvl0.13, w0.Adder1.csa4x2_0_lvl0.13, cout_csa4x2_0_lvl0.12 )#5
or2( t0_lvl0_13, w1.Adder1.csa4x2_0_lvl0.13, w2.Adder1.csa4x2_0_lvl0.13  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.14, s0_lvl0_14,t0_lvl0_14,cout_csa4x2_0_lvl0.14,PP_0_14,PP_1_14,PP_2_14,PP_3_14,cout_csa4x2_0_lvl0.13) ;


   // adder1bit Adder0.csa4x2_0_lvl0.14( sintcsa4x2_0_lvl0.14, cout_csa4x2_0_lvl0.14, PP_0_14, PP_1_14, PP_2_14)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.14, PP_0_14, PP_1_14 )#5
xor2( sintcsa4x2_0_lvl0.14, w0.Adder0.csa4x2_0_lvl0.14, PP_2_14 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.14, PP_0_14, PP_1_14 )#5
and2( w2.Adder0.csa4x2_0_lvl0.14, w0.Adder0.csa4x2_0_lvl0.14, PP_2_14 )#5
or2( cout_csa4x2_0_lvl0.14, w1.Adder0.csa4x2_0_lvl0.14, w2.Adder0.csa4x2_0_lvl0.14  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.14( s0_lvl0_14, t0_lvl0_14, sintcsa4x2_0_lvl0.14, PP_3_14, cout_csa4x2_0_lvl0.13)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.14, sintcsa4x2_0_lvl0.14, PP_3_14 )#5
xor2( s0_lvl0_14, w0.Adder1.csa4x2_0_lvl0.14, cout_csa4x2_0_lvl0.13 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.14, sintcsa4x2_0_lvl0.14, PP_3_14 )#5
and2( w2.Adder1.csa4x2_0_lvl0.14, w0.Adder1.csa4x2_0_lvl0.14, cout_csa4x2_0_lvl0.13 )#5
or2( t0_lvl0_14, w1.Adder1.csa4x2_0_lvl0.14, w2.Adder1.csa4x2_0_lvl0.14  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.15, s0_lvl0_15,t0_lvl0_15,cout_csa4x2_0_lvl0.15,PP_0_15,PP_1_15,PP_2_15,PP_3_15,cout_csa4x2_0_lvl0.14) ;


   // adder1bit Adder0.csa4x2_0_lvl0.15( sintcsa4x2_0_lvl0.15, cout_csa4x2_0_lvl0.15, PP_0_15, PP_1_15, PP_2_15)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.15, PP_0_15, PP_1_15 )#5
xor2( sintcsa4x2_0_lvl0.15, w0.Adder0.csa4x2_0_lvl0.15, PP_2_15 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.15, PP_0_15, PP_1_15 )#5
and2( w2.Adder0.csa4x2_0_lvl0.15, w0.Adder0.csa4x2_0_lvl0.15, PP_2_15 )#5
or2( cout_csa4x2_0_lvl0.15, w1.Adder0.csa4x2_0_lvl0.15, w2.Adder0.csa4x2_0_lvl0.15  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.15( s0_lvl0_15, t0_lvl0_15, sintcsa4x2_0_lvl0.15, PP_3_15, cout_csa4x2_0_lvl0.14)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.15, sintcsa4x2_0_lvl0.15, PP_3_15 )#5
xor2( s0_lvl0_15, w0.Adder1.csa4x2_0_lvl0.15, cout_csa4x2_0_lvl0.14 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.15, sintcsa4x2_0_lvl0.15, PP_3_15 )#5
and2( w2.Adder1.csa4x2_0_lvl0.15, w0.Adder1.csa4x2_0_lvl0.15, cout_csa4x2_0_lvl0.14 )#5
or2( t0_lvl0_15, w1.Adder1.csa4x2_0_lvl0.15, w2.Adder1.csa4x2_0_lvl0.15  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.16, s0_lvl0_16,t0_lvl0_16,cout_csa4x2_0_lvl0.16,PP_0_16,PP_1_16,PP_2_16,PP_3_16,cout_csa4x2_0_lvl0.15) ;


   // adder1bit Adder0.csa4x2_0_lvl0.16( sintcsa4x2_0_lvl0.16, cout_csa4x2_0_lvl0.16, PP_0_16, PP_1_16, PP_2_16)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.16, PP_0_16, PP_1_16 )#5
xor2( sintcsa4x2_0_lvl0.16, w0.Adder0.csa4x2_0_lvl0.16, PP_2_16 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.16, PP_0_16, PP_1_16 )#5
and2( w2.Adder0.csa4x2_0_lvl0.16, w0.Adder0.csa4x2_0_lvl0.16, PP_2_16 )#5
or2( cout_csa4x2_0_lvl0.16, w1.Adder0.csa4x2_0_lvl0.16, w2.Adder0.csa4x2_0_lvl0.16  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.16( s0_lvl0_16, t0_lvl0_16, sintcsa4x2_0_lvl0.16, PP_3_16, cout_csa4x2_0_lvl0.15)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.16, sintcsa4x2_0_lvl0.16, PP_3_16 )#5
xor2( s0_lvl0_16, w0.Adder1.csa4x2_0_lvl0.16, cout_csa4x2_0_lvl0.15 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.16, sintcsa4x2_0_lvl0.16, PP_3_16 )#5
and2( w2.Adder1.csa4x2_0_lvl0.16, w0.Adder1.csa4x2_0_lvl0.16, cout_csa4x2_0_lvl0.15 )#5
or2( t0_lvl0_16, w1.Adder1.csa4x2_0_lvl0.16, w2.Adder1.csa4x2_0_lvl0.16  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.17, s0_lvl0_17,t0_lvl0_17,cout_csa4x2_0_lvl0.17,PP_0_17,PP_1_17,PP_2_17,PP_3_17,cout_csa4x2_0_lvl0.16) ;


   // adder1bit Adder0.csa4x2_0_lvl0.17( sintcsa4x2_0_lvl0.17, cout_csa4x2_0_lvl0.17, PP_0_17, PP_1_17, PP_2_17)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.17, PP_0_17, PP_1_17 )#5
xor2( sintcsa4x2_0_lvl0.17, w0.Adder0.csa4x2_0_lvl0.17, PP_2_17 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.17, PP_0_17, PP_1_17 )#5
and2( w2.Adder0.csa4x2_0_lvl0.17, w0.Adder0.csa4x2_0_lvl0.17, PP_2_17 )#5
or2( cout_csa4x2_0_lvl0.17, w1.Adder0.csa4x2_0_lvl0.17, w2.Adder0.csa4x2_0_lvl0.17  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.17( s0_lvl0_17, t0_lvl0_17, sintcsa4x2_0_lvl0.17, PP_3_17, cout_csa4x2_0_lvl0.16)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.17, sintcsa4x2_0_lvl0.17, PP_3_17 )#5
xor2( s0_lvl0_17, w0.Adder1.csa4x2_0_lvl0.17, cout_csa4x2_0_lvl0.16 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.17, sintcsa4x2_0_lvl0.17, PP_3_17 )#5
and2( w2.Adder1.csa4x2_0_lvl0.17, w0.Adder1.csa4x2_0_lvl0.17, cout_csa4x2_0_lvl0.16 )#5
or2( t0_lvl0_17, w1.Adder1.csa4x2_0_lvl0.17, w2.Adder1.csa4x2_0_lvl0.17  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.18, s0_lvl0_18,t0_lvl0_18,cout_csa4x2_0_lvl0.18,PP_0_18,PP_1_18,PP_2_18,PP_3_18,cout_csa4x2_0_lvl0.17) ;


   // adder1bit Adder0.csa4x2_0_lvl0.18( sintcsa4x2_0_lvl0.18, cout_csa4x2_0_lvl0.18, PP_0_18, PP_1_18, PP_2_18)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.18, PP_0_18, PP_1_18 )#5
xor2( sintcsa4x2_0_lvl0.18, w0.Adder0.csa4x2_0_lvl0.18, PP_2_18 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.18, PP_0_18, PP_1_18 )#5
and2( w2.Adder0.csa4x2_0_lvl0.18, w0.Adder0.csa4x2_0_lvl0.18, PP_2_18 )#5
or2( cout_csa4x2_0_lvl0.18, w1.Adder0.csa4x2_0_lvl0.18, w2.Adder0.csa4x2_0_lvl0.18  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.18( s0_lvl0_18, t0_lvl0_18, sintcsa4x2_0_lvl0.18, PP_3_18, cout_csa4x2_0_lvl0.17)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.18, sintcsa4x2_0_lvl0.18, PP_3_18 )#5
xor2( s0_lvl0_18, w0.Adder1.csa4x2_0_lvl0.18, cout_csa4x2_0_lvl0.17 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.18, sintcsa4x2_0_lvl0.18, PP_3_18 )#5
and2( w2.Adder1.csa4x2_0_lvl0.18, w0.Adder1.csa4x2_0_lvl0.18, cout_csa4x2_0_lvl0.17 )#5
or2( t0_lvl0_18, w1.Adder1.csa4x2_0_lvl0.18, w2.Adder1.csa4x2_0_lvl0.18  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.19, s0_lvl0_19,t0_lvl0_19,cout_csa4x2_0_lvl0.19,PP_0_19,PP_1_19,PP_2_19,PP_3_19,cout_csa4x2_0_lvl0.18) ;


   // adder1bit Adder0.csa4x2_0_lvl0.19( sintcsa4x2_0_lvl0.19, cout_csa4x2_0_lvl0.19, PP_0_19, PP_1_19, PP_2_19)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.19, PP_0_19, PP_1_19 )#5
xor2( sintcsa4x2_0_lvl0.19, w0.Adder0.csa4x2_0_lvl0.19, PP_2_19 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.19, PP_0_19, PP_1_19 )#5
and2( w2.Adder0.csa4x2_0_lvl0.19, w0.Adder0.csa4x2_0_lvl0.19, PP_2_19 )#5
or2( cout_csa4x2_0_lvl0.19, w1.Adder0.csa4x2_0_lvl0.19, w2.Adder0.csa4x2_0_lvl0.19  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.19( s0_lvl0_19, t0_lvl0_19, sintcsa4x2_0_lvl0.19, PP_3_19, cout_csa4x2_0_lvl0.18)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.19, sintcsa4x2_0_lvl0.19, PP_3_19 )#5
xor2( s0_lvl0_19, w0.Adder1.csa4x2_0_lvl0.19, cout_csa4x2_0_lvl0.18 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.19, sintcsa4x2_0_lvl0.19, PP_3_19 )#5
and2( w2.Adder1.csa4x2_0_lvl0.19, w0.Adder1.csa4x2_0_lvl0.19, cout_csa4x2_0_lvl0.18 )#5
or2( t0_lvl0_19, w1.Adder1.csa4x2_0_lvl0.19, w2.Adder1.csa4x2_0_lvl0.19  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.20, s0_lvl0_20,t0_lvl0_20,cout_csa4x2_0_lvl0.20,PP_0_20,PP_1_20,PP_2_20,PP_3_20,cout_csa4x2_0_lvl0.19) ;


   // adder1bit Adder0.csa4x2_0_lvl0.20( sintcsa4x2_0_lvl0.20, cout_csa4x2_0_lvl0.20, PP_0_20, PP_1_20, PP_2_20)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.20, PP_0_20, PP_1_20 )#5
xor2( sintcsa4x2_0_lvl0.20, w0.Adder0.csa4x2_0_lvl0.20, PP_2_20 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.20, PP_0_20, PP_1_20 )#5
and2( w2.Adder0.csa4x2_0_lvl0.20, w0.Adder0.csa4x2_0_lvl0.20, PP_2_20 )#5
or2( cout_csa4x2_0_lvl0.20, w1.Adder0.csa4x2_0_lvl0.20, w2.Adder0.csa4x2_0_lvl0.20  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.20( s0_lvl0_20, t0_lvl0_20, sintcsa4x2_0_lvl0.20, PP_3_20, cout_csa4x2_0_lvl0.19)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.20, sintcsa4x2_0_lvl0.20, PP_3_20 )#5
xor2( s0_lvl0_20, w0.Adder1.csa4x2_0_lvl0.20, cout_csa4x2_0_lvl0.19 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.20, sintcsa4x2_0_lvl0.20, PP_3_20 )#5
and2( w2.Adder1.csa4x2_0_lvl0.20, w0.Adder1.csa4x2_0_lvl0.20, cout_csa4x2_0_lvl0.19 )#5
or2( t0_lvl0_20, w1.Adder1.csa4x2_0_lvl0.20, w2.Adder1.csa4x2_0_lvl0.20  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.21, s0_lvl0_21,t0_lvl0_21,cout_csa4x2_0_lvl0.21,PP_0_21,PP_1_21,PP_2_21,PP_3_21,cout_csa4x2_0_lvl0.20) ;


   // adder1bit Adder0.csa4x2_0_lvl0.21( sintcsa4x2_0_lvl0.21, cout_csa4x2_0_lvl0.21, PP_0_21, PP_1_21, PP_2_21)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.21, PP_0_21, PP_1_21 )#5
xor2( sintcsa4x2_0_lvl0.21, w0.Adder0.csa4x2_0_lvl0.21, PP_2_21 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.21, PP_0_21, PP_1_21 )#5
and2( w2.Adder0.csa4x2_0_lvl0.21, w0.Adder0.csa4x2_0_lvl0.21, PP_2_21 )#5
or2( cout_csa4x2_0_lvl0.21, w1.Adder0.csa4x2_0_lvl0.21, w2.Adder0.csa4x2_0_lvl0.21  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.21( s0_lvl0_21, t0_lvl0_21, sintcsa4x2_0_lvl0.21, PP_3_21, cout_csa4x2_0_lvl0.20)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.21, sintcsa4x2_0_lvl0.21, PP_3_21 )#5
xor2( s0_lvl0_21, w0.Adder1.csa4x2_0_lvl0.21, cout_csa4x2_0_lvl0.20 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.21, sintcsa4x2_0_lvl0.21, PP_3_21 )#5
and2( w2.Adder1.csa4x2_0_lvl0.21, w0.Adder1.csa4x2_0_lvl0.21, cout_csa4x2_0_lvl0.20 )#5
or2( t0_lvl0_21, w1.Adder1.csa4x2_0_lvl0.21, w2.Adder1.csa4x2_0_lvl0.21  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.22, s0_lvl0_22,t0_lvl0_22,cout_csa4x2_0_lvl0.22,PP_0_22,PP_1_22,PP_2_22,PP_3_22,cout_csa4x2_0_lvl0.21) ;


   // adder1bit Adder0.csa4x2_0_lvl0.22( sintcsa4x2_0_lvl0.22, cout_csa4x2_0_lvl0.22, PP_0_22, PP_1_22, PP_2_22)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.22, PP_0_22, PP_1_22 )#5
xor2( sintcsa4x2_0_lvl0.22, w0.Adder0.csa4x2_0_lvl0.22, PP_2_22 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.22, PP_0_22, PP_1_22 )#5
and2( w2.Adder0.csa4x2_0_lvl0.22, w0.Adder0.csa4x2_0_lvl0.22, PP_2_22 )#5
or2( cout_csa4x2_0_lvl0.22, w1.Adder0.csa4x2_0_lvl0.22, w2.Adder0.csa4x2_0_lvl0.22  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.22( s0_lvl0_22, t0_lvl0_22, sintcsa4x2_0_lvl0.22, PP_3_22, cout_csa4x2_0_lvl0.21)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.22, sintcsa4x2_0_lvl0.22, PP_3_22 )#5
xor2( s0_lvl0_22, w0.Adder1.csa4x2_0_lvl0.22, cout_csa4x2_0_lvl0.21 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.22, sintcsa4x2_0_lvl0.22, PP_3_22 )#5
and2( w2.Adder1.csa4x2_0_lvl0.22, w0.Adder1.csa4x2_0_lvl0.22, cout_csa4x2_0_lvl0.21 )#5
or2( t0_lvl0_22, w1.Adder1.csa4x2_0_lvl0.22, w2.Adder1.csa4x2_0_lvl0.22  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl0.23, s0_lvl0_23,t0_lvl0_23,cout_csa4x2_0_lvl0.23,PP_0_23,PP_1_23,PP_2_23,PP_3_23,cout_csa4x2_0_lvl0.22) ;


   // adder1bit Adder0.csa4x2_0_lvl0.23( sintcsa4x2_0_lvl0.23, cout_csa4x2_0_lvl0.23, PP_0_23, PP_1_23, PP_2_23)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl0.23, PP_0_23, PP_1_23 )#5
xor2( sintcsa4x2_0_lvl0.23, w0.Adder0.csa4x2_0_lvl0.23, PP_2_23 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl0.23, PP_0_23, PP_1_23 )#5
and2( w2.Adder0.csa4x2_0_lvl0.23, w0.Adder0.csa4x2_0_lvl0.23, PP_2_23 )#5
or2( cout_csa4x2_0_lvl0.23, w1.Adder0.csa4x2_0_lvl0.23, w2.Adder0.csa4x2_0_lvl0.23  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl0.23( s0_lvl0_23, t0_lvl0_23, sintcsa4x2_0_lvl0.23, PP_3_23, cout_csa4x2_0_lvl0.22)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl0.23, sintcsa4x2_0_lvl0.23, PP_3_23 )#5
xor2( s0_lvl0_23, w0.Adder1.csa4x2_0_lvl0.23, cout_csa4x2_0_lvl0.22 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl0.23, sintcsa4x2_0_lvl0.23, PP_3_23 )#5
and2( w2.Adder1.csa4x2_0_lvl0.23, w0.Adder1.csa4x2_0_lvl0.23, cout_csa4x2_0_lvl0.22 )#5
or2( t0_lvl0_23, w1.Adder1.csa4x2_0_lvl0.23, w2.Adder1.csa4x2_0_lvl0.23  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.0, s4_lvl0_0,t4_lvl0_0,cout_csa4x2_4_lvl0.0,PP_4_0,PP_5_0,PP_6_0,PP_7_0,GND) ;


   // adder1bit Adder0.csa4x2_4_lvl0.0( sintcsa4x2_4_lvl0.0, cout_csa4x2_4_lvl0.0, PP_4_0, PP_5_0, PP_6_0)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.0, PP_4_0, PP_5_0 )#5
xor2( sintcsa4x2_4_lvl0.0, w0.Adder0.csa4x2_4_lvl0.0, PP_6_0 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.0, PP_4_0, PP_5_0 )#5
and2( w2.Adder0.csa4x2_4_lvl0.0, w0.Adder0.csa4x2_4_lvl0.0, PP_6_0 )#5
or2( cout_csa4x2_4_lvl0.0, w1.Adder0.csa4x2_4_lvl0.0, w2.Adder0.csa4x2_4_lvl0.0  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.0( s4_lvl0_0, t4_lvl0_0, sintcsa4x2_4_lvl0.0, PP_7_0, GND)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.0, sintcsa4x2_4_lvl0.0, PP_7_0 )#5
xor2( s4_lvl0_0, w0.Adder1.csa4x2_4_lvl0.0, GND )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.0, sintcsa4x2_4_lvl0.0, PP_7_0 )#5
and2( w2.Adder1.csa4x2_4_lvl0.0, w0.Adder1.csa4x2_4_lvl0.0, GND )#5
or2( t4_lvl0_0, w1.Adder1.csa4x2_4_lvl0.0, w2.Adder1.csa4x2_4_lvl0.0  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.1, s4_lvl0_1,t4_lvl0_1,cout_csa4x2_4_lvl0.1,PP_4_1,PP_5_1,PP_6_1,PP_7_1,cout_csa4x2_4_lvl0.0) ;


   // adder1bit Adder0.csa4x2_4_lvl0.1( sintcsa4x2_4_lvl0.1, cout_csa4x2_4_lvl0.1, PP_4_1, PP_5_1, PP_6_1)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.1, PP_4_1, PP_5_1 )#5
xor2( sintcsa4x2_4_lvl0.1, w0.Adder0.csa4x2_4_lvl0.1, PP_6_1 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.1, PP_4_1, PP_5_1 )#5
and2( w2.Adder0.csa4x2_4_lvl0.1, w0.Adder0.csa4x2_4_lvl0.1, PP_6_1 )#5
or2( cout_csa4x2_4_lvl0.1, w1.Adder0.csa4x2_4_lvl0.1, w2.Adder0.csa4x2_4_lvl0.1  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.1( s4_lvl0_1, t4_lvl0_1, sintcsa4x2_4_lvl0.1, PP_7_1, cout_csa4x2_4_lvl0.0)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.1, sintcsa4x2_4_lvl0.1, PP_7_1 )#5
xor2( s4_lvl0_1, w0.Adder1.csa4x2_4_lvl0.1, cout_csa4x2_4_lvl0.0 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.1, sintcsa4x2_4_lvl0.1, PP_7_1 )#5
and2( w2.Adder1.csa4x2_4_lvl0.1, w0.Adder1.csa4x2_4_lvl0.1, cout_csa4x2_4_lvl0.0 )#5
or2( t4_lvl0_1, w1.Adder1.csa4x2_4_lvl0.1, w2.Adder1.csa4x2_4_lvl0.1  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.2, s4_lvl0_2,t4_lvl0_2,cout_csa4x2_4_lvl0.2,PP_4_2,PP_5_2,PP_6_2,PP_7_2,cout_csa4x2_4_lvl0.1) ;


   // adder1bit Adder0.csa4x2_4_lvl0.2( sintcsa4x2_4_lvl0.2, cout_csa4x2_4_lvl0.2, PP_4_2, PP_5_2, PP_6_2)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.2, PP_4_2, PP_5_2 )#5
xor2( sintcsa4x2_4_lvl0.2, w0.Adder0.csa4x2_4_lvl0.2, PP_6_2 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.2, PP_4_2, PP_5_2 )#5
and2( w2.Adder0.csa4x2_4_lvl0.2, w0.Adder0.csa4x2_4_lvl0.2, PP_6_2 )#5
or2( cout_csa4x2_4_lvl0.2, w1.Adder0.csa4x2_4_lvl0.2, w2.Adder0.csa4x2_4_lvl0.2  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.2( s4_lvl0_2, t4_lvl0_2, sintcsa4x2_4_lvl0.2, PP_7_2, cout_csa4x2_4_lvl0.1)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.2, sintcsa4x2_4_lvl0.2, PP_7_2 )#5
xor2( s4_lvl0_2, w0.Adder1.csa4x2_4_lvl0.2, cout_csa4x2_4_lvl0.1 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.2, sintcsa4x2_4_lvl0.2, PP_7_2 )#5
and2( w2.Adder1.csa4x2_4_lvl0.2, w0.Adder1.csa4x2_4_lvl0.2, cout_csa4x2_4_lvl0.1 )#5
or2( t4_lvl0_2, w1.Adder1.csa4x2_4_lvl0.2, w2.Adder1.csa4x2_4_lvl0.2  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.3, s4_lvl0_3,t4_lvl0_3,cout_csa4x2_4_lvl0.3,PP_4_3,PP_5_3,PP_6_3,PP_7_3,cout_csa4x2_4_lvl0.2) ;


   // adder1bit Adder0.csa4x2_4_lvl0.3( sintcsa4x2_4_lvl0.3, cout_csa4x2_4_lvl0.3, PP_4_3, PP_5_3, PP_6_3)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.3, PP_4_3, PP_5_3 )#5
xor2( sintcsa4x2_4_lvl0.3, w0.Adder0.csa4x2_4_lvl0.3, PP_6_3 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.3, PP_4_3, PP_5_3 )#5
and2( w2.Adder0.csa4x2_4_lvl0.3, w0.Adder0.csa4x2_4_lvl0.3, PP_6_3 )#5
or2( cout_csa4x2_4_lvl0.3, w1.Adder0.csa4x2_4_lvl0.3, w2.Adder0.csa4x2_4_lvl0.3  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.3( s4_lvl0_3, t4_lvl0_3, sintcsa4x2_4_lvl0.3, PP_7_3, cout_csa4x2_4_lvl0.2)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.3, sintcsa4x2_4_lvl0.3, PP_7_3 )#5
xor2( s4_lvl0_3, w0.Adder1.csa4x2_4_lvl0.3, cout_csa4x2_4_lvl0.2 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.3, sintcsa4x2_4_lvl0.3, PP_7_3 )#5
and2( w2.Adder1.csa4x2_4_lvl0.3, w0.Adder1.csa4x2_4_lvl0.3, cout_csa4x2_4_lvl0.2 )#5
or2( t4_lvl0_3, w1.Adder1.csa4x2_4_lvl0.3, w2.Adder1.csa4x2_4_lvl0.3  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.4, s4_lvl0_4,t4_lvl0_4,cout_csa4x2_4_lvl0.4,PP_4_4,PP_5_4,PP_6_4,PP_7_4,cout_csa4x2_4_lvl0.3) ;


   // adder1bit Adder0.csa4x2_4_lvl0.4( sintcsa4x2_4_lvl0.4, cout_csa4x2_4_lvl0.4, PP_4_4, PP_5_4, PP_6_4)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.4, PP_4_4, PP_5_4 )#5
xor2( sintcsa4x2_4_lvl0.4, w0.Adder0.csa4x2_4_lvl0.4, PP_6_4 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.4, PP_4_4, PP_5_4 )#5
and2( w2.Adder0.csa4x2_4_lvl0.4, w0.Adder0.csa4x2_4_lvl0.4, PP_6_4 )#5
or2( cout_csa4x2_4_lvl0.4, w1.Adder0.csa4x2_4_lvl0.4, w2.Adder0.csa4x2_4_lvl0.4  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.4( s4_lvl0_4, t4_lvl0_4, sintcsa4x2_4_lvl0.4, PP_7_4, cout_csa4x2_4_lvl0.3)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.4, sintcsa4x2_4_lvl0.4, PP_7_4 )#5
xor2( s4_lvl0_4, w0.Adder1.csa4x2_4_lvl0.4, cout_csa4x2_4_lvl0.3 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.4, sintcsa4x2_4_lvl0.4, PP_7_4 )#5
and2( w2.Adder1.csa4x2_4_lvl0.4, w0.Adder1.csa4x2_4_lvl0.4, cout_csa4x2_4_lvl0.3 )#5
or2( t4_lvl0_4, w1.Adder1.csa4x2_4_lvl0.4, w2.Adder1.csa4x2_4_lvl0.4  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.5, s4_lvl0_5,t4_lvl0_5,cout_csa4x2_4_lvl0.5,PP_4_5,PP_5_5,PP_6_5,PP_7_5,cout_csa4x2_4_lvl0.4) ;


   // adder1bit Adder0.csa4x2_4_lvl0.5( sintcsa4x2_4_lvl0.5, cout_csa4x2_4_lvl0.5, PP_4_5, PP_5_5, PP_6_5)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.5, PP_4_5, PP_5_5 )#5
xor2( sintcsa4x2_4_lvl0.5, w0.Adder0.csa4x2_4_lvl0.5, PP_6_5 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.5, PP_4_5, PP_5_5 )#5
and2( w2.Adder0.csa4x2_4_lvl0.5, w0.Adder0.csa4x2_4_lvl0.5, PP_6_5 )#5
or2( cout_csa4x2_4_lvl0.5, w1.Adder0.csa4x2_4_lvl0.5, w2.Adder0.csa4x2_4_lvl0.5  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.5( s4_lvl0_5, t4_lvl0_5, sintcsa4x2_4_lvl0.5, PP_7_5, cout_csa4x2_4_lvl0.4)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.5, sintcsa4x2_4_lvl0.5, PP_7_5 )#5
xor2( s4_lvl0_5, w0.Adder1.csa4x2_4_lvl0.5, cout_csa4x2_4_lvl0.4 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.5, sintcsa4x2_4_lvl0.5, PP_7_5 )#5
and2( w2.Adder1.csa4x2_4_lvl0.5, w0.Adder1.csa4x2_4_lvl0.5, cout_csa4x2_4_lvl0.4 )#5
or2( t4_lvl0_5, w1.Adder1.csa4x2_4_lvl0.5, w2.Adder1.csa4x2_4_lvl0.5  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.6, s4_lvl0_6,t4_lvl0_6,cout_csa4x2_4_lvl0.6,PP_4_6,PP_5_6,PP_6_6,PP_7_6,cout_csa4x2_4_lvl0.5) ;


   // adder1bit Adder0.csa4x2_4_lvl0.6( sintcsa4x2_4_lvl0.6, cout_csa4x2_4_lvl0.6, PP_4_6, PP_5_6, PP_6_6)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.6, PP_4_6, PP_5_6 )#5
xor2( sintcsa4x2_4_lvl0.6, w0.Adder0.csa4x2_4_lvl0.6, PP_6_6 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.6, PP_4_6, PP_5_6 )#5
and2( w2.Adder0.csa4x2_4_lvl0.6, w0.Adder0.csa4x2_4_lvl0.6, PP_6_6 )#5
or2( cout_csa4x2_4_lvl0.6, w1.Adder0.csa4x2_4_lvl0.6, w2.Adder0.csa4x2_4_lvl0.6  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.6( s4_lvl0_6, t4_lvl0_6, sintcsa4x2_4_lvl0.6, PP_7_6, cout_csa4x2_4_lvl0.5)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.6, sintcsa4x2_4_lvl0.6, PP_7_6 )#5
xor2( s4_lvl0_6, w0.Adder1.csa4x2_4_lvl0.6, cout_csa4x2_4_lvl0.5 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.6, sintcsa4x2_4_lvl0.6, PP_7_6 )#5
and2( w2.Adder1.csa4x2_4_lvl0.6, w0.Adder1.csa4x2_4_lvl0.6, cout_csa4x2_4_lvl0.5 )#5
or2( t4_lvl0_6, w1.Adder1.csa4x2_4_lvl0.6, w2.Adder1.csa4x2_4_lvl0.6  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.7, s4_lvl0_7,t4_lvl0_7,cout_csa4x2_4_lvl0.7,PP_4_7,PP_5_7,PP_6_7,PP_7_7,cout_csa4x2_4_lvl0.6) ;


   // adder1bit Adder0.csa4x2_4_lvl0.7( sintcsa4x2_4_lvl0.7, cout_csa4x2_4_lvl0.7, PP_4_7, PP_5_7, PP_6_7)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.7, PP_4_7, PP_5_7 )#5
xor2( sintcsa4x2_4_lvl0.7, w0.Adder0.csa4x2_4_lvl0.7, PP_6_7 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.7, PP_4_7, PP_5_7 )#5
and2( w2.Adder0.csa4x2_4_lvl0.7, w0.Adder0.csa4x2_4_lvl0.7, PP_6_7 )#5
or2( cout_csa4x2_4_lvl0.7, w1.Adder0.csa4x2_4_lvl0.7, w2.Adder0.csa4x2_4_lvl0.7  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.7( s4_lvl0_7, t4_lvl0_7, sintcsa4x2_4_lvl0.7, PP_7_7, cout_csa4x2_4_lvl0.6)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.7, sintcsa4x2_4_lvl0.7, PP_7_7 )#5
xor2( s4_lvl0_7, w0.Adder1.csa4x2_4_lvl0.7, cout_csa4x2_4_lvl0.6 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.7, sintcsa4x2_4_lvl0.7, PP_7_7 )#5
and2( w2.Adder1.csa4x2_4_lvl0.7, w0.Adder1.csa4x2_4_lvl0.7, cout_csa4x2_4_lvl0.6 )#5
or2( t4_lvl0_7, w1.Adder1.csa4x2_4_lvl0.7, w2.Adder1.csa4x2_4_lvl0.7  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.8, s4_lvl0_8,t4_lvl0_8,cout_csa4x2_4_lvl0.8,PP_4_8,PP_5_8,PP_6_8,PP_7_8,cout_csa4x2_4_lvl0.7) ;


   // adder1bit Adder0.csa4x2_4_lvl0.8( sintcsa4x2_4_lvl0.8, cout_csa4x2_4_lvl0.8, PP_4_8, PP_5_8, PP_6_8)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.8, PP_4_8, PP_5_8 )#5
xor2( sintcsa4x2_4_lvl0.8, w0.Adder0.csa4x2_4_lvl0.8, PP_6_8 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.8, PP_4_8, PP_5_8 )#5
and2( w2.Adder0.csa4x2_4_lvl0.8, w0.Adder0.csa4x2_4_lvl0.8, PP_6_8 )#5
or2( cout_csa4x2_4_lvl0.8, w1.Adder0.csa4x2_4_lvl0.8, w2.Adder0.csa4x2_4_lvl0.8  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.8( s4_lvl0_8, t4_lvl0_8, sintcsa4x2_4_lvl0.8, PP_7_8, cout_csa4x2_4_lvl0.7)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.8, sintcsa4x2_4_lvl0.8, PP_7_8 )#5
xor2( s4_lvl0_8, w0.Adder1.csa4x2_4_lvl0.8, cout_csa4x2_4_lvl0.7 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.8, sintcsa4x2_4_lvl0.8, PP_7_8 )#5
and2( w2.Adder1.csa4x2_4_lvl0.8, w0.Adder1.csa4x2_4_lvl0.8, cout_csa4x2_4_lvl0.7 )#5
or2( t4_lvl0_8, w1.Adder1.csa4x2_4_lvl0.8, w2.Adder1.csa4x2_4_lvl0.8  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.9, s4_lvl0_9,t4_lvl0_9,cout_csa4x2_4_lvl0.9,PP_4_9,PP_5_9,PP_6_9,PP_7_9,cout_csa4x2_4_lvl0.8) ;


   // adder1bit Adder0.csa4x2_4_lvl0.9( sintcsa4x2_4_lvl0.9, cout_csa4x2_4_lvl0.9, PP_4_9, PP_5_9, PP_6_9)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.9, PP_4_9, PP_5_9 )#5
xor2( sintcsa4x2_4_lvl0.9, w0.Adder0.csa4x2_4_lvl0.9, PP_6_9 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.9, PP_4_9, PP_5_9 )#5
and2( w2.Adder0.csa4x2_4_lvl0.9, w0.Adder0.csa4x2_4_lvl0.9, PP_6_9 )#5
or2( cout_csa4x2_4_lvl0.9, w1.Adder0.csa4x2_4_lvl0.9, w2.Adder0.csa4x2_4_lvl0.9  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.9( s4_lvl0_9, t4_lvl0_9, sintcsa4x2_4_lvl0.9, PP_7_9, cout_csa4x2_4_lvl0.8)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.9, sintcsa4x2_4_lvl0.9, PP_7_9 )#5
xor2( s4_lvl0_9, w0.Adder1.csa4x2_4_lvl0.9, cout_csa4x2_4_lvl0.8 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.9, sintcsa4x2_4_lvl0.9, PP_7_9 )#5
and2( w2.Adder1.csa4x2_4_lvl0.9, w0.Adder1.csa4x2_4_lvl0.9, cout_csa4x2_4_lvl0.8 )#5
or2( t4_lvl0_9, w1.Adder1.csa4x2_4_lvl0.9, w2.Adder1.csa4x2_4_lvl0.9  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.10, s4_lvl0_10,t4_lvl0_10,cout_csa4x2_4_lvl0.10,PP_4_10,PP_5_10,PP_6_10,PP_7_10,cout_csa4x2_4_lvl0.9) ;


   // adder1bit Adder0.csa4x2_4_lvl0.10( sintcsa4x2_4_lvl0.10, cout_csa4x2_4_lvl0.10, PP_4_10, PP_5_10, PP_6_10)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.10, PP_4_10, PP_5_10 )#5
xor2( sintcsa4x2_4_lvl0.10, w0.Adder0.csa4x2_4_lvl0.10, PP_6_10 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.10, PP_4_10, PP_5_10 )#5
and2( w2.Adder0.csa4x2_4_lvl0.10, w0.Adder0.csa4x2_4_lvl0.10, PP_6_10 )#5
or2( cout_csa4x2_4_lvl0.10, w1.Adder0.csa4x2_4_lvl0.10, w2.Adder0.csa4x2_4_lvl0.10  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.10( s4_lvl0_10, t4_lvl0_10, sintcsa4x2_4_lvl0.10, PP_7_10, cout_csa4x2_4_lvl0.9)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.10, sintcsa4x2_4_lvl0.10, PP_7_10 )#5
xor2( s4_lvl0_10, w0.Adder1.csa4x2_4_lvl0.10, cout_csa4x2_4_lvl0.9 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.10, sintcsa4x2_4_lvl0.10, PP_7_10 )#5
and2( w2.Adder1.csa4x2_4_lvl0.10, w0.Adder1.csa4x2_4_lvl0.10, cout_csa4x2_4_lvl0.9 )#5
or2( t4_lvl0_10, w1.Adder1.csa4x2_4_lvl0.10, w2.Adder1.csa4x2_4_lvl0.10  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.11, s4_lvl0_11,t4_lvl0_11,cout_csa4x2_4_lvl0.11,PP_4_11,PP_5_11,PP_6_11,PP_7_11,cout_csa4x2_4_lvl0.10) ;


   // adder1bit Adder0.csa4x2_4_lvl0.11( sintcsa4x2_4_lvl0.11, cout_csa4x2_4_lvl0.11, PP_4_11, PP_5_11, PP_6_11)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.11, PP_4_11, PP_5_11 )#5
xor2( sintcsa4x2_4_lvl0.11, w0.Adder0.csa4x2_4_lvl0.11, PP_6_11 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.11, PP_4_11, PP_5_11 )#5
and2( w2.Adder0.csa4x2_4_lvl0.11, w0.Adder0.csa4x2_4_lvl0.11, PP_6_11 )#5
or2( cout_csa4x2_4_lvl0.11, w1.Adder0.csa4x2_4_lvl0.11, w2.Adder0.csa4x2_4_lvl0.11  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.11( s4_lvl0_11, t4_lvl0_11, sintcsa4x2_4_lvl0.11, PP_7_11, cout_csa4x2_4_lvl0.10)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.11, sintcsa4x2_4_lvl0.11, PP_7_11 )#5
xor2( s4_lvl0_11, w0.Adder1.csa4x2_4_lvl0.11, cout_csa4x2_4_lvl0.10 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.11, sintcsa4x2_4_lvl0.11, PP_7_11 )#5
and2( w2.Adder1.csa4x2_4_lvl0.11, w0.Adder1.csa4x2_4_lvl0.11, cout_csa4x2_4_lvl0.10 )#5
or2( t4_lvl0_11, w1.Adder1.csa4x2_4_lvl0.11, w2.Adder1.csa4x2_4_lvl0.11  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.12, s4_lvl0_12,t4_lvl0_12,cout_csa4x2_4_lvl0.12,PP_4_12,PP_5_12,PP_6_12,PP_7_12,cout_csa4x2_4_lvl0.11) ;


   // adder1bit Adder0.csa4x2_4_lvl0.12( sintcsa4x2_4_lvl0.12, cout_csa4x2_4_lvl0.12, PP_4_12, PP_5_12, PP_6_12)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.12, PP_4_12, PP_5_12 )#5
xor2( sintcsa4x2_4_lvl0.12, w0.Adder0.csa4x2_4_lvl0.12, PP_6_12 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.12, PP_4_12, PP_5_12 )#5
and2( w2.Adder0.csa4x2_4_lvl0.12, w0.Adder0.csa4x2_4_lvl0.12, PP_6_12 )#5
or2( cout_csa4x2_4_lvl0.12, w1.Adder0.csa4x2_4_lvl0.12, w2.Adder0.csa4x2_4_lvl0.12  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.12( s4_lvl0_12, t4_lvl0_12, sintcsa4x2_4_lvl0.12, PP_7_12, cout_csa4x2_4_lvl0.11)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.12, sintcsa4x2_4_lvl0.12, PP_7_12 )#5
xor2( s4_lvl0_12, w0.Adder1.csa4x2_4_lvl0.12, cout_csa4x2_4_lvl0.11 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.12, sintcsa4x2_4_lvl0.12, PP_7_12 )#5
and2( w2.Adder1.csa4x2_4_lvl0.12, w0.Adder1.csa4x2_4_lvl0.12, cout_csa4x2_4_lvl0.11 )#5
or2( t4_lvl0_12, w1.Adder1.csa4x2_4_lvl0.12, w2.Adder1.csa4x2_4_lvl0.12  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.13, s4_lvl0_13,t4_lvl0_13,cout_csa4x2_4_lvl0.13,PP_4_13,PP_5_13,PP_6_13,PP_7_13,cout_csa4x2_4_lvl0.12) ;


   // adder1bit Adder0.csa4x2_4_lvl0.13( sintcsa4x2_4_lvl0.13, cout_csa4x2_4_lvl0.13, PP_4_13, PP_5_13, PP_6_13)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.13, PP_4_13, PP_5_13 )#5
xor2( sintcsa4x2_4_lvl0.13, w0.Adder0.csa4x2_4_lvl0.13, PP_6_13 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.13, PP_4_13, PP_5_13 )#5
and2( w2.Adder0.csa4x2_4_lvl0.13, w0.Adder0.csa4x2_4_lvl0.13, PP_6_13 )#5
or2( cout_csa4x2_4_lvl0.13, w1.Adder0.csa4x2_4_lvl0.13, w2.Adder0.csa4x2_4_lvl0.13  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.13( s4_lvl0_13, t4_lvl0_13, sintcsa4x2_4_lvl0.13, PP_7_13, cout_csa4x2_4_lvl0.12)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.13, sintcsa4x2_4_lvl0.13, PP_7_13 )#5
xor2( s4_lvl0_13, w0.Adder1.csa4x2_4_lvl0.13, cout_csa4x2_4_lvl0.12 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.13, sintcsa4x2_4_lvl0.13, PP_7_13 )#5
and2( w2.Adder1.csa4x2_4_lvl0.13, w0.Adder1.csa4x2_4_lvl0.13, cout_csa4x2_4_lvl0.12 )#5
or2( t4_lvl0_13, w1.Adder1.csa4x2_4_lvl0.13, w2.Adder1.csa4x2_4_lvl0.13  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.14, s4_lvl0_14,t4_lvl0_14,cout_csa4x2_4_lvl0.14,PP_4_14,PP_5_14,PP_6_14,PP_7_14,cout_csa4x2_4_lvl0.13) ;


   // adder1bit Adder0.csa4x2_4_lvl0.14( sintcsa4x2_4_lvl0.14, cout_csa4x2_4_lvl0.14, PP_4_14, PP_5_14, PP_6_14)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.14, PP_4_14, PP_5_14 )#5
xor2( sintcsa4x2_4_lvl0.14, w0.Adder0.csa4x2_4_lvl0.14, PP_6_14 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.14, PP_4_14, PP_5_14 )#5
and2( w2.Adder0.csa4x2_4_lvl0.14, w0.Adder0.csa4x2_4_lvl0.14, PP_6_14 )#5
or2( cout_csa4x2_4_lvl0.14, w1.Adder0.csa4x2_4_lvl0.14, w2.Adder0.csa4x2_4_lvl0.14  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.14( s4_lvl0_14, t4_lvl0_14, sintcsa4x2_4_lvl0.14, PP_7_14, cout_csa4x2_4_lvl0.13)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.14, sintcsa4x2_4_lvl0.14, PP_7_14 )#5
xor2( s4_lvl0_14, w0.Adder1.csa4x2_4_lvl0.14, cout_csa4x2_4_lvl0.13 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.14, sintcsa4x2_4_lvl0.14, PP_7_14 )#5
and2( w2.Adder1.csa4x2_4_lvl0.14, w0.Adder1.csa4x2_4_lvl0.14, cout_csa4x2_4_lvl0.13 )#5
or2( t4_lvl0_14, w1.Adder1.csa4x2_4_lvl0.14, w2.Adder1.csa4x2_4_lvl0.14  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.15, s4_lvl0_15,t4_lvl0_15,cout_csa4x2_4_lvl0.15,PP_4_15,PP_5_15,PP_6_15,PP_7_15,cout_csa4x2_4_lvl0.14) ;


   // adder1bit Adder0.csa4x2_4_lvl0.15( sintcsa4x2_4_lvl0.15, cout_csa4x2_4_lvl0.15, PP_4_15, PP_5_15, PP_6_15)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.15, PP_4_15, PP_5_15 )#5
xor2( sintcsa4x2_4_lvl0.15, w0.Adder0.csa4x2_4_lvl0.15, PP_6_15 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.15, PP_4_15, PP_5_15 )#5
and2( w2.Adder0.csa4x2_4_lvl0.15, w0.Adder0.csa4x2_4_lvl0.15, PP_6_15 )#5
or2( cout_csa4x2_4_lvl0.15, w1.Adder0.csa4x2_4_lvl0.15, w2.Adder0.csa4x2_4_lvl0.15  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.15( s4_lvl0_15, t4_lvl0_15, sintcsa4x2_4_lvl0.15, PP_7_15, cout_csa4x2_4_lvl0.14)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.15, sintcsa4x2_4_lvl0.15, PP_7_15 )#5
xor2( s4_lvl0_15, w0.Adder1.csa4x2_4_lvl0.15, cout_csa4x2_4_lvl0.14 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.15, sintcsa4x2_4_lvl0.15, PP_7_15 )#5
and2( w2.Adder1.csa4x2_4_lvl0.15, w0.Adder1.csa4x2_4_lvl0.15, cout_csa4x2_4_lvl0.14 )#5
or2( t4_lvl0_15, w1.Adder1.csa4x2_4_lvl0.15, w2.Adder1.csa4x2_4_lvl0.15  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.16, s4_lvl0_16,t4_lvl0_16,cout_csa4x2_4_lvl0.16,PP_4_16,PP_5_16,PP_6_16,PP_7_16,cout_csa4x2_4_lvl0.15) ;


   // adder1bit Adder0.csa4x2_4_lvl0.16( sintcsa4x2_4_lvl0.16, cout_csa4x2_4_lvl0.16, PP_4_16, PP_5_16, PP_6_16)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.16, PP_4_16, PP_5_16 )#5
xor2( sintcsa4x2_4_lvl0.16, w0.Adder0.csa4x2_4_lvl0.16, PP_6_16 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.16, PP_4_16, PP_5_16 )#5
and2( w2.Adder0.csa4x2_4_lvl0.16, w0.Adder0.csa4x2_4_lvl0.16, PP_6_16 )#5
or2( cout_csa4x2_4_lvl0.16, w1.Adder0.csa4x2_4_lvl0.16, w2.Adder0.csa4x2_4_lvl0.16  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.16( s4_lvl0_16, t4_lvl0_16, sintcsa4x2_4_lvl0.16, PP_7_16, cout_csa4x2_4_lvl0.15)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.16, sintcsa4x2_4_lvl0.16, PP_7_16 )#5
xor2( s4_lvl0_16, w0.Adder1.csa4x2_4_lvl0.16, cout_csa4x2_4_lvl0.15 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.16, sintcsa4x2_4_lvl0.16, PP_7_16 )#5
and2( w2.Adder1.csa4x2_4_lvl0.16, w0.Adder1.csa4x2_4_lvl0.16, cout_csa4x2_4_lvl0.15 )#5
or2( t4_lvl0_16, w1.Adder1.csa4x2_4_lvl0.16, w2.Adder1.csa4x2_4_lvl0.16  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.17, s4_lvl0_17,t4_lvl0_17,cout_csa4x2_4_lvl0.17,PP_4_17,PP_5_17,PP_6_17,PP_7_17,cout_csa4x2_4_lvl0.16) ;


   // adder1bit Adder0.csa4x2_4_lvl0.17( sintcsa4x2_4_lvl0.17, cout_csa4x2_4_lvl0.17, PP_4_17, PP_5_17, PP_6_17)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.17, PP_4_17, PP_5_17 )#5
xor2( sintcsa4x2_4_lvl0.17, w0.Adder0.csa4x2_4_lvl0.17, PP_6_17 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.17, PP_4_17, PP_5_17 )#5
and2( w2.Adder0.csa4x2_4_lvl0.17, w0.Adder0.csa4x2_4_lvl0.17, PP_6_17 )#5
or2( cout_csa4x2_4_lvl0.17, w1.Adder0.csa4x2_4_lvl0.17, w2.Adder0.csa4x2_4_lvl0.17  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.17( s4_lvl0_17, t4_lvl0_17, sintcsa4x2_4_lvl0.17, PP_7_17, cout_csa4x2_4_lvl0.16)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.17, sintcsa4x2_4_lvl0.17, PP_7_17 )#5
xor2( s4_lvl0_17, w0.Adder1.csa4x2_4_lvl0.17, cout_csa4x2_4_lvl0.16 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.17, sintcsa4x2_4_lvl0.17, PP_7_17 )#5
and2( w2.Adder1.csa4x2_4_lvl0.17, w0.Adder1.csa4x2_4_lvl0.17, cout_csa4x2_4_lvl0.16 )#5
or2( t4_lvl0_17, w1.Adder1.csa4x2_4_lvl0.17, w2.Adder1.csa4x2_4_lvl0.17  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.18, s4_lvl0_18,t4_lvl0_18,cout_csa4x2_4_lvl0.18,PP_4_18,PP_5_18,PP_6_18,PP_7_18,cout_csa4x2_4_lvl0.17) ;


   // adder1bit Adder0.csa4x2_4_lvl0.18( sintcsa4x2_4_lvl0.18, cout_csa4x2_4_lvl0.18, PP_4_18, PP_5_18, PP_6_18)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.18, PP_4_18, PP_5_18 )#5
xor2( sintcsa4x2_4_lvl0.18, w0.Adder0.csa4x2_4_lvl0.18, PP_6_18 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.18, PP_4_18, PP_5_18 )#5
and2( w2.Adder0.csa4x2_4_lvl0.18, w0.Adder0.csa4x2_4_lvl0.18, PP_6_18 )#5
or2( cout_csa4x2_4_lvl0.18, w1.Adder0.csa4x2_4_lvl0.18, w2.Adder0.csa4x2_4_lvl0.18  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.18( s4_lvl0_18, t4_lvl0_18, sintcsa4x2_4_lvl0.18, PP_7_18, cout_csa4x2_4_lvl0.17)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.18, sintcsa4x2_4_lvl0.18, PP_7_18 )#5
xor2( s4_lvl0_18, w0.Adder1.csa4x2_4_lvl0.18, cout_csa4x2_4_lvl0.17 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.18, sintcsa4x2_4_lvl0.18, PP_7_18 )#5
and2( w2.Adder1.csa4x2_4_lvl0.18, w0.Adder1.csa4x2_4_lvl0.18, cout_csa4x2_4_lvl0.17 )#5
or2( t4_lvl0_18, w1.Adder1.csa4x2_4_lvl0.18, w2.Adder1.csa4x2_4_lvl0.18  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.19, s4_lvl0_19,t4_lvl0_19,cout_csa4x2_4_lvl0.19,PP_4_19,PP_5_19,PP_6_19,PP_7_19,cout_csa4x2_4_lvl0.18) ;


   // adder1bit Adder0.csa4x2_4_lvl0.19( sintcsa4x2_4_lvl0.19, cout_csa4x2_4_lvl0.19, PP_4_19, PP_5_19, PP_6_19)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.19, PP_4_19, PP_5_19 )#5
xor2( sintcsa4x2_4_lvl0.19, w0.Adder0.csa4x2_4_lvl0.19, PP_6_19 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.19, PP_4_19, PP_5_19 )#5
and2( w2.Adder0.csa4x2_4_lvl0.19, w0.Adder0.csa4x2_4_lvl0.19, PP_6_19 )#5
or2( cout_csa4x2_4_lvl0.19, w1.Adder0.csa4x2_4_lvl0.19, w2.Adder0.csa4x2_4_lvl0.19  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.19( s4_lvl0_19, t4_lvl0_19, sintcsa4x2_4_lvl0.19, PP_7_19, cout_csa4x2_4_lvl0.18)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.19, sintcsa4x2_4_lvl0.19, PP_7_19 )#5
xor2( s4_lvl0_19, w0.Adder1.csa4x2_4_lvl0.19, cout_csa4x2_4_lvl0.18 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.19, sintcsa4x2_4_lvl0.19, PP_7_19 )#5
and2( w2.Adder1.csa4x2_4_lvl0.19, w0.Adder1.csa4x2_4_lvl0.19, cout_csa4x2_4_lvl0.18 )#5
or2( t4_lvl0_19, w1.Adder1.csa4x2_4_lvl0.19, w2.Adder1.csa4x2_4_lvl0.19  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.20, s4_lvl0_20,t4_lvl0_20,cout_csa4x2_4_lvl0.20,PP_4_20,PP_5_20,PP_6_20,PP_7_20,cout_csa4x2_4_lvl0.19) ;


   // adder1bit Adder0.csa4x2_4_lvl0.20( sintcsa4x2_4_lvl0.20, cout_csa4x2_4_lvl0.20, PP_4_20, PP_5_20, PP_6_20)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.20, PP_4_20, PP_5_20 )#5
xor2( sintcsa4x2_4_lvl0.20, w0.Adder0.csa4x2_4_lvl0.20, PP_6_20 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.20, PP_4_20, PP_5_20 )#5
and2( w2.Adder0.csa4x2_4_lvl0.20, w0.Adder0.csa4x2_4_lvl0.20, PP_6_20 )#5
or2( cout_csa4x2_4_lvl0.20, w1.Adder0.csa4x2_4_lvl0.20, w2.Adder0.csa4x2_4_lvl0.20  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.20( s4_lvl0_20, t4_lvl0_20, sintcsa4x2_4_lvl0.20, PP_7_20, cout_csa4x2_4_lvl0.19)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.20, sintcsa4x2_4_lvl0.20, PP_7_20 )#5
xor2( s4_lvl0_20, w0.Adder1.csa4x2_4_lvl0.20, cout_csa4x2_4_lvl0.19 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.20, sintcsa4x2_4_lvl0.20, PP_7_20 )#5
and2( w2.Adder1.csa4x2_4_lvl0.20, w0.Adder1.csa4x2_4_lvl0.20, cout_csa4x2_4_lvl0.19 )#5
or2( t4_lvl0_20, w1.Adder1.csa4x2_4_lvl0.20, w2.Adder1.csa4x2_4_lvl0.20  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.21, s4_lvl0_21,t4_lvl0_21,cout_csa4x2_4_lvl0.21,PP_4_21,PP_5_21,PP_6_21,PP_7_21,cout_csa4x2_4_lvl0.20) ;


   // adder1bit Adder0.csa4x2_4_lvl0.21( sintcsa4x2_4_lvl0.21, cout_csa4x2_4_lvl0.21, PP_4_21, PP_5_21, PP_6_21)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.21, PP_4_21, PP_5_21 )#5
xor2( sintcsa4x2_4_lvl0.21, w0.Adder0.csa4x2_4_lvl0.21, PP_6_21 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.21, PP_4_21, PP_5_21 )#5
and2( w2.Adder0.csa4x2_4_lvl0.21, w0.Adder0.csa4x2_4_lvl0.21, PP_6_21 )#5
or2( cout_csa4x2_4_lvl0.21, w1.Adder0.csa4x2_4_lvl0.21, w2.Adder0.csa4x2_4_lvl0.21  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.21( s4_lvl0_21, t4_lvl0_21, sintcsa4x2_4_lvl0.21, PP_7_21, cout_csa4x2_4_lvl0.20)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.21, sintcsa4x2_4_lvl0.21, PP_7_21 )#5
xor2( s4_lvl0_21, w0.Adder1.csa4x2_4_lvl0.21, cout_csa4x2_4_lvl0.20 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.21, sintcsa4x2_4_lvl0.21, PP_7_21 )#5
and2( w2.Adder1.csa4x2_4_lvl0.21, w0.Adder1.csa4x2_4_lvl0.21, cout_csa4x2_4_lvl0.20 )#5
or2( t4_lvl0_21, w1.Adder1.csa4x2_4_lvl0.21, w2.Adder1.csa4x2_4_lvl0.21  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.22, s4_lvl0_22,t4_lvl0_22,cout_csa4x2_4_lvl0.22,PP_4_22,PP_5_22,PP_6_22,PP_7_22,cout_csa4x2_4_lvl0.21) ;


   // adder1bit Adder0.csa4x2_4_lvl0.22( sintcsa4x2_4_lvl0.22, cout_csa4x2_4_lvl0.22, PP_4_22, PP_5_22, PP_6_22)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.22, PP_4_22, PP_5_22 )#5
xor2( sintcsa4x2_4_lvl0.22, w0.Adder0.csa4x2_4_lvl0.22, PP_6_22 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.22, PP_4_22, PP_5_22 )#5
and2( w2.Adder0.csa4x2_4_lvl0.22, w0.Adder0.csa4x2_4_lvl0.22, PP_6_22 )#5
or2( cout_csa4x2_4_lvl0.22, w1.Adder0.csa4x2_4_lvl0.22, w2.Adder0.csa4x2_4_lvl0.22  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.22( s4_lvl0_22, t4_lvl0_22, sintcsa4x2_4_lvl0.22, PP_7_22, cout_csa4x2_4_lvl0.21)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.22, sintcsa4x2_4_lvl0.22, PP_7_22 )#5
xor2( s4_lvl0_22, w0.Adder1.csa4x2_4_lvl0.22, cout_csa4x2_4_lvl0.21 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.22, sintcsa4x2_4_lvl0.22, PP_7_22 )#5
and2( w2.Adder1.csa4x2_4_lvl0.22, w0.Adder1.csa4x2_4_lvl0.22, cout_csa4x2_4_lvl0.21 )#5
or2( t4_lvl0_22, w1.Adder1.csa4x2_4_lvl0.22, w2.Adder1.csa4x2_4_lvl0.22  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_4_lvl0.23, s4_lvl0_23,t4_lvl0_23,cout_csa4x2_4_lvl0.23,PP_4_23,PP_5_23,PP_6_23,PP_7_23,cout_csa4x2_4_lvl0.22) ;


   // adder1bit Adder0.csa4x2_4_lvl0.23( sintcsa4x2_4_lvl0.23, cout_csa4x2_4_lvl0.23, PP_4_23, PP_5_23, PP_6_23)

// sum 
xor2( w0.Adder0.csa4x2_4_lvl0.23, PP_4_23, PP_5_23 )#5
xor2( sintcsa4x2_4_lvl0.23, w0.Adder0.csa4x2_4_lvl0.23, PP_6_23 )#5

//cout
and2( w1.Adder0.csa4x2_4_lvl0.23, PP_4_23, PP_5_23 )#5
and2( w2.Adder0.csa4x2_4_lvl0.23, w0.Adder0.csa4x2_4_lvl0.23, PP_6_23 )#5
or2( cout_csa4x2_4_lvl0.23, w1.Adder0.csa4x2_4_lvl0.23, w2.Adder0.csa4x2_4_lvl0.23  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_4_lvl0.23( s4_lvl0_23, t4_lvl0_23, sintcsa4x2_4_lvl0.23, PP_7_23, cout_csa4x2_4_lvl0.22)

// sum 
xor2( w0.Adder1.csa4x2_4_lvl0.23, sintcsa4x2_4_lvl0.23, PP_7_23 )#5
xor2( s4_lvl0_23, w0.Adder1.csa4x2_4_lvl0.23, cout_csa4x2_4_lvl0.22 )#5

//cout
and2( w1.Adder1.csa4x2_4_lvl0.23, sintcsa4x2_4_lvl0.23, PP_7_23 )#5
and2( w2.Adder1.csa4x2_4_lvl0.23, w0.Adder1.csa4x2_4_lvl0.23, cout_csa4x2_4_lvl0.22 )#5
or2( t4_lvl0_23, w1.Adder1.csa4x2_4_lvl0.23, w2.Adder1.csa4x2_4_lvl0.23  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.0, s8_lvl0_0,t8_lvl0_0,cout_csa4x2_8_lvl0.0,PP_8_0,PP_9_0,PP_10_0,PP_11_0,GND) ;


   // adder1bit Adder0.csa4x2_8_lvl0.0( sintcsa4x2_8_lvl0.0, cout_csa4x2_8_lvl0.0, PP_8_0, PP_9_0, PP_10_0)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.0, PP_8_0, PP_9_0 )#5
xor2( sintcsa4x2_8_lvl0.0, w0.Adder0.csa4x2_8_lvl0.0, PP_10_0 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.0, PP_8_0, PP_9_0 )#5
and2( w2.Adder0.csa4x2_8_lvl0.0, w0.Adder0.csa4x2_8_lvl0.0, PP_10_0 )#5
or2( cout_csa4x2_8_lvl0.0, w1.Adder0.csa4x2_8_lvl0.0, w2.Adder0.csa4x2_8_lvl0.0  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.0( s8_lvl0_0, t8_lvl0_0, sintcsa4x2_8_lvl0.0, PP_11_0, GND)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.0, sintcsa4x2_8_lvl0.0, PP_11_0 )#5
xor2( s8_lvl0_0, w0.Adder1.csa4x2_8_lvl0.0, GND )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.0, sintcsa4x2_8_lvl0.0, PP_11_0 )#5
and2( w2.Adder1.csa4x2_8_lvl0.0, w0.Adder1.csa4x2_8_lvl0.0, GND )#5
or2( t8_lvl0_0, w1.Adder1.csa4x2_8_lvl0.0, w2.Adder1.csa4x2_8_lvl0.0  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.1, s8_lvl0_1,t8_lvl0_1,cout_csa4x2_8_lvl0.1,PP_8_1,PP_9_1,PP_10_1,PP_11_1,cout_csa4x2_8_lvl0.0) ;


   // adder1bit Adder0.csa4x2_8_lvl0.1( sintcsa4x2_8_lvl0.1, cout_csa4x2_8_lvl0.1, PP_8_1, PP_9_1, PP_10_1)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.1, PP_8_1, PP_9_1 )#5
xor2( sintcsa4x2_8_lvl0.1, w0.Adder0.csa4x2_8_lvl0.1, PP_10_1 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.1, PP_8_1, PP_9_1 )#5
and2( w2.Adder0.csa4x2_8_lvl0.1, w0.Adder0.csa4x2_8_lvl0.1, PP_10_1 )#5
or2( cout_csa4x2_8_lvl0.1, w1.Adder0.csa4x2_8_lvl0.1, w2.Adder0.csa4x2_8_lvl0.1  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.1( s8_lvl0_1, t8_lvl0_1, sintcsa4x2_8_lvl0.1, PP_11_1, cout_csa4x2_8_lvl0.0)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.1, sintcsa4x2_8_lvl0.1, PP_11_1 )#5
xor2( s8_lvl0_1, w0.Adder1.csa4x2_8_lvl0.1, cout_csa4x2_8_lvl0.0 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.1, sintcsa4x2_8_lvl0.1, PP_11_1 )#5
and2( w2.Adder1.csa4x2_8_lvl0.1, w0.Adder1.csa4x2_8_lvl0.1, cout_csa4x2_8_lvl0.0 )#5
or2( t8_lvl0_1, w1.Adder1.csa4x2_8_lvl0.1, w2.Adder1.csa4x2_8_lvl0.1  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.2, s8_lvl0_2,t8_lvl0_2,cout_csa4x2_8_lvl0.2,PP_8_2,PP_9_2,PP_10_2,PP_11_2,cout_csa4x2_8_lvl0.1) ;


   // adder1bit Adder0.csa4x2_8_lvl0.2( sintcsa4x2_8_lvl0.2, cout_csa4x2_8_lvl0.2, PP_8_2, PP_9_2, PP_10_2)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.2, PP_8_2, PP_9_2 )#5
xor2( sintcsa4x2_8_lvl0.2, w0.Adder0.csa4x2_8_lvl0.2, PP_10_2 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.2, PP_8_2, PP_9_2 )#5
and2( w2.Adder0.csa4x2_8_lvl0.2, w0.Adder0.csa4x2_8_lvl0.2, PP_10_2 )#5
or2( cout_csa4x2_8_lvl0.2, w1.Adder0.csa4x2_8_lvl0.2, w2.Adder0.csa4x2_8_lvl0.2  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.2( s8_lvl0_2, t8_lvl0_2, sintcsa4x2_8_lvl0.2, PP_11_2, cout_csa4x2_8_lvl0.1)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.2, sintcsa4x2_8_lvl0.2, PP_11_2 )#5
xor2( s8_lvl0_2, w0.Adder1.csa4x2_8_lvl0.2, cout_csa4x2_8_lvl0.1 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.2, sintcsa4x2_8_lvl0.2, PP_11_2 )#5
and2( w2.Adder1.csa4x2_8_lvl0.2, w0.Adder1.csa4x2_8_lvl0.2, cout_csa4x2_8_lvl0.1 )#5
or2( t8_lvl0_2, w1.Adder1.csa4x2_8_lvl0.2, w2.Adder1.csa4x2_8_lvl0.2  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.3, s8_lvl0_3,t8_lvl0_3,cout_csa4x2_8_lvl0.3,PP_8_3,PP_9_3,PP_10_3,PP_11_3,cout_csa4x2_8_lvl0.2) ;


   // adder1bit Adder0.csa4x2_8_lvl0.3( sintcsa4x2_8_lvl0.3, cout_csa4x2_8_lvl0.3, PP_8_3, PP_9_3, PP_10_3)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.3, PP_8_3, PP_9_3 )#5
xor2( sintcsa4x2_8_lvl0.3, w0.Adder0.csa4x2_8_lvl0.3, PP_10_3 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.3, PP_8_3, PP_9_3 )#5
and2( w2.Adder0.csa4x2_8_lvl0.3, w0.Adder0.csa4x2_8_lvl0.3, PP_10_3 )#5
or2( cout_csa4x2_8_lvl0.3, w1.Adder0.csa4x2_8_lvl0.3, w2.Adder0.csa4x2_8_lvl0.3  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.3( s8_lvl0_3, t8_lvl0_3, sintcsa4x2_8_lvl0.3, PP_11_3, cout_csa4x2_8_lvl0.2)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.3, sintcsa4x2_8_lvl0.3, PP_11_3 )#5
xor2( s8_lvl0_3, w0.Adder1.csa4x2_8_lvl0.3, cout_csa4x2_8_lvl0.2 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.3, sintcsa4x2_8_lvl0.3, PP_11_3 )#5
and2( w2.Adder1.csa4x2_8_lvl0.3, w0.Adder1.csa4x2_8_lvl0.3, cout_csa4x2_8_lvl0.2 )#5
or2( t8_lvl0_3, w1.Adder1.csa4x2_8_lvl0.3, w2.Adder1.csa4x2_8_lvl0.3  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.4, s8_lvl0_4,t8_lvl0_4,cout_csa4x2_8_lvl0.4,PP_8_4,PP_9_4,PP_10_4,PP_11_4,cout_csa4x2_8_lvl0.3) ;


   // adder1bit Adder0.csa4x2_8_lvl0.4( sintcsa4x2_8_lvl0.4, cout_csa4x2_8_lvl0.4, PP_8_4, PP_9_4, PP_10_4)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.4, PP_8_4, PP_9_4 )#5
xor2( sintcsa4x2_8_lvl0.4, w0.Adder0.csa4x2_8_lvl0.4, PP_10_4 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.4, PP_8_4, PP_9_4 )#5
and2( w2.Adder0.csa4x2_8_lvl0.4, w0.Adder0.csa4x2_8_lvl0.4, PP_10_4 )#5
or2( cout_csa4x2_8_lvl0.4, w1.Adder0.csa4x2_8_lvl0.4, w2.Adder0.csa4x2_8_lvl0.4  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.4( s8_lvl0_4, t8_lvl0_4, sintcsa4x2_8_lvl0.4, PP_11_4, cout_csa4x2_8_lvl0.3)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.4, sintcsa4x2_8_lvl0.4, PP_11_4 )#5
xor2( s8_lvl0_4, w0.Adder1.csa4x2_8_lvl0.4, cout_csa4x2_8_lvl0.3 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.4, sintcsa4x2_8_lvl0.4, PP_11_4 )#5
and2( w2.Adder1.csa4x2_8_lvl0.4, w0.Adder1.csa4x2_8_lvl0.4, cout_csa4x2_8_lvl0.3 )#5
or2( t8_lvl0_4, w1.Adder1.csa4x2_8_lvl0.4, w2.Adder1.csa4x2_8_lvl0.4  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.5, s8_lvl0_5,t8_lvl0_5,cout_csa4x2_8_lvl0.5,PP_8_5,PP_9_5,PP_10_5,PP_11_5,cout_csa4x2_8_lvl0.4) ;


   // adder1bit Adder0.csa4x2_8_lvl0.5( sintcsa4x2_8_lvl0.5, cout_csa4x2_8_lvl0.5, PP_8_5, PP_9_5, PP_10_5)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.5, PP_8_5, PP_9_5 )#5
xor2( sintcsa4x2_8_lvl0.5, w0.Adder0.csa4x2_8_lvl0.5, PP_10_5 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.5, PP_8_5, PP_9_5 )#5
and2( w2.Adder0.csa4x2_8_lvl0.5, w0.Adder0.csa4x2_8_lvl0.5, PP_10_5 )#5
or2( cout_csa4x2_8_lvl0.5, w1.Adder0.csa4x2_8_lvl0.5, w2.Adder0.csa4x2_8_lvl0.5  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.5( s8_lvl0_5, t8_lvl0_5, sintcsa4x2_8_lvl0.5, PP_11_5, cout_csa4x2_8_lvl0.4)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.5, sintcsa4x2_8_lvl0.5, PP_11_5 )#5
xor2( s8_lvl0_5, w0.Adder1.csa4x2_8_lvl0.5, cout_csa4x2_8_lvl0.4 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.5, sintcsa4x2_8_lvl0.5, PP_11_5 )#5
and2( w2.Adder1.csa4x2_8_lvl0.5, w0.Adder1.csa4x2_8_lvl0.5, cout_csa4x2_8_lvl0.4 )#5
or2( t8_lvl0_5, w1.Adder1.csa4x2_8_lvl0.5, w2.Adder1.csa4x2_8_lvl0.5  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.6, s8_lvl0_6,t8_lvl0_6,cout_csa4x2_8_lvl0.6,PP_8_6,PP_9_6,PP_10_6,PP_11_6,cout_csa4x2_8_lvl0.5) ;


   // adder1bit Adder0.csa4x2_8_lvl0.6( sintcsa4x2_8_lvl0.6, cout_csa4x2_8_lvl0.6, PP_8_6, PP_9_6, PP_10_6)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.6, PP_8_6, PP_9_6 )#5
xor2( sintcsa4x2_8_lvl0.6, w0.Adder0.csa4x2_8_lvl0.6, PP_10_6 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.6, PP_8_6, PP_9_6 )#5
and2( w2.Adder0.csa4x2_8_lvl0.6, w0.Adder0.csa4x2_8_lvl0.6, PP_10_6 )#5
or2( cout_csa4x2_8_lvl0.6, w1.Adder0.csa4x2_8_lvl0.6, w2.Adder0.csa4x2_8_lvl0.6  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.6( s8_lvl0_6, t8_lvl0_6, sintcsa4x2_8_lvl0.6, PP_11_6, cout_csa4x2_8_lvl0.5)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.6, sintcsa4x2_8_lvl0.6, PP_11_6 )#5
xor2( s8_lvl0_6, w0.Adder1.csa4x2_8_lvl0.6, cout_csa4x2_8_lvl0.5 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.6, sintcsa4x2_8_lvl0.6, PP_11_6 )#5
and2( w2.Adder1.csa4x2_8_lvl0.6, w0.Adder1.csa4x2_8_lvl0.6, cout_csa4x2_8_lvl0.5 )#5
or2( t8_lvl0_6, w1.Adder1.csa4x2_8_lvl0.6, w2.Adder1.csa4x2_8_lvl0.6  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.7, s8_lvl0_7,t8_lvl0_7,cout_csa4x2_8_lvl0.7,PP_8_7,PP_9_7,PP_10_7,PP_11_7,cout_csa4x2_8_lvl0.6) ;


   // adder1bit Adder0.csa4x2_8_lvl0.7( sintcsa4x2_8_lvl0.7, cout_csa4x2_8_lvl0.7, PP_8_7, PP_9_7, PP_10_7)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.7, PP_8_7, PP_9_7 )#5
xor2( sintcsa4x2_8_lvl0.7, w0.Adder0.csa4x2_8_lvl0.7, PP_10_7 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.7, PP_8_7, PP_9_7 )#5
and2( w2.Adder0.csa4x2_8_lvl0.7, w0.Adder0.csa4x2_8_lvl0.7, PP_10_7 )#5
or2( cout_csa4x2_8_lvl0.7, w1.Adder0.csa4x2_8_lvl0.7, w2.Adder0.csa4x2_8_lvl0.7  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.7( s8_lvl0_7, t8_lvl0_7, sintcsa4x2_8_lvl0.7, PP_11_7, cout_csa4x2_8_lvl0.6)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.7, sintcsa4x2_8_lvl0.7, PP_11_7 )#5
xor2( s8_lvl0_7, w0.Adder1.csa4x2_8_lvl0.7, cout_csa4x2_8_lvl0.6 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.7, sintcsa4x2_8_lvl0.7, PP_11_7 )#5
and2( w2.Adder1.csa4x2_8_lvl0.7, w0.Adder1.csa4x2_8_lvl0.7, cout_csa4x2_8_lvl0.6 )#5
or2( t8_lvl0_7, w1.Adder1.csa4x2_8_lvl0.7, w2.Adder1.csa4x2_8_lvl0.7  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.8, s8_lvl0_8,t8_lvl0_8,cout_csa4x2_8_lvl0.8,PP_8_8,PP_9_8,PP_10_8,PP_11_8,cout_csa4x2_8_lvl0.7) ;


   // adder1bit Adder0.csa4x2_8_lvl0.8( sintcsa4x2_8_lvl0.8, cout_csa4x2_8_lvl0.8, PP_8_8, PP_9_8, PP_10_8)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.8, PP_8_8, PP_9_8 )#5
xor2( sintcsa4x2_8_lvl0.8, w0.Adder0.csa4x2_8_lvl0.8, PP_10_8 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.8, PP_8_8, PP_9_8 )#5
and2( w2.Adder0.csa4x2_8_lvl0.8, w0.Adder0.csa4x2_8_lvl0.8, PP_10_8 )#5
or2( cout_csa4x2_8_lvl0.8, w1.Adder0.csa4x2_8_lvl0.8, w2.Adder0.csa4x2_8_lvl0.8  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.8( s8_lvl0_8, t8_lvl0_8, sintcsa4x2_8_lvl0.8, PP_11_8, cout_csa4x2_8_lvl0.7)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.8, sintcsa4x2_8_lvl0.8, PP_11_8 )#5
xor2( s8_lvl0_8, w0.Adder1.csa4x2_8_lvl0.8, cout_csa4x2_8_lvl0.7 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.8, sintcsa4x2_8_lvl0.8, PP_11_8 )#5
and2( w2.Adder1.csa4x2_8_lvl0.8, w0.Adder1.csa4x2_8_lvl0.8, cout_csa4x2_8_lvl0.7 )#5
or2( t8_lvl0_8, w1.Adder1.csa4x2_8_lvl0.8, w2.Adder1.csa4x2_8_lvl0.8  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.9, s8_lvl0_9,t8_lvl0_9,cout_csa4x2_8_lvl0.9,PP_8_9,PP_9_9,PP_10_9,PP_11_9,cout_csa4x2_8_lvl0.8) ;


   // adder1bit Adder0.csa4x2_8_lvl0.9( sintcsa4x2_8_lvl0.9, cout_csa4x2_8_lvl0.9, PP_8_9, PP_9_9, PP_10_9)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.9, PP_8_9, PP_9_9 )#5
xor2( sintcsa4x2_8_lvl0.9, w0.Adder0.csa4x2_8_lvl0.9, PP_10_9 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.9, PP_8_9, PP_9_9 )#5
and2( w2.Adder0.csa4x2_8_lvl0.9, w0.Adder0.csa4x2_8_lvl0.9, PP_10_9 )#5
or2( cout_csa4x2_8_lvl0.9, w1.Adder0.csa4x2_8_lvl0.9, w2.Adder0.csa4x2_8_lvl0.9  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.9( s8_lvl0_9, t8_lvl0_9, sintcsa4x2_8_lvl0.9, PP_11_9, cout_csa4x2_8_lvl0.8)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.9, sintcsa4x2_8_lvl0.9, PP_11_9 )#5
xor2( s8_lvl0_9, w0.Adder1.csa4x2_8_lvl0.9, cout_csa4x2_8_lvl0.8 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.9, sintcsa4x2_8_lvl0.9, PP_11_9 )#5
and2( w2.Adder1.csa4x2_8_lvl0.9, w0.Adder1.csa4x2_8_lvl0.9, cout_csa4x2_8_lvl0.8 )#5
or2( t8_lvl0_9, w1.Adder1.csa4x2_8_lvl0.9, w2.Adder1.csa4x2_8_lvl0.9  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.10, s8_lvl0_10,t8_lvl0_10,cout_csa4x2_8_lvl0.10,PP_8_10,PP_9_10,PP_10_10,PP_11_10,cout_csa4x2_8_lvl0.9) ;


   // adder1bit Adder0.csa4x2_8_lvl0.10( sintcsa4x2_8_lvl0.10, cout_csa4x2_8_lvl0.10, PP_8_10, PP_9_10, PP_10_10)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.10, PP_8_10, PP_9_10 )#5
xor2( sintcsa4x2_8_lvl0.10, w0.Adder0.csa4x2_8_lvl0.10, PP_10_10 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.10, PP_8_10, PP_9_10 )#5
and2( w2.Adder0.csa4x2_8_lvl0.10, w0.Adder0.csa4x2_8_lvl0.10, PP_10_10 )#5
or2( cout_csa4x2_8_lvl0.10, w1.Adder0.csa4x2_8_lvl0.10, w2.Adder0.csa4x2_8_lvl0.10  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.10( s8_lvl0_10, t8_lvl0_10, sintcsa4x2_8_lvl0.10, PP_11_10, cout_csa4x2_8_lvl0.9)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.10, sintcsa4x2_8_lvl0.10, PP_11_10 )#5
xor2( s8_lvl0_10, w0.Adder1.csa4x2_8_lvl0.10, cout_csa4x2_8_lvl0.9 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.10, sintcsa4x2_8_lvl0.10, PP_11_10 )#5
and2( w2.Adder1.csa4x2_8_lvl0.10, w0.Adder1.csa4x2_8_lvl0.10, cout_csa4x2_8_lvl0.9 )#5
or2( t8_lvl0_10, w1.Adder1.csa4x2_8_lvl0.10, w2.Adder1.csa4x2_8_lvl0.10  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.11, s8_lvl0_11,t8_lvl0_11,cout_csa4x2_8_lvl0.11,PP_8_11,PP_9_11,PP_10_11,PP_11_11,cout_csa4x2_8_lvl0.10) ;


   // adder1bit Adder0.csa4x2_8_lvl0.11( sintcsa4x2_8_lvl0.11, cout_csa4x2_8_lvl0.11, PP_8_11, PP_9_11, PP_10_11)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.11, PP_8_11, PP_9_11 )#5
xor2( sintcsa4x2_8_lvl0.11, w0.Adder0.csa4x2_8_lvl0.11, PP_10_11 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.11, PP_8_11, PP_9_11 )#5
and2( w2.Adder0.csa4x2_8_lvl0.11, w0.Adder0.csa4x2_8_lvl0.11, PP_10_11 )#5
or2( cout_csa4x2_8_lvl0.11, w1.Adder0.csa4x2_8_lvl0.11, w2.Adder0.csa4x2_8_lvl0.11  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.11( s8_lvl0_11, t8_lvl0_11, sintcsa4x2_8_lvl0.11, PP_11_11, cout_csa4x2_8_lvl0.10)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.11, sintcsa4x2_8_lvl0.11, PP_11_11 )#5
xor2( s8_lvl0_11, w0.Adder1.csa4x2_8_lvl0.11, cout_csa4x2_8_lvl0.10 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.11, sintcsa4x2_8_lvl0.11, PP_11_11 )#5
and2( w2.Adder1.csa4x2_8_lvl0.11, w0.Adder1.csa4x2_8_lvl0.11, cout_csa4x2_8_lvl0.10 )#5
or2( t8_lvl0_11, w1.Adder1.csa4x2_8_lvl0.11, w2.Adder1.csa4x2_8_lvl0.11  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.12, s8_lvl0_12,t8_lvl0_12,cout_csa4x2_8_lvl0.12,PP_8_12,PP_9_12,PP_10_12,PP_11_12,cout_csa4x2_8_lvl0.11) ;


   // adder1bit Adder0.csa4x2_8_lvl0.12( sintcsa4x2_8_lvl0.12, cout_csa4x2_8_lvl0.12, PP_8_12, PP_9_12, PP_10_12)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.12, PP_8_12, PP_9_12 )#5
xor2( sintcsa4x2_8_lvl0.12, w0.Adder0.csa4x2_8_lvl0.12, PP_10_12 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.12, PP_8_12, PP_9_12 )#5
and2( w2.Adder0.csa4x2_8_lvl0.12, w0.Adder0.csa4x2_8_lvl0.12, PP_10_12 )#5
or2( cout_csa4x2_8_lvl0.12, w1.Adder0.csa4x2_8_lvl0.12, w2.Adder0.csa4x2_8_lvl0.12  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.12( s8_lvl0_12, t8_lvl0_12, sintcsa4x2_8_lvl0.12, PP_11_12, cout_csa4x2_8_lvl0.11)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.12, sintcsa4x2_8_lvl0.12, PP_11_12 )#5
xor2( s8_lvl0_12, w0.Adder1.csa4x2_8_lvl0.12, cout_csa4x2_8_lvl0.11 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.12, sintcsa4x2_8_lvl0.12, PP_11_12 )#5
and2( w2.Adder1.csa4x2_8_lvl0.12, w0.Adder1.csa4x2_8_lvl0.12, cout_csa4x2_8_lvl0.11 )#5
or2( t8_lvl0_12, w1.Adder1.csa4x2_8_lvl0.12, w2.Adder1.csa4x2_8_lvl0.12  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.13, s8_lvl0_13,t8_lvl0_13,cout_csa4x2_8_lvl0.13,PP_8_13,PP_9_13,PP_10_13,PP_11_13,cout_csa4x2_8_lvl0.12) ;


   // adder1bit Adder0.csa4x2_8_lvl0.13( sintcsa4x2_8_lvl0.13, cout_csa4x2_8_lvl0.13, PP_8_13, PP_9_13, PP_10_13)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.13, PP_8_13, PP_9_13 )#5
xor2( sintcsa4x2_8_lvl0.13, w0.Adder0.csa4x2_8_lvl0.13, PP_10_13 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.13, PP_8_13, PP_9_13 )#5
and2( w2.Adder0.csa4x2_8_lvl0.13, w0.Adder0.csa4x2_8_lvl0.13, PP_10_13 )#5
or2( cout_csa4x2_8_lvl0.13, w1.Adder0.csa4x2_8_lvl0.13, w2.Adder0.csa4x2_8_lvl0.13  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.13( s8_lvl0_13, t8_lvl0_13, sintcsa4x2_8_lvl0.13, PP_11_13, cout_csa4x2_8_lvl0.12)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.13, sintcsa4x2_8_lvl0.13, PP_11_13 )#5
xor2( s8_lvl0_13, w0.Adder1.csa4x2_8_lvl0.13, cout_csa4x2_8_lvl0.12 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.13, sintcsa4x2_8_lvl0.13, PP_11_13 )#5
and2( w2.Adder1.csa4x2_8_lvl0.13, w0.Adder1.csa4x2_8_lvl0.13, cout_csa4x2_8_lvl0.12 )#5
or2( t8_lvl0_13, w1.Adder1.csa4x2_8_lvl0.13, w2.Adder1.csa4x2_8_lvl0.13  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.14, s8_lvl0_14,t8_lvl0_14,cout_csa4x2_8_lvl0.14,PP_8_14,PP_9_14,PP_10_14,PP_11_14,cout_csa4x2_8_lvl0.13) ;


   // adder1bit Adder0.csa4x2_8_lvl0.14( sintcsa4x2_8_lvl0.14, cout_csa4x2_8_lvl0.14, PP_8_14, PP_9_14, PP_10_14)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.14, PP_8_14, PP_9_14 )#5
xor2( sintcsa4x2_8_lvl0.14, w0.Adder0.csa4x2_8_lvl0.14, PP_10_14 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.14, PP_8_14, PP_9_14 )#5
and2( w2.Adder0.csa4x2_8_lvl0.14, w0.Adder0.csa4x2_8_lvl0.14, PP_10_14 )#5
or2( cout_csa4x2_8_lvl0.14, w1.Adder0.csa4x2_8_lvl0.14, w2.Adder0.csa4x2_8_lvl0.14  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.14( s8_lvl0_14, t8_lvl0_14, sintcsa4x2_8_lvl0.14, PP_11_14, cout_csa4x2_8_lvl0.13)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.14, sintcsa4x2_8_lvl0.14, PP_11_14 )#5
xor2( s8_lvl0_14, w0.Adder1.csa4x2_8_lvl0.14, cout_csa4x2_8_lvl0.13 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.14, sintcsa4x2_8_lvl0.14, PP_11_14 )#5
and2( w2.Adder1.csa4x2_8_lvl0.14, w0.Adder1.csa4x2_8_lvl0.14, cout_csa4x2_8_lvl0.13 )#5
or2( t8_lvl0_14, w1.Adder1.csa4x2_8_lvl0.14, w2.Adder1.csa4x2_8_lvl0.14  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.15, s8_lvl0_15,t8_lvl0_15,cout_csa4x2_8_lvl0.15,PP_8_15,PP_9_15,PP_10_15,PP_11_15,cout_csa4x2_8_lvl0.14) ;


   // adder1bit Adder0.csa4x2_8_lvl0.15( sintcsa4x2_8_lvl0.15, cout_csa4x2_8_lvl0.15, PP_8_15, PP_9_15, PP_10_15)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.15, PP_8_15, PP_9_15 )#5
xor2( sintcsa4x2_8_lvl0.15, w0.Adder0.csa4x2_8_lvl0.15, PP_10_15 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.15, PP_8_15, PP_9_15 )#5
and2( w2.Adder0.csa4x2_8_lvl0.15, w0.Adder0.csa4x2_8_lvl0.15, PP_10_15 )#5
or2( cout_csa4x2_8_lvl0.15, w1.Adder0.csa4x2_8_lvl0.15, w2.Adder0.csa4x2_8_lvl0.15  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.15( s8_lvl0_15, t8_lvl0_15, sintcsa4x2_8_lvl0.15, PP_11_15, cout_csa4x2_8_lvl0.14)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.15, sintcsa4x2_8_lvl0.15, PP_11_15 )#5
xor2( s8_lvl0_15, w0.Adder1.csa4x2_8_lvl0.15, cout_csa4x2_8_lvl0.14 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.15, sintcsa4x2_8_lvl0.15, PP_11_15 )#5
and2( w2.Adder1.csa4x2_8_lvl0.15, w0.Adder1.csa4x2_8_lvl0.15, cout_csa4x2_8_lvl0.14 )#5
or2( t8_lvl0_15, w1.Adder1.csa4x2_8_lvl0.15, w2.Adder1.csa4x2_8_lvl0.15  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.16, s8_lvl0_16,t8_lvl0_16,cout_csa4x2_8_lvl0.16,PP_8_16,PP_9_16,PP_10_16,PP_11_16,cout_csa4x2_8_lvl0.15) ;


   // adder1bit Adder0.csa4x2_8_lvl0.16( sintcsa4x2_8_lvl0.16, cout_csa4x2_8_lvl0.16, PP_8_16, PP_9_16, PP_10_16)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.16, PP_8_16, PP_9_16 )#5
xor2( sintcsa4x2_8_lvl0.16, w0.Adder0.csa4x2_8_lvl0.16, PP_10_16 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.16, PP_8_16, PP_9_16 )#5
and2( w2.Adder0.csa4x2_8_lvl0.16, w0.Adder0.csa4x2_8_lvl0.16, PP_10_16 )#5
or2( cout_csa4x2_8_lvl0.16, w1.Adder0.csa4x2_8_lvl0.16, w2.Adder0.csa4x2_8_lvl0.16  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.16( s8_lvl0_16, t8_lvl0_16, sintcsa4x2_8_lvl0.16, PP_11_16, cout_csa4x2_8_lvl0.15)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.16, sintcsa4x2_8_lvl0.16, PP_11_16 )#5
xor2( s8_lvl0_16, w0.Adder1.csa4x2_8_lvl0.16, cout_csa4x2_8_lvl0.15 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.16, sintcsa4x2_8_lvl0.16, PP_11_16 )#5
and2( w2.Adder1.csa4x2_8_lvl0.16, w0.Adder1.csa4x2_8_lvl0.16, cout_csa4x2_8_lvl0.15 )#5
or2( t8_lvl0_16, w1.Adder1.csa4x2_8_lvl0.16, w2.Adder1.csa4x2_8_lvl0.16  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.17, s8_lvl0_17,t8_lvl0_17,cout_csa4x2_8_lvl0.17,PP_8_17,PP_9_17,PP_10_17,PP_11_17,cout_csa4x2_8_lvl0.16) ;


   // adder1bit Adder0.csa4x2_8_lvl0.17( sintcsa4x2_8_lvl0.17, cout_csa4x2_8_lvl0.17, PP_8_17, PP_9_17, PP_10_17)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.17, PP_8_17, PP_9_17 )#5
xor2( sintcsa4x2_8_lvl0.17, w0.Adder0.csa4x2_8_lvl0.17, PP_10_17 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.17, PP_8_17, PP_9_17 )#5
and2( w2.Adder0.csa4x2_8_lvl0.17, w0.Adder0.csa4x2_8_lvl0.17, PP_10_17 )#5
or2( cout_csa4x2_8_lvl0.17, w1.Adder0.csa4x2_8_lvl0.17, w2.Adder0.csa4x2_8_lvl0.17  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.17( s8_lvl0_17, t8_lvl0_17, sintcsa4x2_8_lvl0.17, PP_11_17, cout_csa4x2_8_lvl0.16)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.17, sintcsa4x2_8_lvl0.17, PP_11_17 )#5
xor2( s8_lvl0_17, w0.Adder1.csa4x2_8_lvl0.17, cout_csa4x2_8_lvl0.16 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.17, sintcsa4x2_8_lvl0.17, PP_11_17 )#5
and2( w2.Adder1.csa4x2_8_lvl0.17, w0.Adder1.csa4x2_8_lvl0.17, cout_csa4x2_8_lvl0.16 )#5
or2( t8_lvl0_17, w1.Adder1.csa4x2_8_lvl0.17, w2.Adder1.csa4x2_8_lvl0.17  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.18, s8_lvl0_18,t8_lvl0_18,cout_csa4x2_8_lvl0.18,PP_8_18,PP_9_18,PP_10_18,PP_11_18,cout_csa4x2_8_lvl0.17) ;


   // adder1bit Adder0.csa4x2_8_lvl0.18( sintcsa4x2_8_lvl0.18, cout_csa4x2_8_lvl0.18, PP_8_18, PP_9_18, PP_10_18)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.18, PP_8_18, PP_9_18 )#5
xor2( sintcsa4x2_8_lvl0.18, w0.Adder0.csa4x2_8_lvl0.18, PP_10_18 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.18, PP_8_18, PP_9_18 )#5
and2( w2.Adder0.csa4x2_8_lvl0.18, w0.Adder0.csa4x2_8_lvl0.18, PP_10_18 )#5
or2( cout_csa4x2_8_lvl0.18, w1.Adder0.csa4x2_8_lvl0.18, w2.Adder0.csa4x2_8_lvl0.18  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.18( s8_lvl0_18, t8_lvl0_18, sintcsa4x2_8_lvl0.18, PP_11_18, cout_csa4x2_8_lvl0.17)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.18, sintcsa4x2_8_lvl0.18, PP_11_18 )#5
xor2( s8_lvl0_18, w0.Adder1.csa4x2_8_lvl0.18, cout_csa4x2_8_lvl0.17 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.18, sintcsa4x2_8_lvl0.18, PP_11_18 )#5
and2( w2.Adder1.csa4x2_8_lvl0.18, w0.Adder1.csa4x2_8_lvl0.18, cout_csa4x2_8_lvl0.17 )#5
or2( t8_lvl0_18, w1.Adder1.csa4x2_8_lvl0.18, w2.Adder1.csa4x2_8_lvl0.18  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.19, s8_lvl0_19,t8_lvl0_19,cout_csa4x2_8_lvl0.19,PP_8_19,PP_9_19,PP_10_19,PP_11_19,cout_csa4x2_8_lvl0.18) ;


   // adder1bit Adder0.csa4x2_8_lvl0.19( sintcsa4x2_8_lvl0.19, cout_csa4x2_8_lvl0.19, PP_8_19, PP_9_19, PP_10_19)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.19, PP_8_19, PP_9_19 )#5
xor2( sintcsa4x2_8_lvl0.19, w0.Adder0.csa4x2_8_lvl0.19, PP_10_19 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.19, PP_8_19, PP_9_19 )#5
and2( w2.Adder0.csa4x2_8_lvl0.19, w0.Adder0.csa4x2_8_lvl0.19, PP_10_19 )#5
or2( cout_csa4x2_8_lvl0.19, w1.Adder0.csa4x2_8_lvl0.19, w2.Adder0.csa4x2_8_lvl0.19  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.19( s8_lvl0_19, t8_lvl0_19, sintcsa4x2_8_lvl0.19, PP_11_19, cout_csa4x2_8_lvl0.18)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.19, sintcsa4x2_8_lvl0.19, PP_11_19 )#5
xor2( s8_lvl0_19, w0.Adder1.csa4x2_8_lvl0.19, cout_csa4x2_8_lvl0.18 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.19, sintcsa4x2_8_lvl0.19, PP_11_19 )#5
and2( w2.Adder1.csa4x2_8_lvl0.19, w0.Adder1.csa4x2_8_lvl0.19, cout_csa4x2_8_lvl0.18 )#5
or2( t8_lvl0_19, w1.Adder1.csa4x2_8_lvl0.19, w2.Adder1.csa4x2_8_lvl0.19  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.20, s8_lvl0_20,t8_lvl0_20,cout_csa4x2_8_lvl0.20,PP_8_20,PP_9_20,PP_10_20,PP_11_20,cout_csa4x2_8_lvl0.19) ;


   // adder1bit Adder0.csa4x2_8_lvl0.20( sintcsa4x2_8_lvl0.20, cout_csa4x2_8_lvl0.20, PP_8_20, PP_9_20, PP_10_20)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.20, PP_8_20, PP_9_20 )#5
xor2( sintcsa4x2_8_lvl0.20, w0.Adder0.csa4x2_8_lvl0.20, PP_10_20 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.20, PP_8_20, PP_9_20 )#5
and2( w2.Adder0.csa4x2_8_lvl0.20, w0.Adder0.csa4x2_8_lvl0.20, PP_10_20 )#5
or2( cout_csa4x2_8_lvl0.20, w1.Adder0.csa4x2_8_lvl0.20, w2.Adder0.csa4x2_8_lvl0.20  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.20( s8_lvl0_20, t8_lvl0_20, sintcsa4x2_8_lvl0.20, PP_11_20, cout_csa4x2_8_lvl0.19)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.20, sintcsa4x2_8_lvl0.20, PP_11_20 )#5
xor2( s8_lvl0_20, w0.Adder1.csa4x2_8_lvl0.20, cout_csa4x2_8_lvl0.19 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.20, sintcsa4x2_8_lvl0.20, PP_11_20 )#5
and2( w2.Adder1.csa4x2_8_lvl0.20, w0.Adder1.csa4x2_8_lvl0.20, cout_csa4x2_8_lvl0.19 )#5
or2( t8_lvl0_20, w1.Adder1.csa4x2_8_lvl0.20, w2.Adder1.csa4x2_8_lvl0.20  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.21, s8_lvl0_21,t8_lvl0_21,cout_csa4x2_8_lvl0.21,PP_8_21,PP_9_21,PP_10_21,PP_11_21,cout_csa4x2_8_lvl0.20) ;


   // adder1bit Adder0.csa4x2_8_lvl0.21( sintcsa4x2_8_lvl0.21, cout_csa4x2_8_lvl0.21, PP_8_21, PP_9_21, PP_10_21)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.21, PP_8_21, PP_9_21 )#5
xor2( sintcsa4x2_8_lvl0.21, w0.Adder0.csa4x2_8_lvl0.21, PP_10_21 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.21, PP_8_21, PP_9_21 )#5
and2( w2.Adder0.csa4x2_8_lvl0.21, w0.Adder0.csa4x2_8_lvl0.21, PP_10_21 )#5
or2( cout_csa4x2_8_lvl0.21, w1.Adder0.csa4x2_8_lvl0.21, w2.Adder0.csa4x2_8_lvl0.21  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.21( s8_lvl0_21, t8_lvl0_21, sintcsa4x2_8_lvl0.21, PP_11_21, cout_csa4x2_8_lvl0.20)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.21, sintcsa4x2_8_lvl0.21, PP_11_21 )#5
xor2( s8_lvl0_21, w0.Adder1.csa4x2_8_lvl0.21, cout_csa4x2_8_lvl0.20 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.21, sintcsa4x2_8_lvl0.21, PP_11_21 )#5
and2( w2.Adder1.csa4x2_8_lvl0.21, w0.Adder1.csa4x2_8_lvl0.21, cout_csa4x2_8_lvl0.20 )#5
or2( t8_lvl0_21, w1.Adder1.csa4x2_8_lvl0.21, w2.Adder1.csa4x2_8_lvl0.21  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.22, s8_lvl0_22,t8_lvl0_22,cout_csa4x2_8_lvl0.22,PP_8_22,PP_9_22,PP_10_22,PP_11_22,cout_csa4x2_8_lvl0.21) ;


   // adder1bit Adder0.csa4x2_8_lvl0.22( sintcsa4x2_8_lvl0.22, cout_csa4x2_8_lvl0.22, PP_8_22, PP_9_22, PP_10_22)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.22, PP_8_22, PP_9_22 )#5
xor2( sintcsa4x2_8_lvl0.22, w0.Adder0.csa4x2_8_lvl0.22, PP_10_22 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.22, PP_8_22, PP_9_22 )#5
and2( w2.Adder0.csa4x2_8_lvl0.22, w0.Adder0.csa4x2_8_lvl0.22, PP_10_22 )#5
or2( cout_csa4x2_8_lvl0.22, w1.Adder0.csa4x2_8_lvl0.22, w2.Adder0.csa4x2_8_lvl0.22  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.22( s8_lvl0_22, t8_lvl0_22, sintcsa4x2_8_lvl0.22, PP_11_22, cout_csa4x2_8_lvl0.21)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.22, sintcsa4x2_8_lvl0.22, PP_11_22 )#5
xor2( s8_lvl0_22, w0.Adder1.csa4x2_8_lvl0.22, cout_csa4x2_8_lvl0.21 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.22, sintcsa4x2_8_lvl0.22, PP_11_22 )#5
and2( w2.Adder1.csa4x2_8_lvl0.22, w0.Adder1.csa4x2_8_lvl0.22, cout_csa4x2_8_lvl0.21 )#5
or2( t8_lvl0_22, w1.Adder1.csa4x2_8_lvl0.22, w2.Adder1.csa4x2_8_lvl0.22  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_8_lvl0.23, s8_lvl0_23,t8_lvl0_23,cout_csa4x2_8_lvl0.23,PP_8_23,PP_9_23,PP_10_23,PP_11_23,cout_csa4x2_8_lvl0.22) ;


   // adder1bit Adder0.csa4x2_8_lvl0.23( sintcsa4x2_8_lvl0.23, cout_csa4x2_8_lvl0.23, PP_8_23, PP_9_23, PP_10_23)

// sum 
xor2( w0.Adder0.csa4x2_8_lvl0.23, PP_8_23, PP_9_23 )#5
xor2( sintcsa4x2_8_lvl0.23, w0.Adder0.csa4x2_8_lvl0.23, PP_10_23 )#5

//cout
and2( w1.Adder0.csa4x2_8_lvl0.23, PP_8_23, PP_9_23 )#5
and2( w2.Adder0.csa4x2_8_lvl0.23, w0.Adder0.csa4x2_8_lvl0.23, PP_10_23 )#5
or2( cout_csa4x2_8_lvl0.23, w1.Adder0.csa4x2_8_lvl0.23, w2.Adder0.csa4x2_8_lvl0.23  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_8_lvl0.23( s8_lvl0_23, t8_lvl0_23, sintcsa4x2_8_lvl0.23, PP_11_23, cout_csa4x2_8_lvl0.22)

// sum 
xor2( w0.Adder1.csa4x2_8_lvl0.23, sintcsa4x2_8_lvl0.23, PP_11_23 )#5
xor2( s8_lvl0_23, w0.Adder1.csa4x2_8_lvl0.23, cout_csa4x2_8_lvl0.22 )#5

//cout
and2( w1.Adder1.csa4x2_8_lvl0.23, sintcsa4x2_8_lvl0.23, PP_11_23 )#5
and2( w2.Adder1.csa4x2_8_lvl0.23, w0.Adder1.csa4x2_8_lvl0.23, cout_csa4x2_8_lvl0.22 )#5
or2( t8_lvl0_23, w1.Adder1.csa4x2_8_lvl0.23, w2.Adder1.csa4x2_8_lvl0.23  )#5

// end adder1bit


   // end csa4x2


end

// instantiating csa4x2Vec at lvl 1 

netlist
   // csa4x2 (csa4x2_0_lvl1.0, s0_lvl1_0,t0_lvl1_0,cout_csa4x2_0_lvl1.0,s0_lvl0_0,GND,s4_lvl0_0,GND,GND) ;


   // adder1bit Adder0.csa4x2_0_lvl1.0( sintcsa4x2_0_lvl1.0, cout_csa4x2_0_lvl1.0, s0_lvl0_0, GND, s4_lvl0_0)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.0, s0_lvl0_0, GND )#5
xor2( sintcsa4x2_0_lvl1.0, w0.Adder0.csa4x2_0_lvl1.0, s4_lvl0_0 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.0, s0_lvl0_0, GND )#5
and2( w2.Adder0.csa4x2_0_lvl1.0, w0.Adder0.csa4x2_0_lvl1.0, s4_lvl0_0 )#5
or2( cout_csa4x2_0_lvl1.0, w1.Adder0.csa4x2_0_lvl1.0, w2.Adder0.csa4x2_0_lvl1.0  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.0( s0_lvl1_0, t0_lvl1_0, sintcsa4x2_0_lvl1.0, GND, GND)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.0, sintcsa4x2_0_lvl1.0, GND )#5
xor2( s0_lvl1_0, w0.Adder1.csa4x2_0_lvl1.0, GND )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.0, sintcsa4x2_0_lvl1.0, GND )#5
and2( w2.Adder1.csa4x2_0_lvl1.0, w0.Adder1.csa4x2_0_lvl1.0, GND )#5
or2( t0_lvl1_0, w1.Adder1.csa4x2_0_lvl1.0, w2.Adder1.csa4x2_0_lvl1.0  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.1, s0_lvl1_1,t0_lvl1_1,cout_csa4x2_0_lvl1.1,s0_lvl0_1,t0_lvl0_0,s4_lvl0_1,t4_lvl0_0,cout_csa4x2_0_lvl1.0) ;


   // adder1bit Adder0.csa4x2_0_lvl1.1( sintcsa4x2_0_lvl1.1, cout_csa4x2_0_lvl1.1, s0_lvl0_1, t0_lvl0_0, s4_lvl0_1)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.1, s0_lvl0_1, t0_lvl0_0 )#5
xor2( sintcsa4x2_0_lvl1.1, w0.Adder0.csa4x2_0_lvl1.1, s4_lvl0_1 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.1, s0_lvl0_1, t0_lvl0_0 )#5
and2( w2.Adder0.csa4x2_0_lvl1.1, w0.Adder0.csa4x2_0_lvl1.1, s4_lvl0_1 )#5
or2( cout_csa4x2_0_lvl1.1, w1.Adder0.csa4x2_0_lvl1.1, w2.Adder0.csa4x2_0_lvl1.1  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.1( s0_lvl1_1, t0_lvl1_1, sintcsa4x2_0_lvl1.1, t4_lvl0_0, cout_csa4x2_0_lvl1.0)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.1, sintcsa4x2_0_lvl1.1, t4_lvl0_0 )#5
xor2( s0_lvl1_1, w0.Adder1.csa4x2_0_lvl1.1, cout_csa4x2_0_lvl1.0 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.1, sintcsa4x2_0_lvl1.1, t4_lvl0_0 )#5
and2( w2.Adder1.csa4x2_0_lvl1.1, w0.Adder1.csa4x2_0_lvl1.1, cout_csa4x2_0_lvl1.0 )#5
or2( t0_lvl1_1, w1.Adder1.csa4x2_0_lvl1.1, w2.Adder1.csa4x2_0_lvl1.1  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.2, s0_lvl1_2,t0_lvl1_2,cout_csa4x2_0_lvl1.2,s0_lvl0_2,t0_lvl0_1,s4_lvl0_2,t4_lvl0_1,cout_csa4x2_0_lvl1.1) ;


   // adder1bit Adder0.csa4x2_0_lvl1.2( sintcsa4x2_0_lvl1.2, cout_csa4x2_0_lvl1.2, s0_lvl0_2, t0_lvl0_1, s4_lvl0_2)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.2, s0_lvl0_2, t0_lvl0_1 )#5
xor2( sintcsa4x2_0_lvl1.2, w0.Adder0.csa4x2_0_lvl1.2, s4_lvl0_2 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.2, s0_lvl0_2, t0_lvl0_1 )#5
and2( w2.Adder0.csa4x2_0_lvl1.2, w0.Adder0.csa4x2_0_lvl1.2, s4_lvl0_2 )#5
or2( cout_csa4x2_0_lvl1.2, w1.Adder0.csa4x2_0_lvl1.2, w2.Adder0.csa4x2_0_lvl1.2  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.2( s0_lvl1_2, t0_lvl1_2, sintcsa4x2_0_lvl1.2, t4_lvl0_1, cout_csa4x2_0_lvl1.1)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.2, sintcsa4x2_0_lvl1.2, t4_lvl0_1 )#5
xor2( s0_lvl1_2, w0.Adder1.csa4x2_0_lvl1.2, cout_csa4x2_0_lvl1.1 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.2, sintcsa4x2_0_lvl1.2, t4_lvl0_1 )#5
and2( w2.Adder1.csa4x2_0_lvl1.2, w0.Adder1.csa4x2_0_lvl1.2, cout_csa4x2_0_lvl1.1 )#5
or2( t0_lvl1_2, w1.Adder1.csa4x2_0_lvl1.2, w2.Adder1.csa4x2_0_lvl1.2  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.3, s0_lvl1_3,t0_lvl1_3,cout_csa4x2_0_lvl1.3,s0_lvl0_3,t0_lvl0_2,s4_lvl0_3,t4_lvl0_2,cout_csa4x2_0_lvl1.2) ;


   // adder1bit Adder0.csa4x2_0_lvl1.3( sintcsa4x2_0_lvl1.3, cout_csa4x2_0_lvl1.3, s0_lvl0_3, t0_lvl0_2, s4_lvl0_3)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.3, s0_lvl0_3, t0_lvl0_2 )#5
xor2( sintcsa4x2_0_lvl1.3, w0.Adder0.csa4x2_0_lvl1.3, s4_lvl0_3 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.3, s0_lvl0_3, t0_lvl0_2 )#5
and2( w2.Adder0.csa4x2_0_lvl1.3, w0.Adder0.csa4x2_0_lvl1.3, s4_lvl0_3 )#5
or2( cout_csa4x2_0_lvl1.3, w1.Adder0.csa4x2_0_lvl1.3, w2.Adder0.csa4x2_0_lvl1.3  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.3( s0_lvl1_3, t0_lvl1_3, sintcsa4x2_0_lvl1.3, t4_lvl0_2, cout_csa4x2_0_lvl1.2)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.3, sintcsa4x2_0_lvl1.3, t4_lvl0_2 )#5
xor2( s0_lvl1_3, w0.Adder1.csa4x2_0_lvl1.3, cout_csa4x2_0_lvl1.2 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.3, sintcsa4x2_0_lvl1.3, t4_lvl0_2 )#5
and2( w2.Adder1.csa4x2_0_lvl1.3, w0.Adder1.csa4x2_0_lvl1.3, cout_csa4x2_0_lvl1.2 )#5
or2( t0_lvl1_3, w1.Adder1.csa4x2_0_lvl1.3, w2.Adder1.csa4x2_0_lvl1.3  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.4, s0_lvl1_4,t0_lvl1_4,cout_csa4x2_0_lvl1.4,s0_lvl0_4,t0_lvl0_3,s4_lvl0_4,t4_lvl0_3,cout_csa4x2_0_lvl1.3) ;


   // adder1bit Adder0.csa4x2_0_lvl1.4( sintcsa4x2_0_lvl1.4, cout_csa4x2_0_lvl1.4, s0_lvl0_4, t0_lvl0_3, s4_lvl0_4)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.4, s0_lvl0_4, t0_lvl0_3 )#5
xor2( sintcsa4x2_0_lvl1.4, w0.Adder0.csa4x2_0_lvl1.4, s4_lvl0_4 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.4, s0_lvl0_4, t0_lvl0_3 )#5
and2( w2.Adder0.csa4x2_0_lvl1.4, w0.Adder0.csa4x2_0_lvl1.4, s4_lvl0_4 )#5
or2( cout_csa4x2_0_lvl1.4, w1.Adder0.csa4x2_0_lvl1.4, w2.Adder0.csa4x2_0_lvl1.4  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.4( s0_lvl1_4, t0_lvl1_4, sintcsa4x2_0_lvl1.4, t4_lvl0_3, cout_csa4x2_0_lvl1.3)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.4, sintcsa4x2_0_lvl1.4, t4_lvl0_3 )#5
xor2( s0_lvl1_4, w0.Adder1.csa4x2_0_lvl1.4, cout_csa4x2_0_lvl1.3 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.4, sintcsa4x2_0_lvl1.4, t4_lvl0_3 )#5
and2( w2.Adder1.csa4x2_0_lvl1.4, w0.Adder1.csa4x2_0_lvl1.4, cout_csa4x2_0_lvl1.3 )#5
or2( t0_lvl1_4, w1.Adder1.csa4x2_0_lvl1.4, w2.Adder1.csa4x2_0_lvl1.4  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.5, s0_lvl1_5,t0_lvl1_5,cout_csa4x2_0_lvl1.5,s0_lvl0_5,t0_lvl0_4,s4_lvl0_5,t4_lvl0_4,cout_csa4x2_0_lvl1.4) ;


   // adder1bit Adder0.csa4x2_0_lvl1.5( sintcsa4x2_0_lvl1.5, cout_csa4x2_0_lvl1.5, s0_lvl0_5, t0_lvl0_4, s4_lvl0_5)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.5, s0_lvl0_5, t0_lvl0_4 )#5
xor2( sintcsa4x2_0_lvl1.5, w0.Adder0.csa4x2_0_lvl1.5, s4_lvl0_5 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.5, s0_lvl0_5, t0_lvl0_4 )#5
and2( w2.Adder0.csa4x2_0_lvl1.5, w0.Adder0.csa4x2_0_lvl1.5, s4_lvl0_5 )#5
or2( cout_csa4x2_0_lvl1.5, w1.Adder0.csa4x2_0_lvl1.5, w2.Adder0.csa4x2_0_lvl1.5  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.5( s0_lvl1_5, t0_lvl1_5, sintcsa4x2_0_lvl1.5, t4_lvl0_4, cout_csa4x2_0_lvl1.4)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.5, sintcsa4x2_0_lvl1.5, t4_lvl0_4 )#5
xor2( s0_lvl1_5, w0.Adder1.csa4x2_0_lvl1.5, cout_csa4x2_0_lvl1.4 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.5, sintcsa4x2_0_lvl1.5, t4_lvl0_4 )#5
and2( w2.Adder1.csa4x2_0_lvl1.5, w0.Adder1.csa4x2_0_lvl1.5, cout_csa4x2_0_lvl1.4 )#5
or2( t0_lvl1_5, w1.Adder1.csa4x2_0_lvl1.5, w2.Adder1.csa4x2_0_lvl1.5  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.6, s0_lvl1_6,t0_lvl1_6,cout_csa4x2_0_lvl1.6,s0_lvl0_6,t0_lvl0_5,s4_lvl0_6,t4_lvl0_5,cout_csa4x2_0_lvl1.5) ;


   // adder1bit Adder0.csa4x2_0_lvl1.6( sintcsa4x2_0_lvl1.6, cout_csa4x2_0_lvl1.6, s0_lvl0_6, t0_lvl0_5, s4_lvl0_6)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.6, s0_lvl0_6, t0_lvl0_5 )#5
xor2( sintcsa4x2_0_lvl1.6, w0.Adder0.csa4x2_0_lvl1.6, s4_lvl0_6 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.6, s0_lvl0_6, t0_lvl0_5 )#5
and2( w2.Adder0.csa4x2_0_lvl1.6, w0.Adder0.csa4x2_0_lvl1.6, s4_lvl0_6 )#5
or2( cout_csa4x2_0_lvl1.6, w1.Adder0.csa4x2_0_lvl1.6, w2.Adder0.csa4x2_0_lvl1.6  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.6( s0_lvl1_6, t0_lvl1_6, sintcsa4x2_0_lvl1.6, t4_lvl0_5, cout_csa4x2_0_lvl1.5)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.6, sintcsa4x2_0_lvl1.6, t4_lvl0_5 )#5
xor2( s0_lvl1_6, w0.Adder1.csa4x2_0_lvl1.6, cout_csa4x2_0_lvl1.5 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.6, sintcsa4x2_0_lvl1.6, t4_lvl0_5 )#5
and2( w2.Adder1.csa4x2_0_lvl1.6, w0.Adder1.csa4x2_0_lvl1.6, cout_csa4x2_0_lvl1.5 )#5
or2( t0_lvl1_6, w1.Adder1.csa4x2_0_lvl1.6, w2.Adder1.csa4x2_0_lvl1.6  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.7, s0_lvl1_7,t0_lvl1_7,cout_csa4x2_0_lvl1.7,s0_lvl0_7,t0_lvl0_6,s4_lvl0_7,t4_lvl0_6,cout_csa4x2_0_lvl1.6) ;


   // adder1bit Adder0.csa4x2_0_lvl1.7( sintcsa4x2_0_lvl1.7, cout_csa4x2_0_lvl1.7, s0_lvl0_7, t0_lvl0_6, s4_lvl0_7)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.7, s0_lvl0_7, t0_lvl0_6 )#5
xor2( sintcsa4x2_0_lvl1.7, w0.Adder0.csa4x2_0_lvl1.7, s4_lvl0_7 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.7, s0_lvl0_7, t0_lvl0_6 )#5
and2( w2.Adder0.csa4x2_0_lvl1.7, w0.Adder0.csa4x2_0_lvl1.7, s4_lvl0_7 )#5
or2( cout_csa4x2_0_lvl1.7, w1.Adder0.csa4x2_0_lvl1.7, w2.Adder0.csa4x2_0_lvl1.7  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.7( s0_lvl1_7, t0_lvl1_7, sintcsa4x2_0_lvl1.7, t4_lvl0_6, cout_csa4x2_0_lvl1.6)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.7, sintcsa4x2_0_lvl1.7, t4_lvl0_6 )#5
xor2( s0_lvl1_7, w0.Adder1.csa4x2_0_lvl1.7, cout_csa4x2_0_lvl1.6 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.7, sintcsa4x2_0_lvl1.7, t4_lvl0_6 )#5
and2( w2.Adder1.csa4x2_0_lvl1.7, w0.Adder1.csa4x2_0_lvl1.7, cout_csa4x2_0_lvl1.6 )#5
or2( t0_lvl1_7, w1.Adder1.csa4x2_0_lvl1.7, w2.Adder1.csa4x2_0_lvl1.7  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.8, s0_lvl1_8,t0_lvl1_8,cout_csa4x2_0_lvl1.8,s0_lvl0_8,t0_lvl0_7,s4_lvl0_8,t4_lvl0_7,cout_csa4x2_0_lvl1.7) ;


   // adder1bit Adder0.csa4x2_0_lvl1.8( sintcsa4x2_0_lvl1.8, cout_csa4x2_0_lvl1.8, s0_lvl0_8, t0_lvl0_7, s4_lvl0_8)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.8, s0_lvl0_8, t0_lvl0_7 )#5
xor2( sintcsa4x2_0_lvl1.8, w0.Adder0.csa4x2_0_lvl1.8, s4_lvl0_8 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.8, s0_lvl0_8, t0_lvl0_7 )#5
and2( w2.Adder0.csa4x2_0_lvl1.8, w0.Adder0.csa4x2_0_lvl1.8, s4_lvl0_8 )#5
or2( cout_csa4x2_0_lvl1.8, w1.Adder0.csa4x2_0_lvl1.8, w2.Adder0.csa4x2_0_lvl1.8  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.8( s0_lvl1_8, t0_lvl1_8, sintcsa4x2_0_lvl1.8, t4_lvl0_7, cout_csa4x2_0_lvl1.7)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.8, sintcsa4x2_0_lvl1.8, t4_lvl0_7 )#5
xor2( s0_lvl1_8, w0.Adder1.csa4x2_0_lvl1.8, cout_csa4x2_0_lvl1.7 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.8, sintcsa4x2_0_lvl1.8, t4_lvl0_7 )#5
and2( w2.Adder1.csa4x2_0_lvl1.8, w0.Adder1.csa4x2_0_lvl1.8, cout_csa4x2_0_lvl1.7 )#5
or2( t0_lvl1_8, w1.Adder1.csa4x2_0_lvl1.8, w2.Adder1.csa4x2_0_lvl1.8  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.9, s0_lvl1_9,t0_lvl1_9,cout_csa4x2_0_lvl1.9,s0_lvl0_9,t0_lvl0_8,s4_lvl0_9,t4_lvl0_8,cout_csa4x2_0_lvl1.8) ;


   // adder1bit Adder0.csa4x2_0_lvl1.9( sintcsa4x2_0_lvl1.9, cout_csa4x2_0_lvl1.9, s0_lvl0_9, t0_lvl0_8, s4_lvl0_9)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.9, s0_lvl0_9, t0_lvl0_8 )#5
xor2( sintcsa4x2_0_lvl1.9, w0.Adder0.csa4x2_0_lvl1.9, s4_lvl0_9 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.9, s0_lvl0_9, t0_lvl0_8 )#5
and2( w2.Adder0.csa4x2_0_lvl1.9, w0.Adder0.csa4x2_0_lvl1.9, s4_lvl0_9 )#5
or2( cout_csa4x2_0_lvl1.9, w1.Adder0.csa4x2_0_lvl1.9, w2.Adder0.csa4x2_0_lvl1.9  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.9( s0_lvl1_9, t0_lvl1_9, sintcsa4x2_0_lvl1.9, t4_lvl0_8, cout_csa4x2_0_lvl1.8)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.9, sintcsa4x2_0_lvl1.9, t4_lvl0_8 )#5
xor2( s0_lvl1_9, w0.Adder1.csa4x2_0_lvl1.9, cout_csa4x2_0_lvl1.8 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.9, sintcsa4x2_0_lvl1.9, t4_lvl0_8 )#5
and2( w2.Adder1.csa4x2_0_lvl1.9, w0.Adder1.csa4x2_0_lvl1.9, cout_csa4x2_0_lvl1.8 )#5
or2( t0_lvl1_9, w1.Adder1.csa4x2_0_lvl1.9, w2.Adder1.csa4x2_0_lvl1.9  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.10, s0_lvl1_10,t0_lvl1_10,cout_csa4x2_0_lvl1.10,s0_lvl0_10,t0_lvl0_9,s4_lvl0_10,t4_lvl0_9,cout_csa4x2_0_lvl1.9) ;


   // adder1bit Adder0.csa4x2_0_lvl1.10( sintcsa4x2_0_lvl1.10, cout_csa4x2_0_lvl1.10, s0_lvl0_10, t0_lvl0_9, s4_lvl0_10)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.10, s0_lvl0_10, t0_lvl0_9 )#5
xor2( sintcsa4x2_0_lvl1.10, w0.Adder0.csa4x2_0_lvl1.10, s4_lvl0_10 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.10, s0_lvl0_10, t0_lvl0_9 )#5
and2( w2.Adder0.csa4x2_0_lvl1.10, w0.Adder0.csa4x2_0_lvl1.10, s4_lvl0_10 )#5
or2( cout_csa4x2_0_lvl1.10, w1.Adder0.csa4x2_0_lvl1.10, w2.Adder0.csa4x2_0_lvl1.10  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.10( s0_lvl1_10, t0_lvl1_10, sintcsa4x2_0_lvl1.10, t4_lvl0_9, cout_csa4x2_0_lvl1.9)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.10, sintcsa4x2_0_lvl1.10, t4_lvl0_9 )#5
xor2( s0_lvl1_10, w0.Adder1.csa4x2_0_lvl1.10, cout_csa4x2_0_lvl1.9 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.10, sintcsa4x2_0_lvl1.10, t4_lvl0_9 )#5
and2( w2.Adder1.csa4x2_0_lvl1.10, w0.Adder1.csa4x2_0_lvl1.10, cout_csa4x2_0_lvl1.9 )#5
or2( t0_lvl1_10, w1.Adder1.csa4x2_0_lvl1.10, w2.Adder1.csa4x2_0_lvl1.10  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.11, s0_lvl1_11,t0_lvl1_11,cout_csa4x2_0_lvl1.11,s0_lvl0_11,t0_lvl0_10,s4_lvl0_11,t4_lvl0_10,cout_csa4x2_0_lvl1.10) ;


   // adder1bit Adder0.csa4x2_0_lvl1.11( sintcsa4x2_0_lvl1.11, cout_csa4x2_0_lvl1.11, s0_lvl0_11, t0_lvl0_10, s4_lvl0_11)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.11, s0_lvl0_11, t0_lvl0_10 )#5
xor2( sintcsa4x2_0_lvl1.11, w0.Adder0.csa4x2_0_lvl1.11, s4_lvl0_11 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.11, s0_lvl0_11, t0_lvl0_10 )#5
and2( w2.Adder0.csa4x2_0_lvl1.11, w0.Adder0.csa4x2_0_lvl1.11, s4_lvl0_11 )#5
or2( cout_csa4x2_0_lvl1.11, w1.Adder0.csa4x2_0_lvl1.11, w2.Adder0.csa4x2_0_lvl1.11  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.11( s0_lvl1_11, t0_lvl1_11, sintcsa4x2_0_lvl1.11, t4_lvl0_10, cout_csa4x2_0_lvl1.10)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.11, sintcsa4x2_0_lvl1.11, t4_lvl0_10 )#5
xor2( s0_lvl1_11, w0.Adder1.csa4x2_0_lvl1.11, cout_csa4x2_0_lvl1.10 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.11, sintcsa4x2_0_lvl1.11, t4_lvl0_10 )#5
and2( w2.Adder1.csa4x2_0_lvl1.11, w0.Adder1.csa4x2_0_lvl1.11, cout_csa4x2_0_lvl1.10 )#5
or2( t0_lvl1_11, w1.Adder1.csa4x2_0_lvl1.11, w2.Adder1.csa4x2_0_lvl1.11  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.12, s0_lvl1_12,t0_lvl1_12,cout_csa4x2_0_lvl1.12,s0_lvl0_12,t0_lvl0_11,s4_lvl0_12,t4_lvl0_11,cout_csa4x2_0_lvl1.11) ;


   // adder1bit Adder0.csa4x2_0_lvl1.12( sintcsa4x2_0_lvl1.12, cout_csa4x2_0_lvl1.12, s0_lvl0_12, t0_lvl0_11, s4_lvl0_12)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.12, s0_lvl0_12, t0_lvl0_11 )#5
xor2( sintcsa4x2_0_lvl1.12, w0.Adder0.csa4x2_0_lvl1.12, s4_lvl0_12 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.12, s0_lvl0_12, t0_lvl0_11 )#5
and2( w2.Adder0.csa4x2_0_lvl1.12, w0.Adder0.csa4x2_0_lvl1.12, s4_lvl0_12 )#5
or2( cout_csa4x2_0_lvl1.12, w1.Adder0.csa4x2_0_lvl1.12, w2.Adder0.csa4x2_0_lvl1.12  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.12( s0_lvl1_12, t0_lvl1_12, sintcsa4x2_0_lvl1.12, t4_lvl0_11, cout_csa4x2_0_lvl1.11)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.12, sintcsa4x2_0_lvl1.12, t4_lvl0_11 )#5
xor2( s0_lvl1_12, w0.Adder1.csa4x2_0_lvl1.12, cout_csa4x2_0_lvl1.11 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.12, sintcsa4x2_0_lvl1.12, t4_lvl0_11 )#5
and2( w2.Adder1.csa4x2_0_lvl1.12, w0.Adder1.csa4x2_0_lvl1.12, cout_csa4x2_0_lvl1.11 )#5
or2( t0_lvl1_12, w1.Adder1.csa4x2_0_lvl1.12, w2.Adder1.csa4x2_0_lvl1.12  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.13, s0_lvl1_13,t0_lvl1_13,cout_csa4x2_0_lvl1.13,s0_lvl0_13,t0_lvl0_12,s4_lvl0_13,t4_lvl0_12,cout_csa4x2_0_lvl1.12) ;


   // adder1bit Adder0.csa4x2_0_lvl1.13( sintcsa4x2_0_lvl1.13, cout_csa4x2_0_lvl1.13, s0_lvl0_13, t0_lvl0_12, s4_lvl0_13)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.13, s0_lvl0_13, t0_lvl0_12 )#5
xor2( sintcsa4x2_0_lvl1.13, w0.Adder0.csa4x2_0_lvl1.13, s4_lvl0_13 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.13, s0_lvl0_13, t0_lvl0_12 )#5
and2( w2.Adder0.csa4x2_0_lvl1.13, w0.Adder0.csa4x2_0_lvl1.13, s4_lvl0_13 )#5
or2( cout_csa4x2_0_lvl1.13, w1.Adder0.csa4x2_0_lvl1.13, w2.Adder0.csa4x2_0_lvl1.13  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.13( s0_lvl1_13, t0_lvl1_13, sintcsa4x2_0_lvl1.13, t4_lvl0_12, cout_csa4x2_0_lvl1.12)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.13, sintcsa4x2_0_lvl1.13, t4_lvl0_12 )#5
xor2( s0_lvl1_13, w0.Adder1.csa4x2_0_lvl1.13, cout_csa4x2_0_lvl1.12 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.13, sintcsa4x2_0_lvl1.13, t4_lvl0_12 )#5
and2( w2.Adder1.csa4x2_0_lvl1.13, w0.Adder1.csa4x2_0_lvl1.13, cout_csa4x2_0_lvl1.12 )#5
or2( t0_lvl1_13, w1.Adder1.csa4x2_0_lvl1.13, w2.Adder1.csa4x2_0_lvl1.13  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.14, s0_lvl1_14,t0_lvl1_14,cout_csa4x2_0_lvl1.14,s0_lvl0_14,t0_lvl0_13,s4_lvl0_14,t4_lvl0_13,cout_csa4x2_0_lvl1.13) ;


   // adder1bit Adder0.csa4x2_0_lvl1.14( sintcsa4x2_0_lvl1.14, cout_csa4x2_0_lvl1.14, s0_lvl0_14, t0_lvl0_13, s4_lvl0_14)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.14, s0_lvl0_14, t0_lvl0_13 )#5
xor2( sintcsa4x2_0_lvl1.14, w0.Adder0.csa4x2_0_lvl1.14, s4_lvl0_14 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.14, s0_lvl0_14, t0_lvl0_13 )#5
and2( w2.Adder0.csa4x2_0_lvl1.14, w0.Adder0.csa4x2_0_lvl1.14, s4_lvl0_14 )#5
or2( cout_csa4x2_0_lvl1.14, w1.Adder0.csa4x2_0_lvl1.14, w2.Adder0.csa4x2_0_lvl1.14  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.14( s0_lvl1_14, t0_lvl1_14, sintcsa4x2_0_lvl1.14, t4_lvl0_13, cout_csa4x2_0_lvl1.13)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.14, sintcsa4x2_0_lvl1.14, t4_lvl0_13 )#5
xor2( s0_lvl1_14, w0.Adder1.csa4x2_0_lvl1.14, cout_csa4x2_0_lvl1.13 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.14, sintcsa4x2_0_lvl1.14, t4_lvl0_13 )#5
and2( w2.Adder1.csa4x2_0_lvl1.14, w0.Adder1.csa4x2_0_lvl1.14, cout_csa4x2_0_lvl1.13 )#5
or2( t0_lvl1_14, w1.Adder1.csa4x2_0_lvl1.14, w2.Adder1.csa4x2_0_lvl1.14  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.15, s0_lvl1_15,t0_lvl1_15,cout_csa4x2_0_lvl1.15,s0_lvl0_15,t0_lvl0_14,s4_lvl0_15,t4_lvl0_14,cout_csa4x2_0_lvl1.14) ;


   // adder1bit Adder0.csa4x2_0_lvl1.15( sintcsa4x2_0_lvl1.15, cout_csa4x2_0_lvl1.15, s0_lvl0_15, t0_lvl0_14, s4_lvl0_15)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.15, s0_lvl0_15, t0_lvl0_14 )#5
xor2( sintcsa4x2_0_lvl1.15, w0.Adder0.csa4x2_0_lvl1.15, s4_lvl0_15 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.15, s0_lvl0_15, t0_lvl0_14 )#5
and2( w2.Adder0.csa4x2_0_lvl1.15, w0.Adder0.csa4x2_0_lvl1.15, s4_lvl0_15 )#5
or2( cout_csa4x2_0_lvl1.15, w1.Adder0.csa4x2_0_lvl1.15, w2.Adder0.csa4x2_0_lvl1.15  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.15( s0_lvl1_15, t0_lvl1_15, sintcsa4x2_0_lvl1.15, t4_lvl0_14, cout_csa4x2_0_lvl1.14)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.15, sintcsa4x2_0_lvl1.15, t4_lvl0_14 )#5
xor2( s0_lvl1_15, w0.Adder1.csa4x2_0_lvl1.15, cout_csa4x2_0_lvl1.14 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.15, sintcsa4x2_0_lvl1.15, t4_lvl0_14 )#5
and2( w2.Adder1.csa4x2_0_lvl1.15, w0.Adder1.csa4x2_0_lvl1.15, cout_csa4x2_0_lvl1.14 )#5
or2( t0_lvl1_15, w1.Adder1.csa4x2_0_lvl1.15, w2.Adder1.csa4x2_0_lvl1.15  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.16, s0_lvl1_16,t0_lvl1_16,cout_csa4x2_0_lvl1.16,s0_lvl0_16,t0_lvl0_15,s4_lvl0_16,t4_lvl0_15,cout_csa4x2_0_lvl1.15) ;


   // adder1bit Adder0.csa4x2_0_lvl1.16( sintcsa4x2_0_lvl1.16, cout_csa4x2_0_lvl1.16, s0_lvl0_16, t0_lvl0_15, s4_lvl0_16)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.16, s0_lvl0_16, t0_lvl0_15 )#5
xor2( sintcsa4x2_0_lvl1.16, w0.Adder0.csa4x2_0_lvl1.16, s4_lvl0_16 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.16, s0_lvl0_16, t0_lvl0_15 )#5
and2( w2.Adder0.csa4x2_0_lvl1.16, w0.Adder0.csa4x2_0_lvl1.16, s4_lvl0_16 )#5
or2( cout_csa4x2_0_lvl1.16, w1.Adder0.csa4x2_0_lvl1.16, w2.Adder0.csa4x2_0_lvl1.16  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.16( s0_lvl1_16, t0_lvl1_16, sintcsa4x2_0_lvl1.16, t4_lvl0_15, cout_csa4x2_0_lvl1.15)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.16, sintcsa4x2_0_lvl1.16, t4_lvl0_15 )#5
xor2( s0_lvl1_16, w0.Adder1.csa4x2_0_lvl1.16, cout_csa4x2_0_lvl1.15 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.16, sintcsa4x2_0_lvl1.16, t4_lvl0_15 )#5
and2( w2.Adder1.csa4x2_0_lvl1.16, w0.Adder1.csa4x2_0_lvl1.16, cout_csa4x2_0_lvl1.15 )#5
or2( t0_lvl1_16, w1.Adder1.csa4x2_0_lvl1.16, w2.Adder1.csa4x2_0_lvl1.16  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.17, s0_lvl1_17,t0_lvl1_17,cout_csa4x2_0_lvl1.17,s0_lvl0_17,t0_lvl0_16,s4_lvl0_17,t4_lvl0_16,cout_csa4x2_0_lvl1.16) ;


   // adder1bit Adder0.csa4x2_0_lvl1.17( sintcsa4x2_0_lvl1.17, cout_csa4x2_0_lvl1.17, s0_lvl0_17, t0_lvl0_16, s4_lvl0_17)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.17, s0_lvl0_17, t0_lvl0_16 )#5
xor2( sintcsa4x2_0_lvl1.17, w0.Adder0.csa4x2_0_lvl1.17, s4_lvl0_17 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.17, s0_lvl0_17, t0_lvl0_16 )#5
and2( w2.Adder0.csa4x2_0_lvl1.17, w0.Adder0.csa4x2_0_lvl1.17, s4_lvl0_17 )#5
or2( cout_csa4x2_0_lvl1.17, w1.Adder0.csa4x2_0_lvl1.17, w2.Adder0.csa4x2_0_lvl1.17  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.17( s0_lvl1_17, t0_lvl1_17, sintcsa4x2_0_lvl1.17, t4_lvl0_16, cout_csa4x2_0_lvl1.16)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.17, sintcsa4x2_0_lvl1.17, t4_lvl0_16 )#5
xor2( s0_lvl1_17, w0.Adder1.csa4x2_0_lvl1.17, cout_csa4x2_0_lvl1.16 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.17, sintcsa4x2_0_lvl1.17, t4_lvl0_16 )#5
and2( w2.Adder1.csa4x2_0_lvl1.17, w0.Adder1.csa4x2_0_lvl1.17, cout_csa4x2_0_lvl1.16 )#5
or2( t0_lvl1_17, w1.Adder1.csa4x2_0_lvl1.17, w2.Adder1.csa4x2_0_lvl1.17  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.18, s0_lvl1_18,t0_lvl1_18,cout_csa4x2_0_lvl1.18,s0_lvl0_18,t0_lvl0_17,s4_lvl0_18,t4_lvl0_17,cout_csa4x2_0_lvl1.17) ;


   // adder1bit Adder0.csa4x2_0_lvl1.18( sintcsa4x2_0_lvl1.18, cout_csa4x2_0_lvl1.18, s0_lvl0_18, t0_lvl0_17, s4_lvl0_18)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.18, s0_lvl0_18, t0_lvl0_17 )#5
xor2( sintcsa4x2_0_lvl1.18, w0.Adder0.csa4x2_0_lvl1.18, s4_lvl0_18 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.18, s0_lvl0_18, t0_lvl0_17 )#5
and2( w2.Adder0.csa4x2_0_lvl1.18, w0.Adder0.csa4x2_0_lvl1.18, s4_lvl0_18 )#5
or2( cout_csa4x2_0_lvl1.18, w1.Adder0.csa4x2_0_lvl1.18, w2.Adder0.csa4x2_0_lvl1.18  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.18( s0_lvl1_18, t0_lvl1_18, sintcsa4x2_0_lvl1.18, t4_lvl0_17, cout_csa4x2_0_lvl1.17)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.18, sintcsa4x2_0_lvl1.18, t4_lvl0_17 )#5
xor2( s0_lvl1_18, w0.Adder1.csa4x2_0_lvl1.18, cout_csa4x2_0_lvl1.17 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.18, sintcsa4x2_0_lvl1.18, t4_lvl0_17 )#5
and2( w2.Adder1.csa4x2_0_lvl1.18, w0.Adder1.csa4x2_0_lvl1.18, cout_csa4x2_0_lvl1.17 )#5
or2( t0_lvl1_18, w1.Adder1.csa4x2_0_lvl1.18, w2.Adder1.csa4x2_0_lvl1.18  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.19, s0_lvl1_19,t0_lvl1_19,cout_csa4x2_0_lvl1.19,s0_lvl0_19,t0_lvl0_18,s4_lvl0_19,t4_lvl0_18,cout_csa4x2_0_lvl1.18) ;


   // adder1bit Adder0.csa4x2_0_lvl1.19( sintcsa4x2_0_lvl1.19, cout_csa4x2_0_lvl1.19, s0_lvl0_19, t0_lvl0_18, s4_lvl0_19)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.19, s0_lvl0_19, t0_lvl0_18 )#5
xor2( sintcsa4x2_0_lvl1.19, w0.Adder0.csa4x2_0_lvl1.19, s4_lvl0_19 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.19, s0_lvl0_19, t0_lvl0_18 )#5
and2( w2.Adder0.csa4x2_0_lvl1.19, w0.Adder0.csa4x2_0_lvl1.19, s4_lvl0_19 )#5
or2( cout_csa4x2_0_lvl1.19, w1.Adder0.csa4x2_0_lvl1.19, w2.Adder0.csa4x2_0_lvl1.19  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.19( s0_lvl1_19, t0_lvl1_19, sintcsa4x2_0_lvl1.19, t4_lvl0_18, cout_csa4x2_0_lvl1.18)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.19, sintcsa4x2_0_lvl1.19, t4_lvl0_18 )#5
xor2( s0_lvl1_19, w0.Adder1.csa4x2_0_lvl1.19, cout_csa4x2_0_lvl1.18 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.19, sintcsa4x2_0_lvl1.19, t4_lvl0_18 )#5
and2( w2.Adder1.csa4x2_0_lvl1.19, w0.Adder1.csa4x2_0_lvl1.19, cout_csa4x2_0_lvl1.18 )#5
or2( t0_lvl1_19, w1.Adder1.csa4x2_0_lvl1.19, w2.Adder1.csa4x2_0_lvl1.19  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.20, s0_lvl1_20,t0_lvl1_20,cout_csa4x2_0_lvl1.20,s0_lvl0_20,t0_lvl0_19,s4_lvl0_20,t4_lvl0_19,cout_csa4x2_0_lvl1.19) ;


   // adder1bit Adder0.csa4x2_0_lvl1.20( sintcsa4x2_0_lvl1.20, cout_csa4x2_0_lvl1.20, s0_lvl0_20, t0_lvl0_19, s4_lvl0_20)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.20, s0_lvl0_20, t0_lvl0_19 )#5
xor2( sintcsa4x2_0_lvl1.20, w0.Adder0.csa4x2_0_lvl1.20, s4_lvl0_20 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.20, s0_lvl0_20, t0_lvl0_19 )#5
and2( w2.Adder0.csa4x2_0_lvl1.20, w0.Adder0.csa4x2_0_lvl1.20, s4_lvl0_20 )#5
or2( cout_csa4x2_0_lvl1.20, w1.Adder0.csa4x2_0_lvl1.20, w2.Adder0.csa4x2_0_lvl1.20  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.20( s0_lvl1_20, t0_lvl1_20, sintcsa4x2_0_lvl1.20, t4_lvl0_19, cout_csa4x2_0_lvl1.19)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.20, sintcsa4x2_0_lvl1.20, t4_lvl0_19 )#5
xor2( s0_lvl1_20, w0.Adder1.csa4x2_0_lvl1.20, cout_csa4x2_0_lvl1.19 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.20, sintcsa4x2_0_lvl1.20, t4_lvl0_19 )#5
and2( w2.Adder1.csa4x2_0_lvl1.20, w0.Adder1.csa4x2_0_lvl1.20, cout_csa4x2_0_lvl1.19 )#5
or2( t0_lvl1_20, w1.Adder1.csa4x2_0_lvl1.20, w2.Adder1.csa4x2_0_lvl1.20  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.21, s0_lvl1_21,t0_lvl1_21,cout_csa4x2_0_lvl1.21,s0_lvl0_21,t0_lvl0_20,s4_lvl0_21,t4_lvl0_20,cout_csa4x2_0_lvl1.20) ;


   // adder1bit Adder0.csa4x2_0_lvl1.21( sintcsa4x2_0_lvl1.21, cout_csa4x2_0_lvl1.21, s0_lvl0_21, t0_lvl0_20, s4_lvl0_21)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.21, s0_lvl0_21, t0_lvl0_20 )#5
xor2( sintcsa4x2_0_lvl1.21, w0.Adder0.csa4x2_0_lvl1.21, s4_lvl0_21 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.21, s0_lvl0_21, t0_lvl0_20 )#5
and2( w2.Adder0.csa4x2_0_lvl1.21, w0.Adder0.csa4x2_0_lvl1.21, s4_lvl0_21 )#5
or2( cout_csa4x2_0_lvl1.21, w1.Adder0.csa4x2_0_lvl1.21, w2.Adder0.csa4x2_0_lvl1.21  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.21( s0_lvl1_21, t0_lvl1_21, sintcsa4x2_0_lvl1.21, t4_lvl0_20, cout_csa4x2_0_lvl1.20)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.21, sintcsa4x2_0_lvl1.21, t4_lvl0_20 )#5
xor2( s0_lvl1_21, w0.Adder1.csa4x2_0_lvl1.21, cout_csa4x2_0_lvl1.20 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.21, sintcsa4x2_0_lvl1.21, t4_lvl0_20 )#5
and2( w2.Adder1.csa4x2_0_lvl1.21, w0.Adder1.csa4x2_0_lvl1.21, cout_csa4x2_0_lvl1.20 )#5
or2( t0_lvl1_21, w1.Adder1.csa4x2_0_lvl1.21, w2.Adder1.csa4x2_0_lvl1.21  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.22, s0_lvl1_22,t0_lvl1_22,cout_csa4x2_0_lvl1.22,s0_lvl0_22,t0_lvl0_21,s4_lvl0_22,t4_lvl0_21,cout_csa4x2_0_lvl1.21) ;


   // adder1bit Adder0.csa4x2_0_lvl1.22( sintcsa4x2_0_lvl1.22, cout_csa4x2_0_lvl1.22, s0_lvl0_22, t0_lvl0_21, s4_lvl0_22)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.22, s0_lvl0_22, t0_lvl0_21 )#5
xor2( sintcsa4x2_0_lvl1.22, w0.Adder0.csa4x2_0_lvl1.22, s4_lvl0_22 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.22, s0_lvl0_22, t0_lvl0_21 )#5
and2( w2.Adder0.csa4x2_0_lvl1.22, w0.Adder0.csa4x2_0_lvl1.22, s4_lvl0_22 )#5
or2( cout_csa4x2_0_lvl1.22, w1.Adder0.csa4x2_0_lvl1.22, w2.Adder0.csa4x2_0_lvl1.22  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.22( s0_lvl1_22, t0_lvl1_22, sintcsa4x2_0_lvl1.22, t4_lvl0_21, cout_csa4x2_0_lvl1.21)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.22, sintcsa4x2_0_lvl1.22, t4_lvl0_21 )#5
xor2( s0_lvl1_22, w0.Adder1.csa4x2_0_lvl1.22, cout_csa4x2_0_lvl1.21 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.22, sintcsa4x2_0_lvl1.22, t4_lvl0_21 )#5
and2( w2.Adder1.csa4x2_0_lvl1.22, w0.Adder1.csa4x2_0_lvl1.22, cout_csa4x2_0_lvl1.21 )#5
or2( t0_lvl1_22, w1.Adder1.csa4x2_0_lvl1.22, w2.Adder1.csa4x2_0_lvl1.22  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl1.23, s0_lvl1_23,t0_lvl1_23,cout_csa4x2_0_lvl1.23,s0_lvl0_23,t0_lvl0_22,s4_lvl0_23,t4_lvl0_22,cout_csa4x2_0_lvl1.22) ;


   // adder1bit Adder0.csa4x2_0_lvl1.23( sintcsa4x2_0_lvl1.23, cout_csa4x2_0_lvl1.23, s0_lvl0_23, t0_lvl0_22, s4_lvl0_23)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl1.23, s0_lvl0_23, t0_lvl0_22 )#5
xor2( sintcsa4x2_0_lvl1.23, w0.Adder0.csa4x2_0_lvl1.23, s4_lvl0_23 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl1.23, s0_lvl0_23, t0_lvl0_22 )#5
and2( w2.Adder0.csa4x2_0_lvl1.23, w0.Adder0.csa4x2_0_lvl1.23, s4_lvl0_23 )#5
or2( cout_csa4x2_0_lvl1.23, w1.Adder0.csa4x2_0_lvl1.23, w2.Adder0.csa4x2_0_lvl1.23  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl1.23( s0_lvl1_23, t0_lvl1_23, sintcsa4x2_0_lvl1.23, t4_lvl0_22, cout_csa4x2_0_lvl1.22)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl1.23, sintcsa4x2_0_lvl1.23, t4_lvl0_22 )#5
xor2( s0_lvl1_23, w0.Adder1.csa4x2_0_lvl1.23, cout_csa4x2_0_lvl1.22 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl1.23, sintcsa4x2_0_lvl1.23, t4_lvl0_22 )#5
and2( w2.Adder1.csa4x2_0_lvl1.23, w0.Adder1.csa4x2_0_lvl1.23, cout_csa4x2_0_lvl1.22 )#5
or2( t0_lvl1_23, w1.Adder1.csa4x2_0_lvl1.23, w2.Adder1.csa4x2_0_lvl1.23  )#5

// end adder1bit


   // end csa4x2


end

// instantiating csa4x2Vec at lvl 2 

netlist
   // csa4x2 (csa4x2_0_lvl2.0, s0_lvl2_0,t0_lvl2_0,cout_csa4x2_0_lvl2.0,s8_lvl0_0,GND,s0_lvl1_0,GND,GND) ;


   // adder1bit Adder0.csa4x2_0_lvl2.0( sintcsa4x2_0_lvl2.0, cout_csa4x2_0_lvl2.0, s8_lvl0_0, GND, s0_lvl1_0)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.0, s8_lvl0_0, GND )#5
xor2( sintcsa4x2_0_lvl2.0, w0.Adder0.csa4x2_0_lvl2.0, s0_lvl1_0 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.0, s8_lvl0_0, GND )#5
and2( w2.Adder0.csa4x2_0_lvl2.0, w0.Adder0.csa4x2_0_lvl2.0, s0_lvl1_0 )#5
or2( cout_csa4x2_0_lvl2.0, w1.Adder0.csa4x2_0_lvl2.0, w2.Adder0.csa4x2_0_lvl2.0  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.0( s0_lvl2_0, t0_lvl2_0, sintcsa4x2_0_lvl2.0, GND, GND)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.0, sintcsa4x2_0_lvl2.0, GND )#5
xor2( s0_lvl2_0, w0.Adder1.csa4x2_0_lvl2.0, GND )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.0, sintcsa4x2_0_lvl2.0, GND )#5
and2( w2.Adder1.csa4x2_0_lvl2.0, w0.Adder1.csa4x2_0_lvl2.0, GND )#5
or2( t0_lvl2_0, w1.Adder1.csa4x2_0_lvl2.0, w2.Adder1.csa4x2_0_lvl2.0  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.1, s0_lvl2_1,t0_lvl2_1,cout_csa4x2_0_lvl2.1,s8_lvl0_1,t8_lvl0_0,s0_lvl1_1,t0_lvl1_0,cout_csa4x2_0_lvl2.0) ;


   // adder1bit Adder0.csa4x2_0_lvl2.1( sintcsa4x2_0_lvl2.1, cout_csa4x2_0_lvl2.1, s8_lvl0_1, t8_lvl0_0, s0_lvl1_1)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.1, s8_lvl0_1, t8_lvl0_0 )#5
xor2( sintcsa4x2_0_lvl2.1, w0.Adder0.csa4x2_0_lvl2.1, s0_lvl1_1 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.1, s8_lvl0_1, t8_lvl0_0 )#5
and2( w2.Adder0.csa4x2_0_lvl2.1, w0.Adder0.csa4x2_0_lvl2.1, s0_lvl1_1 )#5
or2( cout_csa4x2_0_lvl2.1, w1.Adder0.csa4x2_0_lvl2.1, w2.Adder0.csa4x2_0_lvl2.1  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.1( s0_lvl2_1, t0_lvl2_1, sintcsa4x2_0_lvl2.1, t0_lvl1_0, cout_csa4x2_0_lvl2.0)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.1, sintcsa4x2_0_lvl2.1, t0_lvl1_0 )#5
xor2( s0_lvl2_1, w0.Adder1.csa4x2_0_lvl2.1, cout_csa4x2_0_lvl2.0 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.1, sintcsa4x2_0_lvl2.1, t0_lvl1_0 )#5
and2( w2.Adder1.csa4x2_0_lvl2.1, w0.Adder1.csa4x2_0_lvl2.1, cout_csa4x2_0_lvl2.0 )#5
or2( t0_lvl2_1, w1.Adder1.csa4x2_0_lvl2.1, w2.Adder1.csa4x2_0_lvl2.1  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.2, s0_lvl2_2,t0_lvl2_2,cout_csa4x2_0_lvl2.2,s8_lvl0_2,t8_lvl0_1,s0_lvl1_2,t0_lvl1_1,cout_csa4x2_0_lvl2.1) ;


   // adder1bit Adder0.csa4x2_0_lvl2.2( sintcsa4x2_0_lvl2.2, cout_csa4x2_0_lvl2.2, s8_lvl0_2, t8_lvl0_1, s0_lvl1_2)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.2, s8_lvl0_2, t8_lvl0_1 )#5
xor2( sintcsa4x2_0_lvl2.2, w0.Adder0.csa4x2_0_lvl2.2, s0_lvl1_2 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.2, s8_lvl0_2, t8_lvl0_1 )#5
and2( w2.Adder0.csa4x2_0_lvl2.2, w0.Adder0.csa4x2_0_lvl2.2, s0_lvl1_2 )#5
or2( cout_csa4x2_0_lvl2.2, w1.Adder0.csa4x2_0_lvl2.2, w2.Adder0.csa4x2_0_lvl2.2  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.2( s0_lvl2_2, t0_lvl2_2, sintcsa4x2_0_lvl2.2, t0_lvl1_1, cout_csa4x2_0_lvl2.1)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.2, sintcsa4x2_0_lvl2.2, t0_lvl1_1 )#5
xor2( s0_lvl2_2, w0.Adder1.csa4x2_0_lvl2.2, cout_csa4x2_0_lvl2.1 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.2, sintcsa4x2_0_lvl2.2, t0_lvl1_1 )#5
and2( w2.Adder1.csa4x2_0_lvl2.2, w0.Adder1.csa4x2_0_lvl2.2, cout_csa4x2_0_lvl2.1 )#5
or2( t0_lvl2_2, w1.Adder1.csa4x2_0_lvl2.2, w2.Adder1.csa4x2_0_lvl2.2  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.3, s0_lvl2_3,t0_lvl2_3,cout_csa4x2_0_lvl2.3,s8_lvl0_3,t8_lvl0_2,s0_lvl1_3,t0_lvl1_2,cout_csa4x2_0_lvl2.2) ;


   // adder1bit Adder0.csa4x2_0_lvl2.3( sintcsa4x2_0_lvl2.3, cout_csa4x2_0_lvl2.3, s8_lvl0_3, t8_lvl0_2, s0_lvl1_3)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.3, s8_lvl0_3, t8_lvl0_2 )#5
xor2( sintcsa4x2_0_lvl2.3, w0.Adder0.csa4x2_0_lvl2.3, s0_lvl1_3 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.3, s8_lvl0_3, t8_lvl0_2 )#5
and2( w2.Adder0.csa4x2_0_lvl2.3, w0.Adder0.csa4x2_0_lvl2.3, s0_lvl1_3 )#5
or2( cout_csa4x2_0_lvl2.3, w1.Adder0.csa4x2_0_lvl2.3, w2.Adder0.csa4x2_0_lvl2.3  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.3( s0_lvl2_3, t0_lvl2_3, sintcsa4x2_0_lvl2.3, t0_lvl1_2, cout_csa4x2_0_lvl2.2)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.3, sintcsa4x2_0_lvl2.3, t0_lvl1_2 )#5
xor2( s0_lvl2_3, w0.Adder1.csa4x2_0_lvl2.3, cout_csa4x2_0_lvl2.2 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.3, sintcsa4x2_0_lvl2.3, t0_lvl1_2 )#5
and2( w2.Adder1.csa4x2_0_lvl2.3, w0.Adder1.csa4x2_0_lvl2.3, cout_csa4x2_0_lvl2.2 )#5
or2( t0_lvl2_3, w1.Adder1.csa4x2_0_lvl2.3, w2.Adder1.csa4x2_0_lvl2.3  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.4, s0_lvl2_4,t0_lvl2_4,cout_csa4x2_0_lvl2.4,s8_lvl0_4,t8_lvl0_3,s0_lvl1_4,t0_lvl1_3,cout_csa4x2_0_lvl2.3) ;


   // adder1bit Adder0.csa4x2_0_lvl2.4( sintcsa4x2_0_lvl2.4, cout_csa4x2_0_lvl2.4, s8_lvl0_4, t8_lvl0_3, s0_lvl1_4)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.4, s8_lvl0_4, t8_lvl0_3 )#5
xor2( sintcsa4x2_0_lvl2.4, w0.Adder0.csa4x2_0_lvl2.4, s0_lvl1_4 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.4, s8_lvl0_4, t8_lvl0_3 )#5
and2( w2.Adder0.csa4x2_0_lvl2.4, w0.Adder0.csa4x2_0_lvl2.4, s0_lvl1_4 )#5
or2( cout_csa4x2_0_lvl2.4, w1.Adder0.csa4x2_0_lvl2.4, w2.Adder0.csa4x2_0_lvl2.4  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.4( s0_lvl2_4, t0_lvl2_4, sintcsa4x2_0_lvl2.4, t0_lvl1_3, cout_csa4x2_0_lvl2.3)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.4, sintcsa4x2_0_lvl2.4, t0_lvl1_3 )#5
xor2( s0_lvl2_4, w0.Adder1.csa4x2_0_lvl2.4, cout_csa4x2_0_lvl2.3 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.4, sintcsa4x2_0_lvl2.4, t0_lvl1_3 )#5
and2( w2.Adder1.csa4x2_0_lvl2.4, w0.Adder1.csa4x2_0_lvl2.4, cout_csa4x2_0_lvl2.3 )#5
or2( t0_lvl2_4, w1.Adder1.csa4x2_0_lvl2.4, w2.Adder1.csa4x2_0_lvl2.4  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.5, s0_lvl2_5,t0_lvl2_5,cout_csa4x2_0_lvl2.5,s8_lvl0_5,t8_lvl0_4,s0_lvl1_5,t0_lvl1_4,cout_csa4x2_0_lvl2.4) ;


   // adder1bit Adder0.csa4x2_0_lvl2.5( sintcsa4x2_0_lvl2.5, cout_csa4x2_0_lvl2.5, s8_lvl0_5, t8_lvl0_4, s0_lvl1_5)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.5, s8_lvl0_5, t8_lvl0_4 )#5
xor2( sintcsa4x2_0_lvl2.5, w0.Adder0.csa4x2_0_lvl2.5, s0_lvl1_5 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.5, s8_lvl0_5, t8_lvl0_4 )#5
and2( w2.Adder0.csa4x2_0_lvl2.5, w0.Adder0.csa4x2_0_lvl2.5, s0_lvl1_5 )#5
or2( cout_csa4x2_0_lvl2.5, w1.Adder0.csa4x2_0_lvl2.5, w2.Adder0.csa4x2_0_lvl2.5  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.5( s0_lvl2_5, t0_lvl2_5, sintcsa4x2_0_lvl2.5, t0_lvl1_4, cout_csa4x2_0_lvl2.4)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.5, sintcsa4x2_0_lvl2.5, t0_lvl1_4 )#5
xor2( s0_lvl2_5, w0.Adder1.csa4x2_0_lvl2.5, cout_csa4x2_0_lvl2.4 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.5, sintcsa4x2_0_lvl2.5, t0_lvl1_4 )#5
and2( w2.Adder1.csa4x2_0_lvl2.5, w0.Adder1.csa4x2_0_lvl2.5, cout_csa4x2_0_lvl2.4 )#5
or2( t0_lvl2_5, w1.Adder1.csa4x2_0_lvl2.5, w2.Adder1.csa4x2_0_lvl2.5  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.6, s0_lvl2_6,t0_lvl2_6,cout_csa4x2_0_lvl2.6,s8_lvl0_6,t8_lvl0_5,s0_lvl1_6,t0_lvl1_5,cout_csa4x2_0_lvl2.5) ;


   // adder1bit Adder0.csa4x2_0_lvl2.6( sintcsa4x2_0_lvl2.6, cout_csa4x2_0_lvl2.6, s8_lvl0_6, t8_lvl0_5, s0_lvl1_6)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.6, s8_lvl0_6, t8_lvl0_5 )#5
xor2( sintcsa4x2_0_lvl2.6, w0.Adder0.csa4x2_0_lvl2.6, s0_lvl1_6 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.6, s8_lvl0_6, t8_lvl0_5 )#5
and2( w2.Adder0.csa4x2_0_lvl2.6, w0.Adder0.csa4x2_0_lvl2.6, s0_lvl1_6 )#5
or2( cout_csa4x2_0_lvl2.6, w1.Adder0.csa4x2_0_lvl2.6, w2.Adder0.csa4x2_0_lvl2.6  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.6( s0_lvl2_6, t0_lvl2_6, sintcsa4x2_0_lvl2.6, t0_lvl1_5, cout_csa4x2_0_lvl2.5)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.6, sintcsa4x2_0_lvl2.6, t0_lvl1_5 )#5
xor2( s0_lvl2_6, w0.Adder1.csa4x2_0_lvl2.6, cout_csa4x2_0_lvl2.5 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.6, sintcsa4x2_0_lvl2.6, t0_lvl1_5 )#5
and2( w2.Adder1.csa4x2_0_lvl2.6, w0.Adder1.csa4x2_0_lvl2.6, cout_csa4x2_0_lvl2.5 )#5
or2( t0_lvl2_6, w1.Adder1.csa4x2_0_lvl2.6, w2.Adder1.csa4x2_0_lvl2.6  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.7, s0_lvl2_7,t0_lvl2_7,cout_csa4x2_0_lvl2.7,s8_lvl0_7,t8_lvl0_6,s0_lvl1_7,t0_lvl1_6,cout_csa4x2_0_lvl2.6) ;


   // adder1bit Adder0.csa4x2_0_lvl2.7( sintcsa4x2_0_lvl2.7, cout_csa4x2_0_lvl2.7, s8_lvl0_7, t8_lvl0_6, s0_lvl1_7)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.7, s8_lvl0_7, t8_lvl0_6 )#5
xor2( sintcsa4x2_0_lvl2.7, w0.Adder0.csa4x2_0_lvl2.7, s0_lvl1_7 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.7, s8_lvl0_7, t8_lvl0_6 )#5
and2( w2.Adder0.csa4x2_0_lvl2.7, w0.Adder0.csa4x2_0_lvl2.7, s0_lvl1_7 )#5
or2( cout_csa4x2_0_lvl2.7, w1.Adder0.csa4x2_0_lvl2.7, w2.Adder0.csa4x2_0_lvl2.7  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.7( s0_lvl2_7, t0_lvl2_7, sintcsa4x2_0_lvl2.7, t0_lvl1_6, cout_csa4x2_0_lvl2.6)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.7, sintcsa4x2_0_lvl2.7, t0_lvl1_6 )#5
xor2( s0_lvl2_7, w0.Adder1.csa4x2_0_lvl2.7, cout_csa4x2_0_lvl2.6 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.7, sintcsa4x2_0_lvl2.7, t0_lvl1_6 )#5
and2( w2.Adder1.csa4x2_0_lvl2.7, w0.Adder1.csa4x2_0_lvl2.7, cout_csa4x2_0_lvl2.6 )#5
or2( t0_lvl2_7, w1.Adder1.csa4x2_0_lvl2.7, w2.Adder1.csa4x2_0_lvl2.7  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.8, s0_lvl2_8,t0_lvl2_8,cout_csa4x2_0_lvl2.8,s8_lvl0_8,t8_lvl0_7,s0_lvl1_8,t0_lvl1_7,cout_csa4x2_0_lvl2.7) ;


   // adder1bit Adder0.csa4x2_0_lvl2.8( sintcsa4x2_0_lvl2.8, cout_csa4x2_0_lvl2.8, s8_lvl0_8, t8_lvl0_7, s0_lvl1_8)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.8, s8_lvl0_8, t8_lvl0_7 )#5
xor2( sintcsa4x2_0_lvl2.8, w0.Adder0.csa4x2_0_lvl2.8, s0_lvl1_8 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.8, s8_lvl0_8, t8_lvl0_7 )#5
and2( w2.Adder0.csa4x2_0_lvl2.8, w0.Adder0.csa4x2_0_lvl2.8, s0_lvl1_8 )#5
or2( cout_csa4x2_0_lvl2.8, w1.Adder0.csa4x2_0_lvl2.8, w2.Adder0.csa4x2_0_lvl2.8  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.8( s0_lvl2_8, t0_lvl2_8, sintcsa4x2_0_lvl2.8, t0_lvl1_7, cout_csa4x2_0_lvl2.7)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.8, sintcsa4x2_0_lvl2.8, t0_lvl1_7 )#5
xor2( s0_lvl2_8, w0.Adder1.csa4x2_0_lvl2.8, cout_csa4x2_0_lvl2.7 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.8, sintcsa4x2_0_lvl2.8, t0_lvl1_7 )#5
and2( w2.Adder1.csa4x2_0_lvl2.8, w0.Adder1.csa4x2_0_lvl2.8, cout_csa4x2_0_lvl2.7 )#5
or2( t0_lvl2_8, w1.Adder1.csa4x2_0_lvl2.8, w2.Adder1.csa4x2_0_lvl2.8  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.9, s0_lvl2_9,t0_lvl2_9,cout_csa4x2_0_lvl2.9,s8_lvl0_9,t8_lvl0_8,s0_lvl1_9,t0_lvl1_8,cout_csa4x2_0_lvl2.8) ;


   // adder1bit Adder0.csa4x2_0_lvl2.9( sintcsa4x2_0_lvl2.9, cout_csa4x2_0_lvl2.9, s8_lvl0_9, t8_lvl0_8, s0_lvl1_9)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.9, s8_lvl0_9, t8_lvl0_8 )#5
xor2( sintcsa4x2_0_lvl2.9, w0.Adder0.csa4x2_0_lvl2.9, s0_lvl1_9 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.9, s8_lvl0_9, t8_lvl0_8 )#5
and2( w2.Adder0.csa4x2_0_lvl2.9, w0.Adder0.csa4x2_0_lvl2.9, s0_lvl1_9 )#5
or2( cout_csa4x2_0_lvl2.9, w1.Adder0.csa4x2_0_lvl2.9, w2.Adder0.csa4x2_0_lvl2.9  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.9( s0_lvl2_9, t0_lvl2_9, sintcsa4x2_0_lvl2.9, t0_lvl1_8, cout_csa4x2_0_lvl2.8)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.9, sintcsa4x2_0_lvl2.9, t0_lvl1_8 )#5
xor2( s0_lvl2_9, w0.Adder1.csa4x2_0_lvl2.9, cout_csa4x2_0_lvl2.8 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.9, sintcsa4x2_0_lvl2.9, t0_lvl1_8 )#5
and2( w2.Adder1.csa4x2_0_lvl2.9, w0.Adder1.csa4x2_0_lvl2.9, cout_csa4x2_0_lvl2.8 )#5
or2( t0_lvl2_9, w1.Adder1.csa4x2_0_lvl2.9, w2.Adder1.csa4x2_0_lvl2.9  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.10, s0_lvl2_10,t0_lvl2_10,cout_csa4x2_0_lvl2.10,s8_lvl0_10,t8_lvl0_9,s0_lvl1_10,t0_lvl1_9,cout_csa4x2_0_lvl2.9) ;


   // adder1bit Adder0.csa4x2_0_lvl2.10( sintcsa4x2_0_lvl2.10, cout_csa4x2_0_lvl2.10, s8_lvl0_10, t8_lvl0_9, s0_lvl1_10)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.10, s8_lvl0_10, t8_lvl0_9 )#5
xor2( sintcsa4x2_0_lvl2.10, w0.Adder0.csa4x2_0_lvl2.10, s0_lvl1_10 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.10, s8_lvl0_10, t8_lvl0_9 )#5
and2( w2.Adder0.csa4x2_0_lvl2.10, w0.Adder0.csa4x2_0_lvl2.10, s0_lvl1_10 )#5
or2( cout_csa4x2_0_lvl2.10, w1.Adder0.csa4x2_0_lvl2.10, w2.Adder0.csa4x2_0_lvl2.10  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.10( s0_lvl2_10, t0_lvl2_10, sintcsa4x2_0_lvl2.10, t0_lvl1_9, cout_csa4x2_0_lvl2.9)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.10, sintcsa4x2_0_lvl2.10, t0_lvl1_9 )#5
xor2( s0_lvl2_10, w0.Adder1.csa4x2_0_lvl2.10, cout_csa4x2_0_lvl2.9 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.10, sintcsa4x2_0_lvl2.10, t0_lvl1_9 )#5
and2( w2.Adder1.csa4x2_0_lvl2.10, w0.Adder1.csa4x2_0_lvl2.10, cout_csa4x2_0_lvl2.9 )#5
or2( t0_lvl2_10, w1.Adder1.csa4x2_0_lvl2.10, w2.Adder1.csa4x2_0_lvl2.10  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.11, s0_lvl2_11,t0_lvl2_11,cout_csa4x2_0_lvl2.11,s8_lvl0_11,t8_lvl0_10,s0_lvl1_11,t0_lvl1_10,cout_csa4x2_0_lvl2.10) ;


   // adder1bit Adder0.csa4x2_0_lvl2.11( sintcsa4x2_0_lvl2.11, cout_csa4x2_0_lvl2.11, s8_lvl0_11, t8_lvl0_10, s0_lvl1_11)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.11, s8_lvl0_11, t8_lvl0_10 )#5
xor2( sintcsa4x2_0_lvl2.11, w0.Adder0.csa4x2_0_lvl2.11, s0_lvl1_11 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.11, s8_lvl0_11, t8_lvl0_10 )#5
and2( w2.Adder0.csa4x2_0_lvl2.11, w0.Adder0.csa4x2_0_lvl2.11, s0_lvl1_11 )#5
or2( cout_csa4x2_0_lvl2.11, w1.Adder0.csa4x2_0_lvl2.11, w2.Adder0.csa4x2_0_lvl2.11  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.11( s0_lvl2_11, t0_lvl2_11, sintcsa4x2_0_lvl2.11, t0_lvl1_10, cout_csa4x2_0_lvl2.10)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.11, sintcsa4x2_0_lvl2.11, t0_lvl1_10 )#5
xor2( s0_lvl2_11, w0.Adder1.csa4x2_0_lvl2.11, cout_csa4x2_0_lvl2.10 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.11, sintcsa4x2_0_lvl2.11, t0_lvl1_10 )#5
and2( w2.Adder1.csa4x2_0_lvl2.11, w0.Adder1.csa4x2_0_lvl2.11, cout_csa4x2_0_lvl2.10 )#5
or2( t0_lvl2_11, w1.Adder1.csa4x2_0_lvl2.11, w2.Adder1.csa4x2_0_lvl2.11  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.12, s0_lvl2_12,t0_lvl2_12,cout_csa4x2_0_lvl2.12,s8_lvl0_12,t8_lvl0_11,s0_lvl1_12,t0_lvl1_11,cout_csa4x2_0_lvl2.11) ;


   // adder1bit Adder0.csa4x2_0_lvl2.12( sintcsa4x2_0_lvl2.12, cout_csa4x2_0_lvl2.12, s8_lvl0_12, t8_lvl0_11, s0_lvl1_12)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.12, s8_lvl0_12, t8_lvl0_11 )#5
xor2( sintcsa4x2_0_lvl2.12, w0.Adder0.csa4x2_0_lvl2.12, s0_lvl1_12 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.12, s8_lvl0_12, t8_lvl0_11 )#5
and2( w2.Adder0.csa4x2_0_lvl2.12, w0.Adder0.csa4x2_0_lvl2.12, s0_lvl1_12 )#5
or2( cout_csa4x2_0_lvl2.12, w1.Adder0.csa4x2_0_lvl2.12, w2.Adder0.csa4x2_0_lvl2.12  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.12( s0_lvl2_12, t0_lvl2_12, sintcsa4x2_0_lvl2.12, t0_lvl1_11, cout_csa4x2_0_lvl2.11)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.12, sintcsa4x2_0_lvl2.12, t0_lvl1_11 )#5
xor2( s0_lvl2_12, w0.Adder1.csa4x2_0_lvl2.12, cout_csa4x2_0_lvl2.11 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.12, sintcsa4x2_0_lvl2.12, t0_lvl1_11 )#5
and2( w2.Adder1.csa4x2_0_lvl2.12, w0.Adder1.csa4x2_0_lvl2.12, cout_csa4x2_0_lvl2.11 )#5
or2( t0_lvl2_12, w1.Adder1.csa4x2_0_lvl2.12, w2.Adder1.csa4x2_0_lvl2.12  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.13, s0_lvl2_13,t0_lvl2_13,cout_csa4x2_0_lvl2.13,s8_lvl0_13,t8_lvl0_12,s0_lvl1_13,t0_lvl1_12,cout_csa4x2_0_lvl2.12) ;


   // adder1bit Adder0.csa4x2_0_lvl2.13( sintcsa4x2_0_lvl2.13, cout_csa4x2_0_lvl2.13, s8_lvl0_13, t8_lvl0_12, s0_lvl1_13)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.13, s8_lvl0_13, t8_lvl0_12 )#5
xor2( sintcsa4x2_0_lvl2.13, w0.Adder0.csa4x2_0_lvl2.13, s0_lvl1_13 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.13, s8_lvl0_13, t8_lvl0_12 )#5
and2( w2.Adder0.csa4x2_0_lvl2.13, w0.Adder0.csa4x2_0_lvl2.13, s0_lvl1_13 )#5
or2( cout_csa4x2_0_lvl2.13, w1.Adder0.csa4x2_0_lvl2.13, w2.Adder0.csa4x2_0_lvl2.13  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.13( s0_lvl2_13, t0_lvl2_13, sintcsa4x2_0_lvl2.13, t0_lvl1_12, cout_csa4x2_0_lvl2.12)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.13, sintcsa4x2_0_lvl2.13, t0_lvl1_12 )#5
xor2( s0_lvl2_13, w0.Adder1.csa4x2_0_lvl2.13, cout_csa4x2_0_lvl2.12 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.13, sintcsa4x2_0_lvl2.13, t0_lvl1_12 )#5
and2( w2.Adder1.csa4x2_0_lvl2.13, w0.Adder1.csa4x2_0_lvl2.13, cout_csa4x2_0_lvl2.12 )#5
or2( t0_lvl2_13, w1.Adder1.csa4x2_0_lvl2.13, w2.Adder1.csa4x2_0_lvl2.13  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.14, s0_lvl2_14,t0_lvl2_14,cout_csa4x2_0_lvl2.14,s8_lvl0_14,t8_lvl0_13,s0_lvl1_14,t0_lvl1_13,cout_csa4x2_0_lvl2.13) ;


   // adder1bit Adder0.csa4x2_0_lvl2.14( sintcsa4x2_0_lvl2.14, cout_csa4x2_0_lvl2.14, s8_lvl0_14, t8_lvl0_13, s0_lvl1_14)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.14, s8_lvl0_14, t8_lvl0_13 )#5
xor2( sintcsa4x2_0_lvl2.14, w0.Adder0.csa4x2_0_lvl2.14, s0_lvl1_14 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.14, s8_lvl0_14, t8_lvl0_13 )#5
and2( w2.Adder0.csa4x2_0_lvl2.14, w0.Adder0.csa4x2_0_lvl2.14, s0_lvl1_14 )#5
or2( cout_csa4x2_0_lvl2.14, w1.Adder0.csa4x2_0_lvl2.14, w2.Adder0.csa4x2_0_lvl2.14  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.14( s0_lvl2_14, t0_lvl2_14, sintcsa4x2_0_lvl2.14, t0_lvl1_13, cout_csa4x2_0_lvl2.13)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.14, sintcsa4x2_0_lvl2.14, t0_lvl1_13 )#5
xor2( s0_lvl2_14, w0.Adder1.csa4x2_0_lvl2.14, cout_csa4x2_0_lvl2.13 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.14, sintcsa4x2_0_lvl2.14, t0_lvl1_13 )#5
and2( w2.Adder1.csa4x2_0_lvl2.14, w0.Adder1.csa4x2_0_lvl2.14, cout_csa4x2_0_lvl2.13 )#5
or2( t0_lvl2_14, w1.Adder1.csa4x2_0_lvl2.14, w2.Adder1.csa4x2_0_lvl2.14  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.15, s0_lvl2_15,t0_lvl2_15,cout_csa4x2_0_lvl2.15,s8_lvl0_15,t8_lvl0_14,s0_lvl1_15,t0_lvl1_14,cout_csa4x2_0_lvl2.14) ;


   // adder1bit Adder0.csa4x2_0_lvl2.15( sintcsa4x2_0_lvl2.15, cout_csa4x2_0_lvl2.15, s8_lvl0_15, t8_lvl0_14, s0_lvl1_15)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.15, s8_lvl0_15, t8_lvl0_14 )#5
xor2( sintcsa4x2_0_lvl2.15, w0.Adder0.csa4x2_0_lvl2.15, s0_lvl1_15 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.15, s8_lvl0_15, t8_lvl0_14 )#5
and2( w2.Adder0.csa4x2_0_lvl2.15, w0.Adder0.csa4x2_0_lvl2.15, s0_lvl1_15 )#5
or2( cout_csa4x2_0_lvl2.15, w1.Adder0.csa4x2_0_lvl2.15, w2.Adder0.csa4x2_0_lvl2.15  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.15( s0_lvl2_15, t0_lvl2_15, sintcsa4x2_0_lvl2.15, t0_lvl1_14, cout_csa4x2_0_lvl2.14)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.15, sintcsa4x2_0_lvl2.15, t0_lvl1_14 )#5
xor2( s0_lvl2_15, w0.Adder1.csa4x2_0_lvl2.15, cout_csa4x2_0_lvl2.14 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.15, sintcsa4x2_0_lvl2.15, t0_lvl1_14 )#5
and2( w2.Adder1.csa4x2_0_lvl2.15, w0.Adder1.csa4x2_0_lvl2.15, cout_csa4x2_0_lvl2.14 )#5
or2( t0_lvl2_15, w1.Adder1.csa4x2_0_lvl2.15, w2.Adder1.csa4x2_0_lvl2.15  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.16, s0_lvl2_16,t0_lvl2_16,cout_csa4x2_0_lvl2.16,s8_lvl0_16,t8_lvl0_15,s0_lvl1_16,t0_lvl1_15,cout_csa4x2_0_lvl2.15) ;


   // adder1bit Adder0.csa4x2_0_lvl2.16( sintcsa4x2_0_lvl2.16, cout_csa4x2_0_lvl2.16, s8_lvl0_16, t8_lvl0_15, s0_lvl1_16)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.16, s8_lvl0_16, t8_lvl0_15 )#5
xor2( sintcsa4x2_0_lvl2.16, w0.Adder0.csa4x2_0_lvl2.16, s0_lvl1_16 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.16, s8_lvl0_16, t8_lvl0_15 )#5
and2( w2.Adder0.csa4x2_0_lvl2.16, w0.Adder0.csa4x2_0_lvl2.16, s0_lvl1_16 )#5
or2( cout_csa4x2_0_lvl2.16, w1.Adder0.csa4x2_0_lvl2.16, w2.Adder0.csa4x2_0_lvl2.16  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.16( s0_lvl2_16, t0_lvl2_16, sintcsa4x2_0_lvl2.16, t0_lvl1_15, cout_csa4x2_0_lvl2.15)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.16, sintcsa4x2_0_lvl2.16, t0_lvl1_15 )#5
xor2( s0_lvl2_16, w0.Adder1.csa4x2_0_lvl2.16, cout_csa4x2_0_lvl2.15 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.16, sintcsa4x2_0_lvl2.16, t0_lvl1_15 )#5
and2( w2.Adder1.csa4x2_0_lvl2.16, w0.Adder1.csa4x2_0_lvl2.16, cout_csa4x2_0_lvl2.15 )#5
or2( t0_lvl2_16, w1.Adder1.csa4x2_0_lvl2.16, w2.Adder1.csa4x2_0_lvl2.16  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.17, s0_lvl2_17,t0_lvl2_17,cout_csa4x2_0_lvl2.17,s8_lvl0_17,t8_lvl0_16,s0_lvl1_17,t0_lvl1_16,cout_csa4x2_0_lvl2.16) ;


   // adder1bit Adder0.csa4x2_0_lvl2.17( sintcsa4x2_0_lvl2.17, cout_csa4x2_0_lvl2.17, s8_lvl0_17, t8_lvl0_16, s0_lvl1_17)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.17, s8_lvl0_17, t8_lvl0_16 )#5
xor2( sintcsa4x2_0_lvl2.17, w0.Adder0.csa4x2_0_lvl2.17, s0_lvl1_17 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.17, s8_lvl0_17, t8_lvl0_16 )#5
and2( w2.Adder0.csa4x2_0_lvl2.17, w0.Adder0.csa4x2_0_lvl2.17, s0_lvl1_17 )#5
or2( cout_csa4x2_0_lvl2.17, w1.Adder0.csa4x2_0_lvl2.17, w2.Adder0.csa4x2_0_lvl2.17  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.17( s0_lvl2_17, t0_lvl2_17, sintcsa4x2_0_lvl2.17, t0_lvl1_16, cout_csa4x2_0_lvl2.16)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.17, sintcsa4x2_0_lvl2.17, t0_lvl1_16 )#5
xor2( s0_lvl2_17, w0.Adder1.csa4x2_0_lvl2.17, cout_csa4x2_0_lvl2.16 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.17, sintcsa4x2_0_lvl2.17, t0_lvl1_16 )#5
and2( w2.Adder1.csa4x2_0_lvl2.17, w0.Adder1.csa4x2_0_lvl2.17, cout_csa4x2_0_lvl2.16 )#5
or2( t0_lvl2_17, w1.Adder1.csa4x2_0_lvl2.17, w2.Adder1.csa4x2_0_lvl2.17  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.18, s0_lvl2_18,t0_lvl2_18,cout_csa4x2_0_lvl2.18,s8_lvl0_18,t8_lvl0_17,s0_lvl1_18,t0_lvl1_17,cout_csa4x2_0_lvl2.17) ;


   // adder1bit Adder0.csa4x2_0_lvl2.18( sintcsa4x2_0_lvl2.18, cout_csa4x2_0_lvl2.18, s8_lvl0_18, t8_lvl0_17, s0_lvl1_18)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.18, s8_lvl0_18, t8_lvl0_17 )#5
xor2( sintcsa4x2_0_lvl2.18, w0.Adder0.csa4x2_0_lvl2.18, s0_lvl1_18 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.18, s8_lvl0_18, t8_lvl0_17 )#5
and2( w2.Adder0.csa4x2_0_lvl2.18, w0.Adder0.csa4x2_0_lvl2.18, s0_lvl1_18 )#5
or2( cout_csa4x2_0_lvl2.18, w1.Adder0.csa4x2_0_lvl2.18, w2.Adder0.csa4x2_0_lvl2.18  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.18( s0_lvl2_18, t0_lvl2_18, sintcsa4x2_0_lvl2.18, t0_lvl1_17, cout_csa4x2_0_lvl2.17)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.18, sintcsa4x2_0_lvl2.18, t0_lvl1_17 )#5
xor2( s0_lvl2_18, w0.Adder1.csa4x2_0_lvl2.18, cout_csa4x2_0_lvl2.17 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.18, sintcsa4x2_0_lvl2.18, t0_lvl1_17 )#5
and2( w2.Adder1.csa4x2_0_lvl2.18, w0.Adder1.csa4x2_0_lvl2.18, cout_csa4x2_0_lvl2.17 )#5
or2( t0_lvl2_18, w1.Adder1.csa4x2_0_lvl2.18, w2.Adder1.csa4x2_0_lvl2.18  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.19, s0_lvl2_19,t0_lvl2_19,cout_csa4x2_0_lvl2.19,s8_lvl0_19,t8_lvl0_18,s0_lvl1_19,t0_lvl1_18,cout_csa4x2_0_lvl2.18) ;


   // adder1bit Adder0.csa4x2_0_lvl2.19( sintcsa4x2_0_lvl2.19, cout_csa4x2_0_lvl2.19, s8_lvl0_19, t8_lvl0_18, s0_lvl1_19)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.19, s8_lvl0_19, t8_lvl0_18 )#5
xor2( sintcsa4x2_0_lvl2.19, w0.Adder0.csa4x2_0_lvl2.19, s0_lvl1_19 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.19, s8_lvl0_19, t8_lvl0_18 )#5
and2( w2.Adder0.csa4x2_0_lvl2.19, w0.Adder0.csa4x2_0_lvl2.19, s0_lvl1_19 )#5
or2( cout_csa4x2_0_lvl2.19, w1.Adder0.csa4x2_0_lvl2.19, w2.Adder0.csa4x2_0_lvl2.19  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.19( s0_lvl2_19, t0_lvl2_19, sintcsa4x2_0_lvl2.19, t0_lvl1_18, cout_csa4x2_0_lvl2.18)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.19, sintcsa4x2_0_lvl2.19, t0_lvl1_18 )#5
xor2( s0_lvl2_19, w0.Adder1.csa4x2_0_lvl2.19, cout_csa4x2_0_lvl2.18 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.19, sintcsa4x2_0_lvl2.19, t0_lvl1_18 )#5
and2( w2.Adder1.csa4x2_0_lvl2.19, w0.Adder1.csa4x2_0_lvl2.19, cout_csa4x2_0_lvl2.18 )#5
or2( t0_lvl2_19, w1.Adder1.csa4x2_0_lvl2.19, w2.Adder1.csa4x2_0_lvl2.19  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.20, s0_lvl2_20,t0_lvl2_20,cout_csa4x2_0_lvl2.20,s8_lvl0_20,t8_lvl0_19,s0_lvl1_20,t0_lvl1_19,cout_csa4x2_0_lvl2.19) ;


   // adder1bit Adder0.csa4x2_0_lvl2.20( sintcsa4x2_0_lvl2.20, cout_csa4x2_0_lvl2.20, s8_lvl0_20, t8_lvl0_19, s0_lvl1_20)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.20, s8_lvl0_20, t8_lvl0_19 )#5
xor2( sintcsa4x2_0_lvl2.20, w0.Adder0.csa4x2_0_lvl2.20, s0_lvl1_20 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.20, s8_lvl0_20, t8_lvl0_19 )#5
and2( w2.Adder0.csa4x2_0_lvl2.20, w0.Adder0.csa4x2_0_lvl2.20, s0_lvl1_20 )#5
or2( cout_csa4x2_0_lvl2.20, w1.Adder0.csa4x2_0_lvl2.20, w2.Adder0.csa4x2_0_lvl2.20  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.20( s0_lvl2_20, t0_lvl2_20, sintcsa4x2_0_lvl2.20, t0_lvl1_19, cout_csa4x2_0_lvl2.19)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.20, sintcsa4x2_0_lvl2.20, t0_lvl1_19 )#5
xor2( s0_lvl2_20, w0.Adder1.csa4x2_0_lvl2.20, cout_csa4x2_0_lvl2.19 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.20, sintcsa4x2_0_lvl2.20, t0_lvl1_19 )#5
and2( w2.Adder1.csa4x2_0_lvl2.20, w0.Adder1.csa4x2_0_lvl2.20, cout_csa4x2_0_lvl2.19 )#5
or2( t0_lvl2_20, w1.Adder1.csa4x2_0_lvl2.20, w2.Adder1.csa4x2_0_lvl2.20  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.21, s0_lvl2_21,t0_lvl2_21,cout_csa4x2_0_lvl2.21,s8_lvl0_21,t8_lvl0_20,s0_lvl1_21,t0_lvl1_20,cout_csa4x2_0_lvl2.20) ;


   // adder1bit Adder0.csa4x2_0_lvl2.21( sintcsa4x2_0_lvl2.21, cout_csa4x2_0_lvl2.21, s8_lvl0_21, t8_lvl0_20, s0_lvl1_21)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.21, s8_lvl0_21, t8_lvl0_20 )#5
xor2( sintcsa4x2_0_lvl2.21, w0.Adder0.csa4x2_0_lvl2.21, s0_lvl1_21 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.21, s8_lvl0_21, t8_lvl0_20 )#5
and2( w2.Adder0.csa4x2_0_lvl2.21, w0.Adder0.csa4x2_0_lvl2.21, s0_lvl1_21 )#5
or2( cout_csa4x2_0_lvl2.21, w1.Adder0.csa4x2_0_lvl2.21, w2.Adder0.csa4x2_0_lvl2.21  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.21( s0_lvl2_21, t0_lvl2_21, sintcsa4x2_0_lvl2.21, t0_lvl1_20, cout_csa4x2_0_lvl2.20)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.21, sintcsa4x2_0_lvl2.21, t0_lvl1_20 )#5
xor2( s0_lvl2_21, w0.Adder1.csa4x2_0_lvl2.21, cout_csa4x2_0_lvl2.20 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.21, sintcsa4x2_0_lvl2.21, t0_lvl1_20 )#5
and2( w2.Adder1.csa4x2_0_lvl2.21, w0.Adder1.csa4x2_0_lvl2.21, cout_csa4x2_0_lvl2.20 )#5
or2( t0_lvl2_21, w1.Adder1.csa4x2_0_lvl2.21, w2.Adder1.csa4x2_0_lvl2.21  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.22, s0_lvl2_22,t0_lvl2_22,cout_csa4x2_0_lvl2.22,s8_lvl0_22,t8_lvl0_21,s0_lvl1_22,t0_lvl1_21,cout_csa4x2_0_lvl2.21) ;


   // adder1bit Adder0.csa4x2_0_lvl2.22( sintcsa4x2_0_lvl2.22, cout_csa4x2_0_lvl2.22, s8_lvl0_22, t8_lvl0_21, s0_lvl1_22)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.22, s8_lvl0_22, t8_lvl0_21 )#5
xor2( sintcsa4x2_0_lvl2.22, w0.Adder0.csa4x2_0_lvl2.22, s0_lvl1_22 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.22, s8_lvl0_22, t8_lvl0_21 )#5
and2( w2.Adder0.csa4x2_0_lvl2.22, w0.Adder0.csa4x2_0_lvl2.22, s0_lvl1_22 )#5
or2( cout_csa4x2_0_lvl2.22, w1.Adder0.csa4x2_0_lvl2.22, w2.Adder0.csa4x2_0_lvl2.22  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.22( s0_lvl2_22, t0_lvl2_22, sintcsa4x2_0_lvl2.22, t0_lvl1_21, cout_csa4x2_0_lvl2.21)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.22, sintcsa4x2_0_lvl2.22, t0_lvl1_21 )#5
xor2( s0_lvl2_22, w0.Adder1.csa4x2_0_lvl2.22, cout_csa4x2_0_lvl2.21 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.22, sintcsa4x2_0_lvl2.22, t0_lvl1_21 )#5
and2( w2.Adder1.csa4x2_0_lvl2.22, w0.Adder1.csa4x2_0_lvl2.22, cout_csa4x2_0_lvl2.21 )#5
or2( t0_lvl2_22, w1.Adder1.csa4x2_0_lvl2.22, w2.Adder1.csa4x2_0_lvl2.22  )#5

// end adder1bit


   // end csa4x2


end

netlist
   // csa4x2 (csa4x2_0_lvl2.23, s0_lvl2_23,t0_lvl2_23,cout_csa4x2_0_lvl2.23,s8_lvl0_23,t8_lvl0_22,s0_lvl1_23,t0_lvl1_22,cout_csa4x2_0_lvl2.22) ;


   // adder1bit Adder0.csa4x2_0_lvl2.23( sintcsa4x2_0_lvl2.23, cout_csa4x2_0_lvl2.23, s8_lvl0_23, t8_lvl0_22, s0_lvl1_23)

// sum 
xor2( w0.Adder0.csa4x2_0_lvl2.23, s8_lvl0_23, t8_lvl0_22 )#5
xor2( sintcsa4x2_0_lvl2.23, w0.Adder0.csa4x2_0_lvl2.23, s0_lvl1_23 )#5

//cout
and2( w1.Adder0.csa4x2_0_lvl2.23, s8_lvl0_23, t8_lvl0_22 )#5
and2( w2.Adder0.csa4x2_0_lvl2.23, w0.Adder0.csa4x2_0_lvl2.23, s0_lvl1_23 )#5
or2( cout_csa4x2_0_lvl2.23, w1.Adder0.csa4x2_0_lvl2.23, w2.Adder0.csa4x2_0_lvl2.23  )#5

// end adder1bit


   // adder1bit Adder1.csa4x2_0_lvl2.23( s0_lvl2_23, t0_lvl2_23, sintcsa4x2_0_lvl2.23, t0_lvl1_22, cout_csa4x2_0_lvl2.22)

// sum 
xor2( w0.Adder1.csa4x2_0_lvl2.23, sintcsa4x2_0_lvl2.23, t0_lvl1_22 )#5
xor2( s0_lvl2_23, w0.Adder1.csa4x2_0_lvl2.23, cout_csa4x2_0_lvl2.22 )#5

//cout
and2( w1.Adder1.csa4x2_0_lvl2.23, sintcsa4x2_0_lvl2.23, t0_lvl1_22 )#5
and2( w2.Adder1.csa4x2_0_lvl2.23, w0.Adder1.csa4x2_0_lvl2.23, cout_csa4x2_0_lvl2.22 )#5
or2( t0_lvl2_23, w1.Adder1.csa4x2_0_lvl2.23, w2.Adder1.csa4x2_0_lvl2.23  )#5

// end adder1bit


   // end csa4x2


end

// genKoggeStoneVec(2*numBits, outVec, "cout", currRow->[0], currRow->[1], 'GND' );

netlist
// PGgen (g0,p0,s0_lvl2_0,GND)
   xor2(p0,s0_lvl2_0,GND)#5
   and2(g0,s0_lvl2_0,GND)#5


end

netlist
// PGgen (g1,p1,s0_lvl2_1,t0_lvl2_0)
   xor2(p1,s0_lvl2_1,t0_lvl2_0)#5
   and2(g1,s0_lvl2_1,t0_lvl2_0)#5


end

netlist
// PGgen (g2,p2,s0_lvl2_2,t0_lvl2_1)
   xor2(p2,s0_lvl2_2,t0_lvl2_1)#5
   and2(g2,s0_lvl2_2,t0_lvl2_1)#5


end

netlist
// PGgen (g3,p3,s0_lvl2_3,t0_lvl2_2)
   xor2(p3,s0_lvl2_3,t0_lvl2_2)#5
   and2(g3,s0_lvl2_3,t0_lvl2_2)#5


end

netlist
// PGgen (g4,p4,s0_lvl2_4,t0_lvl2_3)
   xor2(p4,s0_lvl2_4,t0_lvl2_3)#5
   and2(g4,s0_lvl2_4,t0_lvl2_3)#5


end

netlist
// PGgen (g5,p5,s0_lvl2_5,t0_lvl2_4)
   xor2(p5,s0_lvl2_5,t0_lvl2_4)#5
   and2(g5,s0_lvl2_5,t0_lvl2_4)#5


end

netlist
// PGgen (g6,p6,s0_lvl2_6,t0_lvl2_5)
   xor2(p6,s0_lvl2_6,t0_lvl2_5)#5
   and2(g6,s0_lvl2_6,t0_lvl2_5)#5


end

netlist
// PGgen (g7,p7,s0_lvl2_7,t0_lvl2_6)
   xor2(p7,s0_lvl2_7,t0_lvl2_6)#5
   and2(g7,s0_lvl2_7,t0_lvl2_6)#5


end

netlist
// PGgen (g8,p8,s0_lvl2_8,t0_lvl2_7)
   xor2(p8,s0_lvl2_8,t0_lvl2_7)#5
   and2(g8,s0_lvl2_8,t0_lvl2_7)#5


end

netlist
// PGgen (g9,p9,s0_lvl2_9,t0_lvl2_8)
   xor2(p9,s0_lvl2_9,t0_lvl2_8)#5
   and2(g9,s0_lvl2_9,t0_lvl2_8)#5


end

netlist
// PGgen (g10,p10,s0_lvl2_10,t0_lvl2_9)
   xor2(p10,s0_lvl2_10,t0_lvl2_9)#5
   and2(g10,s0_lvl2_10,t0_lvl2_9)#5


end

netlist
// PGgen (g11,p11,s0_lvl2_11,t0_lvl2_10)
   xor2(p11,s0_lvl2_11,t0_lvl2_10)#5
   and2(g11,s0_lvl2_11,t0_lvl2_10)#5


end

netlist
// PGgen (g12,p12,s0_lvl2_12,t0_lvl2_11)
   xor2(p12,s0_lvl2_12,t0_lvl2_11)#5
   and2(g12,s0_lvl2_12,t0_lvl2_11)#5


end

netlist
// PGgen (g13,p13,s0_lvl2_13,t0_lvl2_12)
   xor2(p13,s0_lvl2_13,t0_lvl2_12)#5
   and2(g13,s0_lvl2_13,t0_lvl2_12)#5


end

netlist
// PGgen (g14,p14,s0_lvl2_14,t0_lvl2_13)
   xor2(p14,s0_lvl2_14,t0_lvl2_13)#5
   and2(g14,s0_lvl2_14,t0_lvl2_13)#5


end

netlist
// PGgen (g15,p15,s0_lvl2_15,t0_lvl2_14)
   xor2(p15,s0_lvl2_15,t0_lvl2_14)#5
   and2(g15,s0_lvl2_15,t0_lvl2_14)#5


end

netlist
// PGgen (g16,p16,s0_lvl2_16,t0_lvl2_15)
   xor2(p16,s0_lvl2_16,t0_lvl2_15)#5
   and2(g16,s0_lvl2_16,t0_lvl2_15)#5


end

netlist
// PGgen (g17,p17,s0_lvl2_17,t0_lvl2_16)
   xor2(p17,s0_lvl2_17,t0_lvl2_16)#5
   and2(g17,s0_lvl2_17,t0_lvl2_16)#5


end

netlist
// PGgen (g18,p18,s0_lvl2_18,t0_lvl2_17)
   xor2(p18,s0_lvl2_18,t0_lvl2_17)#5
   and2(g18,s0_lvl2_18,t0_lvl2_17)#5


end

netlist
// PGgen (g19,p19,s0_lvl2_19,t0_lvl2_18)
   xor2(p19,s0_lvl2_19,t0_lvl2_18)#5
   and2(g19,s0_lvl2_19,t0_lvl2_18)#5


end

netlist
// PGgen (g20,p20,s0_lvl2_20,t0_lvl2_19)
   xor2(p20,s0_lvl2_20,t0_lvl2_19)#5
   and2(g20,s0_lvl2_20,t0_lvl2_19)#5


end

netlist
// PGgen (g21,p21,s0_lvl2_21,t0_lvl2_20)
   xor2(p21,s0_lvl2_21,t0_lvl2_20)#5
   and2(g21,s0_lvl2_21,t0_lvl2_20)#5


end

netlist
// PGgen (g22,p22,s0_lvl2_22,t0_lvl2_21)
   xor2(p22,s0_lvl2_22,t0_lvl2_21)#5
   and2(g22,s0_lvl2_22,t0_lvl2_21)#5


end

netlist
// PGgen (g23,p23,s0_lvl2_23,t0_lvl2_22)
   xor2(p23,s0_lvl2_23,t0_lvl2_22)#5
   and2(g23,s0_lvl2_23,t0_lvl2_22)#5


end

netlist
// Gcombine (g_0_GND, g0, GND, p0 )
   and2(w0g_0_GND, p0, GND )#5
   or2( g_0_GND, w0g_0_GND, g0 )#5


end

netlist
// PGcombine (g_1_0,p_1_0,g1,p1,g0,p0)
   and2(  w0g_1_0, p1, g0 )#5
   or2( g_1_0,  w0g_1_0, g1 )#5
   and2( p_1_0,  p1, p0)#5


end

netlist
// PGcombine (g_2_1,p_2_1,g2,p2,g1,p1)
   and2(  w0g_2_1, p2, g1 )#5
   or2( g_2_1,  w0g_2_1, g2 )#5
   and2( p_2_1,  p2, p1)#5


end

netlist
// PGcombine (g_3_2,p_3_2,g3,p3,g2,p2)
   and2(  w0g_3_2, p3, g2 )#5
   or2( g_3_2,  w0g_3_2, g3 )#5
   and2( p_3_2,  p3, p2)#5


end

netlist
// PGcombine (g_4_3,p_4_3,g4,p4,g3,p3)
   and2(  w0g_4_3, p4, g3 )#5
   or2( g_4_3,  w0g_4_3, g4 )#5
   and2( p_4_3,  p4, p3)#5


end

netlist
// PGcombine (g_5_4,p_5_4,g5,p5,g4,p4)
   and2(  w0g_5_4, p5, g4 )#5
   or2( g_5_4,  w0g_5_4, g5 )#5
   and2( p_5_4,  p5, p4)#5


end

netlist
// PGcombine (g_6_5,p_6_5,g6,p6,g5,p5)
   and2(  w0g_6_5, p6, g5 )#5
   or2( g_6_5,  w0g_6_5, g6 )#5
   and2( p_6_5,  p6, p5)#5


end

netlist
// PGcombine (g_7_6,p_7_6,g7,p7,g6,p6)
   and2(  w0g_7_6, p7, g6 )#5
   or2( g_7_6,  w0g_7_6, g7 )#5
   and2( p_7_6,  p7, p6)#5


end

netlist
// PGcombine (g_8_7,p_8_7,g8,p8,g7,p7)
   and2(  w0g_8_7, p8, g7 )#5
   or2( g_8_7,  w0g_8_7, g8 )#5
   and2( p_8_7,  p8, p7)#5


end

netlist
// PGcombine (g_9_8,p_9_8,g9,p9,g8,p8)
   and2(  w0g_9_8, p9, g8 )#5
   or2( g_9_8,  w0g_9_8, g9 )#5
   and2( p_9_8,  p9, p8)#5


end

netlist
// PGcombine (g_10_9,p_10_9,g10,p10,g9,p9)
   and2(  w0g_10_9, p10, g9 )#5
   or2( g_10_9,  w0g_10_9, g10 )#5
   and2( p_10_9,  p10, p9)#5


end

netlist
// PGcombine (g_11_10,p_11_10,g11,p11,g10,p10)
   and2(  w0g_11_10, p11, g10 )#5
   or2( g_11_10,  w0g_11_10, g11 )#5
   and2( p_11_10,  p11, p10)#5


end

netlist
// PGcombine (g_12_11,p_12_11,g12,p12,g11,p11)
   and2(  w0g_12_11, p12, g11 )#5
   or2( g_12_11,  w0g_12_11, g12 )#5
   and2( p_12_11,  p12, p11)#5


end

netlist
// PGcombine (g_13_12,p_13_12,g13,p13,g12,p12)
   and2(  w0g_13_12, p13, g12 )#5
   or2( g_13_12,  w0g_13_12, g13 )#5
   and2( p_13_12,  p13, p12)#5


end

netlist
// PGcombine (g_14_13,p_14_13,g14,p14,g13,p13)
   and2(  w0g_14_13, p14, g13 )#5
   or2( g_14_13,  w0g_14_13, g14 )#5
   and2( p_14_13,  p14, p13)#5


end

netlist
// PGcombine (g_15_14,p_15_14,g15,p15,g14,p14)
   and2(  w0g_15_14, p15, g14 )#5
   or2( g_15_14,  w0g_15_14, g15 )#5
   and2( p_15_14,  p15, p14)#5


end

netlist
// PGcombine (g_16_15,p_16_15,g16,p16,g15,p15)
   and2(  w0g_16_15, p16, g15 )#5
   or2( g_16_15,  w0g_16_15, g16 )#5
   and2( p_16_15,  p16, p15)#5


end

netlist
// PGcombine (g_17_16,p_17_16,g17,p17,g16,p16)
   and2(  w0g_17_16, p17, g16 )#5
   or2( g_17_16,  w0g_17_16, g17 )#5
   and2( p_17_16,  p17, p16)#5


end

netlist
// PGcombine (g_18_17,p_18_17,g18,p18,g17,p17)
   and2(  w0g_18_17, p18, g17 )#5
   or2( g_18_17,  w0g_18_17, g18 )#5
   and2( p_18_17,  p18, p17)#5


end

netlist
// PGcombine (g_19_18,p_19_18,g19,p19,g18,p18)
   and2(  w0g_19_18, p19, g18 )#5
   or2( g_19_18,  w0g_19_18, g19 )#5
   and2( p_19_18,  p19, p18)#5


end

netlist
// PGcombine (g_20_19,p_20_19,g20,p20,g19,p19)
   and2(  w0g_20_19, p20, g19 )#5
   or2( g_20_19,  w0g_20_19, g20 )#5
   and2( p_20_19,  p20, p19)#5


end

netlist
// PGcombine (g_21_20,p_21_20,g21,p21,g20,p20)
   and2(  w0g_21_20, p21, g20 )#5
   or2( g_21_20,  w0g_21_20, g21 )#5
   and2( p_21_20,  p21, p20)#5


end

netlist
// PGcombine (g_22_21,p_22_21,g22,p22,g21,p21)
   and2(  w0g_22_21, p22, g21 )#5
   or2( g_22_21,  w0g_22_21, g22 )#5
   and2( p_22_21,  p22, p21)#5


end

netlist
// PGcombine (g_23_22,p_23_22,g23,p23,g22,p22)
   and2(  w0g_23_22, p23, g22 )#5
   or2( g_23_22,  w0g_23_22, g23 )#5
   and2( p_23_22,  p23, p22)#5


end

netlist
// Gcombine (g_1_GND, g_1_0, GND, p_1_0 )
   and2(w0g_1_GND, p_1_0, GND )#5
   or2( g_1_GND, w0g_1_GND, g_1_0 )#5


end

netlist
// Gcombine (g_2_GND, g_2_1, g_0_GND, p_2_1 )
   and2(w0g_2_GND, p_2_1, g_0_GND )#5
   or2( g_2_GND, w0g_2_GND, g_2_1 )#5


end

netlist
// PGcombine (g_3_0,p_3_0,g_3_2,p_3_2,g_1_0,p_1_0)
   and2(  w0g_3_0, p_3_2, g_1_0 )#5
   or2( g_3_0,  w0g_3_0, g_3_2 )#5
   and2( p_3_0,  p_3_2, p_1_0)#5


end

netlist
// PGcombine (g_4_1,p_4_1,g_4_3,p_4_3,g_2_1,p_2_1)
   and2(  w0g_4_1, p_4_3, g_2_1 )#5
   or2( g_4_1,  w0g_4_1, g_4_3 )#5
   and2( p_4_1,  p_4_3, p_2_1)#5


end

netlist
// PGcombine (g_5_2,p_5_2,g_5_4,p_5_4,g_3_2,p_3_2)
   and2(  w0g_5_2, p_5_4, g_3_2 )#5
   or2( g_5_2,  w0g_5_2, g_5_4 )#5
   and2( p_5_2,  p_5_4, p_3_2)#5


end

netlist
// PGcombine (g_6_3,p_6_3,g_6_5,p_6_5,g_4_3,p_4_3)
   and2(  w0g_6_3, p_6_5, g_4_3 )#5
   or2( g_6_3,  w0g_6_3, g_6_5 )#5
   and2( p_6_3,  p_6_5, p_4_3)#5


end

netlist
// PGcombine (g_7_4,p_7_4,g_7_6,p_7_6,g_5_4,p_5_4)
   and2(  w0g_7_4, p_7_6, g_5_4 )#5
   or2( g_7_4,  w0g_7_4, g_7_6 )#5
   and2( p_7_4,  p_7_6, p_5_4)#5


end

netlist
// PGcombine (g_8_5,p_8_5,g_8_7,p_8_7,g_6_5,p_6_5)
   and2(  w0g_8_5, p_8_7, g_6_5 )#5
   or2( g_8_5,  w0g_8_5, g_8_7 )#5
   and2( p_8_5,  p_8_7, p_6_5)#5


end

netlist
// PGcombine (g_9_6,p_9_6,g_9_8,p_9_8,g_7_6,p_7_6)
   and2(  w0g_9_6, p_9_8, g_7_6 )#5
   or2( g_9_6,  w0g_9_6, g_9_8 )#5
   and2( p_9_6,  p_9_8, p_7_6)#5


end

netlist
// PGcombine (g_10_7,p_10_7,g_10_9,p_10_9,g_8_7,p_8_7)
   and2(  w0g_10_7, p_10_9, g_8_7 )#5
   or2( g_10_7,  w0g_10_7, g_10_9 )#5
   and2( p_10_7,  p_10_9, p_8_7)#5


end

netlist
// PGcombine (g_11_8,p_11_8,g_11_10,p_11_10,g_9_8,p_9_8)
   and2(  w0g_11_8, p_11_10, g_9_8 )#5
   or2( g_11_8,  w0g_11_8, g_11_10 )#5
   and2( p_11_8,  p_11_10, p_9_8)#5


end

netlist
// PGcombine (g_12_9,p_12_9,g_12_11,p_12_11,g_10_9,p_10_9)
   and2(  w0g_12_9, p_12_11, g_10_9 )#5
   or2( g_12_9,  w0g_12_9, g_12_11 )#5
   and2( p_12_9,  p_12_11, p_10_9)#5


end

netlist
// PGcombine (g_13_10,p_13_10,g_13_12,p_13_12,g_11_10,p_11_10)
   and2(  w0g_13_10, p_13_12, g_11_10 )#5
   or2( g_13_10,  w0g_13_10, g_13_12 )#5
   and2( p_13_10,  p_13_12, p_11_10)#5


end

netlist
// PGcombine (g_14_11,p_14_11,g_14_13,p_14_13,g_12_11,p_12_11)
   and2(  w0g_14_11, p_14_13, g_12_11 )#5
   or2( g_14_11,  w0g_14_11, g_14_13 )#5
   and2( p_14_11,  p_14_13, p_12_11)#5


end

netlist
// PGcombine (g_15_12,p_15_12,g_15_14,p_15_14,g_13_12,p_13_12)
   and2(  w0g_15_12, p_15_14, g_13_12 )#5
   or2( g_15_12,  w0g_15_12, g_15_14 )#5
   and2( p_15_12,  p_15_14, p_13_12)#5


end

netlist
// PGcombine (g_16_13,p_16_13,g_16_15,p_16_15,g_14_13,p_14_13)
   and2(  w0g_16_13, p_16_15, g_14_13 )#5
   or2( g_16_13,  w0g_16_13, g_16_15 )#5
   and2( p_16_13,  p_16_15, p_14_13)#5


end

netlist
// PGcombine (g_17_14,p_17_14,g_17_16,p_17_16,g_15_14,p_15_14)
   and2(  w0g_17_14, p_17_16, g_15_14 )#5
   or2( g_17_14,  w0g_17_14, g_17_16 )#5
   and2( p_17_14,  p_17_16, p_15_14)#5


end

netlist
// PGcombine (g_18_15,p_18_15,g_18_17,p_18_17,g_16_15,p_16_15)
   and2(  w0g_18_15, p_18_17, g_16_15 )#5
   or2( g_18_15,  w0g_18_15, g_18_17 )#5
   and2( p_18_15,  p_18_17, p_16_15)#5


end

netlist
// PGcombine (g_19_16,p_19_16,g_19_18,p_19_18,g_17_16,p_17_16)
   and2(  w0g_19_16, p_19_18, g_17_16 )#5
   or2( g_19_16,  w0g_19_16, g_19_18 )#5
   and2( p_19_16,  p_19_18, p_17_16)#5


end

netlist
// PGcombine (g_20_17,p_20_17,g_20_19,p_20_19,g_18_17,p_18_17)
   and2(  w0g_20_17, p_20_19, g_18_17 )#5
   or2( g_20_17,  w0g_20_17, g_20_19 )#5
   and2( p_20_17,  p_20_19, p_18_17)#5


end

netlist
// PGcombine (g_21_18,p_21_18,g_21_20,p_21_20,g_19_18,p_19_18)
   and2(  w0g_21_18, p_21_20, g_19_18 )#5
   or2( g_21_18,  w0g_21_18, g_21_20 )#5
   and2( p_21_18,  p_21_20, p_19_18)#5


end

netlist
// PGcombine (g_22_19,p_22_19,g_22_21,p_22_21,g_20_19,p_20_19)
   and2(  w0g_22_19, p_22_21, g_20_19 )#5
   or2( g_22_19,  w0g_22_19, g_22_21 )#5
   and2( p_22_19,  p_22_21, p_20_19)#5


end

netlist
// PGcombine (g_23_20,p_23_20,g_23_22,p_23_22,g_21_20,p_21_20)
   and2(  w0g_23_20, p_23_22, g_21_20 )#5
   or2( g_23_20,  w0g_23_20, g_23_22 )#5
   and2( p_23_20,  p_23_22, p_21_20)#5


end

netlist
// Gcombine (g_3_GND, g_3_0, GND, p_3_0 )
   and2(w0g_3_GND, p_3_0, GND )#5
   or2( g_3_GND, w0g_3_GND, g_3_0 )#5


end

netlist
// Gcombine (g_4_GND, g_4_1, g_0_GND, p_4_1 )
   and2(w0g_4_GND, p_4_1, g_0_GND )#5
   or2( g_4_GND, w0g_4_GND, g_4_1 )#5


end

netlist
// Gcombine (g_5_GND, g_5_2, g_1_GND, p_5_2 )
   and2(w0g_5_GND, p_5_2, g_1_GND )#5
   or2( g_5_GND, w0g_5_GND, g_5_2 )#5


end

netlist
// Gcombine (g_6_GND, g_6_3, g_2_GND, p_6_3 )
   and2(w0g_6_GND, p_6_3, g_2_GND )#5
   or2( g_6_GND, w0g_6_GND, g_6_3 )#5


end

netlist
// PGcombine (g_7_0,p_7_0,g_7_4,p_7_4,g_3_0,p_3_0)
   and2(  w0g_7_0, p_7_4, g_3_0 )#5
   or2( g_7_0,  w0g_7_0, g_7_4 )#5
   and2( p_7_0,  p_7_4, p_3_0)#5


end

netlist
// PGcombine (g_8_1,p_8_1,g_8_5,p_8_5,g_4_1,p_4_1)
   and2(  w0g_8_1, p_8_5, g_4_1 )#5
   or2( g_8_1,  w0g_8_1, g_8_5 )#5
   and2( p_8_1,  p_8_5, p_4_1)#5


end

netlist
// PGcombine (g_9_2,p_9_2,g_9_6,p_9_6,g_5_2,p_5_2)
   and2(  w0g_9_2, p_9_6, g_5_2 )#5
   or2( g_9_2,  w0g_9_2, g_9_6 )#5
   and2( p_9_2,  p_9_6, p_5_2)#5


end

netlist
// PGcombine (g_10_3,p_10_3,g_10_7,p_10_7,g_6_3,p_6_3)
   and2(  w0g_10_3, p_10_7, g_6_3 )#5
   or2( g_10_3,  w0g_10_3, g_10_7 )#5
   and2( p_10_3,  p_10_7, p_6_3)#5


end

netlist
// PGcombine (g_11_4,p_11_4,g_11_8,p_11_8,g_7_4,p_7_4)
   and2(  w0g_11_4, p_11_8, g_7_4 )#5
   or2( g_11_4,  w0g_11_4, g_11_8 )#5
   and2( p_11_4,  p_11_8, p_7_4)#5


end

netlist
// PGcombine (g_12_5,p_12_5,g_12_9,p_12_9,g_8_5,p_8_5)
   and2(  w0g_12_5, p_12_9, g_8_5 )#5
   or2( g_12_5,  w0g_12_5, g_12_9 )#5
   and2( p_12_5,  p_12_9, p_8_5)#5


end

netlist
// PGcombine (g_13_6,p_13_6,g_13_10,p_13_10,g_9_6,p_9_6)
   and2(  w0g_13_6, p_13_10, g_9_6 )#5
   or2( g_13_6,  w0g_13_6, g_13_10 )#5
   and2( p_13_6,  p_13_10, p_9_6)#5


end

netlist
// PGcombine (g_14_7,p_14_7,g_14_11,p_14_11,g_10_7,p_10_7)
   and2(  w0g_14_7, p_14_11, g_10_7 )#5
   or2( g_14_7,  w0g_14_7, g_14_11 )#5
   and2( p_14_7,  p_14_11, p_10_7)#5


end

netlist
// PGcombine (g_15_8,p_15_8,g_15_12,p_15_12,g_11_8,p_11_8)
   and2(  w0g_15_8, p_15_12, g_11_8 )#5
   or2( g_15_8,  w0g_15_8, g_15_12 )#5
   and2( p_15_8,  p_15_12, p_11_8)#5


end

netlist
// PGcombine (g_16_9,p_16_9,g_16_13,p_16_13,g_12_9,p_12_9)
   and2(  w0g_16_9, p_16_13, g_12_9 )#5
   or2( g_16_9,  w0g_16_9, g_16_13 )#5
   and2( p_16_9,  p_16_13, p_12_9)#5


end

netlist
// PGcombine (g_17_10,p_17_10,g_17_14,p_17_14,g_13_10,p_13_10)
   and2(  w0g_17_10, p_17_14, g_13_10 )#5
   or2( g_17_10,  w0g_17_10, g_17_14 )#5
   and2( p_17_10,  p_17_14, p_13_10)#5


end

netlist
// PGcombine (g_18_11,p_18_11,g_18_15,p_18_15,g_14_11,p_14_11)
   and2(  w0g_18_11, p_18_15, g_14_11 )#5
   or2( g_18_11,  w0g_18_11, g_18_15 )#5
   and2( p_18_11,  p_18_15, p_14_11)#5


end

netlist
// PGcombine (g_19_12,p_19_12,g_19_16,p_19_16,g_15_12,p_15_12)
   and2(  w0g_19_12, p_19_16, g_15_12 )#5
   or2( g_19_12,  w0g_19_12, g_19_16 )#5
   and2( p_19_12,  p_19_16, p_15_12)#5


end

netlist
// PGcombine (g_20_13,p_20_13,g_20_17,p_20_17,g_16_13,p_16_13)
   and2(  w0g_20_13, p_20_17, g_16_13 )#5
   or2( g_20_13,  w0g_20_13, g_20_17 )#5
   and2( p_20_13,  p_20_17, p_16_13)#5


end

netlist
// PGcombine (g_21_14,p_21_14,g_21_18,p_21_18,g_17_14,p_17_14)
   and2(  w0g_21_14, p_21_18, g_17_14 )#5
   or2( g_21_14,  w0g_21_14, g_21_18 )#5
   and2( p_21_14,  p_21_18, p_17_14)#5


end

netlist
// PGcombine (g_22_15,p_22_15,g_22_19,p_22_19,g_18_15,p_18_15)
   and2(  w0g_22_15, p_22_19, g_18_15 )#5
   or2( g_22_15,  w0g_22_15, g_22_19 )#5
   and2( p_22_15,  p_22_19, p_18_15)#5


end

netlist
// PGcombine (g_23_16,p_23_16,g_23_20,p_23_20,g_19_16,p_19_16)
   and2(  w0g_23_16, p_23_20, g_19_16 )#5
   or2( g_23_16,  w0g_23_16, g_23_20 )#5
   and2( p_23_16,  p_23_20, p_19_16)#5


end

netlist
// Gcombine (g_7_GND, g_7_0, GND, p_7_0 )
   and2(w0g_7_GND, p_7_0, GND )#5
   or2( g_7_GND, w0g_7_GND, g_7_0 )#5


end

netlist
// Gcombine (g_8_GND, g_8_1, g_0_GND, p_8_1 )
   and2(w0g_8_GND, p_8_1, g_0_GND )#5
   or2( g_8_GND, w0g_8_GND, g_8_1 )#5


end

netlist
// Gcombine (g_9_GND, g_9_2, g_1_GND, p_9_2 )
   and2(w0g_9_GND, p_9_2, g_1_GND )#5
   or2( g_9_GND, w0g_9_GND, g_9_2 )#5


end

netlist
// Gcombine (g_10_GND, g_10_3, g_2_GND, p_10_3 )
   and2(w0g_10_GND, p_10_3, g_2_GND )#5
   or2( g_10_GND, w0g_10_GND, g_10_3 )#5


end

netlist
// Gcombine (g_11_GND, g_11_4, g_3_GND, p_11_4 )
   and2(w0g_11_GND, p_11_4, g_3_GND )#5
   or2( g_11_GND, w0g_11_GND, g_11_4 )#5


end

netlist
// Gcombine (g_12_GND, g_12_5, g_4_GND, p_12_5 )
   and2(w0g_12_GND, p_12_5, g_4_GND )#5
   or2( g_12_GND, w0g_12_GND, g_12_5 )#5


end

netlist
// Gcombine (g_13_GND, g_13_6, g_5_GND, p_13_6 )
   and2(w0g_13_GND, p_13_6, g_5_GND )#5
   or2( g_13_GND, w0g_13_GND, g_13_6 )#5


end

netlist
// Gcombine (g_14_GND, g_14_7, g_6_GND, p_14_7 )
   and2(w0g_14_GND, p_14_7, g_6_GND )#5
   or2( g_14_GND, w0g_14_GND, g_14_7 )#5


end

netlist
// PGcombine (g_15_0,p_15_0,g_15_8,p_15_8,g_7_0,p_7_0)
   and2(  w0g_15_0, p_15_8, g_7_0 )#5
   or2( g_15_0,  w0g_15_0, g_15_8 )#5
   and2( p_15_0,  p_15_8, p_7_0)#5


end

netlist
// PGcombine (g_16_1,p_16_1,g_16_9,p_16_9,g_8_1,p_8_1)
   and2(  w0g_16_1, p_16_9, g_8_1 )#5
   or2( g_16_1,  w0g_16_1, g_16_9 )#5
   and2( p_16_1,  p_16_9, p_8_1)#5


end

netlist
// PGcombine (g_17_2,p_17_2,g_17_10,p_17_10,g_9_2,p_9_2)
   and2(  w0g_17_2, p_17_10, g_9_2 )#5
   or2( g_17_2,  w0g_17_2, g_17_10 )#5
   and2( p_17_2,  p_17_10, p_9_2)#5


end

netlist
// PGcombine (g_18_3,p_18_3,g_18_11,p_18_11,g_10_3,p_10_3)
   and2(  w0g_18_3, p_18_11, g_10_3 )#5
   or2( g_18_3,  w0g_18_3, g_18_11 )#5
   and2( p_18_3,  p_18_11, p_10_3)#5


end

netlist
// PGcombine (g_19_4,p_19_4,g_19_12,p_19_12,g_11_4,p_11_4)
   and2(  w0g_19_4, p_19_12, g_11_4 )#5
   or2( g_19_4,  w0g_19_4, g_19_12 )#5
   and2( p_19_4,  p_19_12, p_11_4)#5


end

netlist
// PGcombine (g_20_5,p_20_5,g_20_13,p_20_13,g_12_5,p_12_5)
   and2(  w0g_20_5, p_20_13, g_12_5 )#5
   or2( g_20_5,  w0g_20_5, g_20_13 )#5
   and2( p_20_5,  p_20_13, p_12_5)#5


end

netlist
// PGcombine (g_21_6,p_21_6,g_21_14,p_21_14,g_13_6,p_13_6)
   and2(  w0g_21_6, p_21_14, g_13_6 )#5
   or2( g_21_6,  w0g_21_6, g_21_14 )#5
   and2( p_21_6,  p_21_14, p_13_6)#5


end

netlist
// PGcombine (g_22_7,p_22_7,g_22_15,p_22_15,g_14_7,p_14_7)
   and2(  w0g_22_7, p_22_15, g_14_7 )#5
   or2( g_22_7,  w0g_22_7, g_22_15 )#5
   and2( p_22_7,  p_22_15, p_14_7)#5


end

netlist
// PGcombine (g_23_8,p_23_8,g_23_16,p_23_16,g_15_8,p_15_8)
   and2(  w0g_23_8, p_23_16, g_15_8 )#5
   or2( g_23_8,  w0g_23_8, g_23_16 )#5
   and2( p_23_8,  p_23_16, p_15_8)#5


end

netlist
// Gcombine (g_15_GND, g_15_0, GND, p_15_0 )
   and2(w0g_15_GND, p_15_0, GND )#5
   or2( g_15_GND, w0g_15_GND, g_15_0 )#5


end

netlist
// Gcombine (g_16_GND, g_16_1, g_0_GND, p_16_1 )
   and2(w0g_16_GND, p_16_1, g_0_GND )#5
   or2( g_16_GND, w0g_16_GND, g_16_1 )#5


end

netlist
// Gcombine (g_17_GND, g_17_2, g_1_GND, p_17_2 )
   and2(w0g_17_GND, p_17_2, g_1_GND )#5
   or2( g_17_GND, w0g_17_GND, g_17_2 )#5


end

netlist
// Gcombine (g_18_GND, g_18_3, g_2_GND, p_18_3 )
   and2(w0g_18_GND, p_18_3, g_2_GND )#5
   or2( g_18_GND, w0g_18_GND, g_18_3 )#5


end

netlist
// Gcombine (g_19_GND, g_19_4, g_3_GND, p_19_4 )
   and2(w0g_19_GND, p_19_4, g_3_GND )#5
   or2( g_19_GND, w0g_19_GND, g_19_4 )#5


end

netlist
// Gcombine (g_20_GND, g_20_5, g_4_GND, p_20_5 )
   and2(w0g_20_GND, p_20_5, g_4_GND )#5
   or2( g_20_GND, w0g_20_GND, g_20_5 )#5


end

netlist
// Gcombine (g_21_GND, g_21_6, g_5_GND, p_21_6 )
   and2(w0g_21_GND, p_21_6, g_5_GND )#5
   or2( g_21_GND, w0g_21_GND, g_21_6 )#5


end

netlist
// Gcombine (g_22_GND, g_22_7, g_6_GND, p_22_7 )
   and2(w0g_22_GND, p_22_7, g_6_GND )#5
   or2( g_22_GND, w0g_22_GND, g_22_7 )#5


end

netlist
// Gcombine (cout, g_23_8, g_7_GND, p_23_8 )
   and2(w0cout, p_23_8, g_7_GND )#5
   or2( cout, w0cout, g_23_8 )#5


end

netlist

xor2( m0, p0,GND )#5 

xor2( m1, p1,g_0_GND )#5

xor2( m2, p2,g_1_GND )#5

xor2( m3, p3,g_2_GND )#5

xor2( m4, p4,g_3_GND )#5

xor2( m5, p5,g_4_GND )#5

xor2( m6, p6,g_5_GND )#5

xor2( m7, p7,g_6_GND )#5

xor2( m8, p8,g_7_GND )#5

xor2( m9, p9,g_8_GND )#5

xor2( m10, p10,g_9_GND )#5

xor2( m11, p11,g_10_GND )#5

xor2( m12, p12,g_11_GND )#5

xor2( m13, p13,g_12_GND )#5

xor2( m14, p14,g_13_GND )#5

xor2( m15, p15,g_14_GND )#5

xor2( m16, p16,g_15_GND )#5

xor2( m17, p17,g_16_GND )#5

xor2( m18, p18,g_17_GND )#5

xor2( m19, p19,g_18_GND )#5

xor2( m20, p20,g_19_GND )#5

xor2( m21, p21,g_20_GND )#5

xor2( m22, p22,g_21_GND )#5

xor2( m23, p23,g_22_GND )#5

end
